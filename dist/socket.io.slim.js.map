{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///socket.io.slim.js","webpack:///webpack/bootstrap 88d7fe5ffbf976b6bdd8","webpack:///./lib/index.js","webpack:///./lib/url.js","webpack:///./~/parseuri/index.js","webpack:///./support/noop.js","webpack:///./~/socket.io-msgpack-parser/index.js","webpack:///./~/notepack.io/lib/index.js","webpack:///./~/notepack.io/browser/encode.js","webpack:///./~/notepack.io/browser/decode.js","webpack:///./~/socket.io-msgpack-parser/~/component-emitter/index.js","webpack:///./lib/manager.js","webpack:///./~/engine.io-client/lib/index.js","webpack:///./~/engine.io-client/lib/socket.js","webpack:///./~/engine.io-client/lib/transports/index.js","webpack:///./~/engine.io-client/lib/xmlhttprequest.js","webpack:///./~/has-cors/index.js","webpack:///./~/engine.io-client/lib/transports/polling-xhr.js","webpack:///./~/engine.io-client/lib/transports/polling.js","webpack:///./~/engine.io-client/lib/transport.js","webpack:///./~/engine.io-client/~/engine.io-parser/lib/browser.js","webpack:///./~/engine.io-client/~/engine.io-parser/lib/keys.js","webpack:///./~/has-binary2/index.js","webpack:///./~/buffer/index.js","webpack:///./~/base64-js/index.js","webpack:///./~/ieee754/index.js","webpack:///./~/buffer/~/isarray/index.js","webpack:///./~/has-binary2/~/isarray/index.js","webpack:///./~/arraybuffer.slice/index.js","webpack:///./~/after/index.js","webpack:///./~/engine.io-client/~/engine.io-parser/lib/utf8.js","webpack:///./~/base64-arraybuffer/lib/base64-arraybuffer.js","webpack:///./~/blob/index.js","webpack:///./~/component-emitter/index.js","webpack:///./~/parseqs/index.js","webpack:///./~/component-inherit/index.js","webpack:///./~/yeast/index.js","webpack:///./~/engine.io-client/lib/transports/polling-jsonp.js","webpack:///./~/engine.io-client/lib/transports/websocket.js","webpack:///./~/indexof/index.js","webpack:///./lib/socket.js","webpack:///./~/to-array/index.js","webpack:///./lib/on.js","webpack:///./~/component-bind/index.js","webpack:///./~/backo2/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","lookup","uri","opts","_typeof","undefined","io","parsed","url","source","path","sameNamespace","cache","nsps","newConnection","forceNew","multiplex","Manager","query","socket","Symbol","iterator","obj","constructor","prototype","parser","managers","protocol","connect","Socket","global","loc","location","host","charAt","test","parseuri","port","ipv6","indexOf","href","re","parts","str","src","b","e","substring","replace","length","exec","i","authority","ipv6uri","Encoder","Decoder","isDataValid","decoded","type","CONNECT","DISCONNECT","data","ERROR","isString","Array","isArray","msgpack","Emitter","EVENT","ACK","BINARY_EVENT","BINARY_ACK","isInteger","Number","value","isFinite","Math","floor","encode","packet","callback","JSON","stringify","add","parseJSON","parseBinary","parse","checkPacket","emit","decode","isTypeValid","Error","nsp","isAckValid","destroy","utf8Write","view","offset","l","charCodeAt","setUint8","utf8Length","_encode","bytes","defers","hi","lo","size","push","_str","_length","_offset","pow","_float","Date","time","getTime","ArrayBuffer","byteLength","_bin","toJSON","keys","key","allKeys","Object","buf","DataView","deferIndex","deferWritten","nextOffset","defer","deferLength","bin","Uint8Array","j","setFloat64","buffer","_buffer","_view","isView","byteOffset","utf8Read","string","chr","end","byte","getUint8","toString","String","fromCharCode","decoder","_parse","_array","_map","slice","prefix","getUint16","getUint32","getInt8","getFloat32","getFloat64","getInt16","getInt32","mixin","on","addEventListener","event","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","args","len","listeners","hasListeners","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","Backoff","min","max","jitter","timeout","readyState","connecting","lastPing","encoding","packetBuffer","_parser","encoder","autoConnect","open","eio","bind","has","hasOwnProperty","emitAll","updateSocketIds","generateId","engine","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","self","skipReconnect","openSub","onopen","errorSub","cleanup","err","timer","setTimeout","close","clearTimeout","onping","onpong","ondata","ondecoded","onerror","onConnecting","index","encodedPackets","write","options","processPacketQueue","pack","shift","subsLength","sub","disconnect","reset","onclose","reason","delay","duration","onreconnect","attempt","hostname","secure","agent","parseqs","upgrade","forceJSONP","jsonp","forceBase64","enablesXDR","timestampParam","timestampRequests","transports","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","binaryType","onlyBinaryUpgrades","perMessageDeflate","threshold","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","freeGlobal","extraHeaders","localAddress","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","clone","o","priorWebsocketSuccess","Transport","createTransport","name","EIO","transport","sid","requestTimeout","protocols","setTransport","onDrain","onPacket","onError","onClose","probe","onTransportOpen","upgradeLosesBinary","supportsBinary","failed","send","msg","upgrading","pause","flush","freezeTransport","error","onTransportClose","onupgrade","to","onOpen","onHandshake","setPing","code","filterUpgrades","onHeartbeat","ping","sendPacket","writable","compress","cleanupAndClose","waitForUpgrade","desc","filteredUpgrades","polling","xhr","xd","xs","isSSL","xdomain","xscheme","XMLHttpRequest","XHR","JSONP","websocket","hasCORS","XDomainRequest","concat","join","empty","Polling","Request","method","async","isBinary","create","unloadHandler","requests","abort","inherit","request","doWrite","req","sendXhr","doPoll","onData","pollXhr","setDisableHeaderCheck","setRequestHeader","withCredentials","hasXDR","onload","onLoad","responseText","onreadystatechange","contentType","getResponseHeader","responseType","status","document","requestsCount","onSuccess","fromError","response","attachEvent","hasXHR2","yeast","doOpen","poll","onPause","total","decodePayload","doClose","packets","callbackfn","encodePayload","schema","b64","description","decodePacket","encodeBase64Object","message","encodeArrayBuffer","encodeBase64Packet","contentArray","resultBuffer","encodeBlobAsArrayBuffer","fr","FileReader","encodePacket","result","readAsArrayBuffer","encodeBlob","dontSendBlobs","blob","Blob","tryDecode","utf8","strict","map","ary","each","done","next","after","eachWithIndex","el","base64encoder","hasBinary","sliceBuffer","isAndroid","navigator","userAgent","isPhantomJS","pong","noop","packetslist","utf8encode","base64","encoded","split","readAsDataURL","b64data","typed","basic","btoa","utf8decode","decodeBase64Packet","substr","asArray","rest","setLengthHeader","encodeOne","doneCallback","encodePayloadAsBlob","encodePayloadAsArrayBuffer","results","decodePayloadAsBinary","n","ret","totalLength","reduce","acc","resultArray","bufferIndex","forEach","ab","lenStr","parseInt","binaryIdentifier","lengthAry","bufferTail","buffers","tailArray","msgLength","arr","Buffer","isBuffer","withNativeBlob","withNativeFile","File","typedArraySupport","__proto__","foo","subarray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","from","TypeError","fromArrayBuffer","fromString","fromObject","assertSize","alloc","fill","checked","isEncoding","actual","fromArrayLike","array","copy","isnan","SlowBuffer","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","val","dir","isNaN","arrayIndexOf","lastIndexOf","read","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","hexWrite","remaining","strLen","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","fromByteArray","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","out","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","trim","units","leadSurrogate","byteArray","toByteArray","dst","INSPECT_MAX_BYTES","poolSize","_augment","species","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","a","x","y","list","pos","swap16","swap32","swap64","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","getLens","validLen","placeHoldersLen","lens","_byteLength","tmp","Arr","curByte","revLookup","tripletToBase64","num","encodeChunk","uint8","output","extraBytes","maxChunkLength","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","abs","log","LN2","arraybuffer","abv","ii","count","err_cb","proxy","bail","ucs2decode","extra","counter","ucs2encode","stringFromCharCode","checkScalarValue","toUpperCase","createByte","encodeCodePoint","symbol","byteString","readContinuationByte","byteIndex","byteCount","continuationByte","decodeSymbol","byte1","byte2","byte3","byte4","version","chars","encoded1","encoded2","encoded3","encoded4","bufferLength","mapArrayBufferViews","chunk","BlobBuilderConstructor","bb","BlobBuilder","part","append","getBlob","BlobConstructor","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","alphabet","now","prev","seed","JSONPPolling","___eio","script","rNewline","rEscapedNewline","parentNode","removeChild","form","iframe","createElement","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","isUAgecko","complete","initIframe","html","iframeId","area","className","style","position","top","left","setAttribute","action","submit","WS","usingBrowserWebSocket","BrowserWebSocket","WebSocket","NodeWebSocket","MozWebSocket","window","check","headers","ws","supports","binary","addEventListeners","onmessage","ev","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","toArray","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","subEvents","unshift","flags","pop","onpacket","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","ms","factor","rand","random","deviation"],"mappings":"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","file":"socket.io.slim.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"io\"] = factory();\n\telse\n\t\troot[\"io\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"io\"] = factory();\n\telse\n\t\troot[\"io\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar url = __webpack_require__(1);\n\tvar parser = __webpack_require__(4);\n\tvar Manager = __webpack_require__(9);\n\tvar debug = __webpack_require__(3)('socket.io-client');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = exports = lookup;\n\t\n\t/**\n\t * Managers cache.\n\t */\n\t\n\tvar cache = exports.managers = {};\n\t\n\t/**\n\t * Looks up an existing `Manager` for multiplexing.\n\t * If the user summons:\n\t *\n\t *   `io('http://localhost/a');`\n\t *   `io('http://localhost/b');`\n\t *\n\t * We reuse the existing instance based on same scheme/port/host,\n\t * and we initialize sockets for each namespace.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction lookup(uri, opts) {\n\t  if ((typeof uri === 'undefined' ? 'undefined' : _typeof(uri)) === 'object') {\n\t    opts = uri;\n\t    uri = undefined;\n\t  }\n\t\n\t  opts = opts || {};\n\t\n\t  var parsed = url(uri);\n\t  var source = parsed.source;\n\t  var id = parsed.id;\n\t  var path = parsed.path;\n\t  var sameNamespace = cache[id] && path in cache[id].nsps;\n\t  var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;\n\t\n\t  var io;\n\t\n\t  if (newConnection) {\n\t\n\t    io = Manager(source, opts);\n\t  } else {\n\t    if (!cache[id]) {\n\t\n\t      cache[id] = Manager(source, opts);\n\t    }\n\t    io = cache[id];\n\t  }\n\t  if (parsed.query && !opts.query) {\n\t    opts.query = parsed.query;\n\t  }\n\t  return io.socket(parsed.path, opts);\n\t}\n\t\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\texports.protocol = parser.protocol;\n\t\n\t/**\n\t * `connect`.\n\t *\n\t * @param {String} uri\n\t * @api public\n\t */\n\t\n\texports.connect = lookup;\n\t\n\t/**\n\t * Expose constructors for standalone build.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Manager = __webpack_require__(9);\n\texports.Socket = __webpack_require__(39);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar parseuri = __webpack_require__(2);\n\tvar debug = __webpack_require__(3)('socket.io-client:url');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = url;\n\t\n\t/**\n\t * URL parser.\n\t *\n\t * @param {String} url\n\t * @param {Object} An object meant to mimic window.location.\n\t *                 Defaults to window.location.\n\t * @api public\n\t */\n\t\n\tfunction url(uri, loc) {\n\t  var obj = uri;\n\t\n\t  // default to window.location\n\t  loc = loc || global.location;\n\t  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\t\n\t  // relative path support\n\t  if ('string' === typeof uri) {\n\t    if ('/' === uri.charAt(0)) {\n\t      if ('/' === uri.charAt(1)) {\n\t        uri = loc.protocol + uri;\n\t      } else {\n\t        uri = loc.host + uri;\n\t      }\n\t    }\n\t\n\t    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n\t\n\t      if ('undefined' !== typeof loc) {\n\t        uri = loc.protocol + '//' + uri;\n\t      } else {\n\t        uri = 'https://' + uri;\n\t      }\n\t    }\n\t\n\t    // parse\n\t\n\t    obj = parseuri(uri);\n\t  }\n\t\n\t  // make sure we treat `localhost:80` and `localhost` equally\n\t  if (!obj.port) {\n\t    if (/^(http|ws)$/.test(obj.protocol)) {\n\t      obj.port = '80';\n\t    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n\t      obj.port = '443';\n\t    }\n\t  }\n\t\n\t  obj.path = obj.path || '/';\n\t\n\t  var ipv6 = obj.host.indexOf(':') !== -1;\n\t  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\t\n\t  // define unique id\n\t  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n\t  // define href\n\t  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : ':' + obj.port);\n\t\n\t  return obj;\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * Parses an URI\r\n\t *\r\n\t * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n\t * @api private\r\n\t */\r\n\t\r\n\tvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\t\r\n\tvar parts = [\r\n\t    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n\t];\r\n\t\r\n\tmodule.exports = function parseuri(str) {\r\n\t    var src = str,\r\n\t        b = str.indexOf('['),\r\n\t        e = str.indexOf(']');\r\n\t\r\n\t    if (b != -1 && e != -1) {\r\n\t        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n\t    }\r\n\t\r\n\t    var m = re.exec(str || ''),\r\n\t        uri = {},\r\n\t        i = 14;\r\n\t\r\n\t    while (i--) {\r\n\t        uri[parts[i]] = m[i] || '';\r\n\t    }\r\n\t\r\n\t    if (b != -1 && e != -1) {\r\n\t        uri.source = src;\r\n\t        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n\t        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n\t        uri.ipv6uri = true;\r\n\t    }\r\n\t\r\n\t    return uri;\r\n\t};\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = function () {\n\t  return function () {};\n\t};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\tvar msgpack = __webpack_require__(5);\n\tvar Emitter = __webpack_require__(8);\n\t\n\t/**\n\t * Packet types (see https://github.com/socketio/socket.io-protocol)\n\t */\n\t\n\texports.CONNECT = 0;\n\texports.DISCONNECT = 1;\n\texports.EVENT = 2;\n\texports.ACK = 3;\n\texports.ERROR = 4;\n\texports.BINARY_EVENT = 5;\n\texports.BINARY_ACK = 6;\n\t\n\tvar isInteger = Number.isInteger || function (value) {\n\t  return typeof value === 'number' &&\n\t    isFinite(value) &&\n\t    Math.floor(value) === value;\n\t};\n\t\n\tvar isString = function (value) { return typeof value === 'string'; };\n\t\n\tfunction Encoder () {}\n\t\n\tEncoder.prototype.encode = function (packet, callback) {\n\t  switch (packet.type) {\n\t    case exports.CONNECT:\n\t    case exports.DISCONNECT:\n\t    case exports.ERROR:\n\t      return callback([ JSON.stringify(packet) ]);\n\t    default:\n\t      return callback([ msgpack.encode(packet) ]);\n\t  }\n\t};\n\t\n\tfunction Decoder () {}\n\t\n\tEmitter(Decoder.prototype);\n\t\n\tDecoder.prototype.add = function (obj) {\n\t  if (typeof obj === 'string') {\n\t    this.parseJSON(obj);\n\t  } else {\n\t    this.parseBinary(obj);\n\t  }\n\t};\n\t\n\tDecoder.prototype.parseJSON = function (obj) {\n\t  var decoded = JSON.parse(obj);\n\t  this.checkPacket(decoded);\n\t  this.emit('decoded', decoded);\n\t};\n\t\n\tDecoder.prototype.parseBinary = function (obj) {\n\t  var decoded = msgpack.decode(obj);\n\t  this.checkPacket(decoded);\n\t  this.emit('decoded', decoded);\n\t};\n\t\n\tfunction isDataValid (decoded) {\n\t  switch (decoded.type) {\n\t    case exports.CONNECT:\n\t    case exports.DISCONNECT:\n\t      return decoded.data === undefined;\n\t    case exports.ERROR:\n\t      return isString(decoded.data);\n\t    default:\n\t      return Array.isArray(decoded.data);\n\t  }\n\t}\n\t\n\tDecoder.prototype.checkPacket = function (decoded) {\n\t  var isTypeValid = isInteger(decoded.type) && decoded.type >= exports.CONNECT && decoded.type <= exports.BINARY_ACK;\n\t  if (!isTypeValid) {\n\t    throw new Error('invalid packet type');\n\t  }\n\t\n\t  if (!isString(decoded.nsp)) {\n\t    throw new Error('invalid namespace');\n\t  }\n\t\n\t  if (!isDataValid(decoded)) {\n\t    throw new Error('invalid payload');\n\t  }\n\t\n\t  var isAckValid = decoded.id === undefined || isInteger(decoded.id);\n\t  if (!isAckValid) {\n\t    throw new Error('invalid packet id');\n\t  }\n\t};\n\t\n\tDecoder.prototype.destroy = function () {};\n\t\n\texports.Encoder = Encoder;\n\texports.Decoder = Decoder;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\texports.encode = __webpack_require__(6);\n\texports.decode = __webpack_require__(7);\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tfunction utf8Write(view, offset, str) {\n\t  var c = 0;\n\t  for (var i = 0, l = str.length; i < l; i++) {\n\t    c = str.charCodeAt(i);\n\t    if (c < 0x80) {\n\t      view.setUint8(offset++, c);\n\t    }\n\t    else if (c < 0x800) {\n\t      view.setUint8(offset++, 0xc0 | (c >> 6));\n\t      view.setUint8(offset++, 0x80 | (c & 0x3f));\n\t    }\n\t    else if (c < 0xd800 || c >= 0xe000) {\n\t      view.setUint8(offset++, 0xe0 | (c >> 12));\n\t      view.setUint8(offset++, 0x80 | (c >> 6) & 0x3f);\n\t      view.setUint8(offset++, 0x80 | (c & 0x3f));\n\t    }\n\t    else {\n\t      i++;\n\t      c = 0x10000 + (((c & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\n\t      view.setUint8(offset++, 0xf0 | (c >> 18));\n\t      view.setUint8(offset++, 0x80 | (c >> 12) & 0x3f);\n\t      view.setUint8(offset++, 0x80 | (c >> 6) & 0x3f);\n\t      view.setUint8(offset++, 0x80 | (c & 0x3f));\n\t    }\n\t  }\n\t}\n\t\n\tfunction utf8Length(str) {\n\t  var c = 0, length = 0;\n\t  for (var i = 0, l = str.length; i < l; i++) {\n\t    c = str.charCodeAt(i);\n\t    if (c < 0x80) {\n\t      length += 1;\n\t    }\n\t    else if (c < 0x800) {\n\t      length += 2;\n\t    }\n\t    else if (c < 0xd800 || c >= 0xe000) {\n\t      length += 3;\n\t    }\n\t    else {\n\t      i++;\n\t      length += 4;\n\t    }\n\t  }\n\t  return length;\n\t}\n\t\n\tfunction _encode(bytes, defers, value) {\n\t  var type = typeof value, i = 0, l = 0, hi = 0, lo = 0, length = 0, size = 0;\n\t\n\t  if (type === 'string') {\n\t    length = utf8Length(value);\n\t\n\t    // fixstr\n\t    if (length < 0x20) {\n\t      bytes.push(length | 0xa0);\n\t      size = 1;\n\t    }\n\t    // str 8\n\t    else if (length < 0x100) {\n\t      bytes.push(0xd9, length);\n\t      size = 2;\n\t    }\n\t    // str 16\n\t    else if (length < 0x10000) {\n\t      bytes.push(0xda, length >> 8, length);\n\t      size = 3;\n\t    }\n\t    // str 32\n\t    else if (length < 0x100000000) {\n\t      bytes.push(0xdb, length >> 24, length >> 16, length >> 8, length);\n\t      size = 5;\n\t    } else {\n\t      throw new Error('String too long');\n\t    }\n\t    defers.push({ _str: value, _length: length, _offset: bytes.length });\n\t    return size + length;\n\t  }\n\t  if (type === 'number') {\n\t    // TODO: encode to float 32?\n\t\n\t    // float 64\n\t    if (Math.floor(value) !== value || !isFinite(value)) {\n\t      bytes.push(0xcb);\n\t      defers.push({ _float: value, _length: 8, _offset: bytes.length });\n\t      return 9;\n\t    }\n\t\n\t    if (value >= 0) {\n\t      // positive fixnum\n\t      if (value < 0x80) {\n\t        bytes.push(value);\n\t        return 1;\n\t      }\n\t      // uint 8\n\t      if (value < 0x100) {\n\t        bytes.push(0xcc, value);\n\t        return 2;\n\t      }\n\t      // uint 16\n\t      if (value < 0x10000) {\n\t        bytes.push(0xcd, value >> 8, value);\n\t        return 3;\n\t      }\n\t      // uint 32\n\t      if (value < 0x100000000) {\n\t        bytes.push(0xce, value >> 24, value >> 16, value >> 8, value);\n\t        return 5;\n\t      }\n\t      // uint 64\n\t      hi = (value / Math.pow(2, 32)) >> 0;\n\t      lo = value >>> 0;\n\t      bytes.push(0xcf, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n\t      return 9;\n\t    } else {\n\t      // negative fixnum\n\t      if (value >= -0x20) {\n\t        bytes.push(value);\n\t        return 1;\n\t      }\n\t      // int 8\n\t      if (value >= -0x80) {\n\t        bytes.push(0xd0, value);\n\t        return 2;\n\t      }\n\t      // int 16\n\t      if (value >= -0x8000) {\n\t        bytes.push(0xd1, value >> 8, value);\n\t        return 3;\n\t      }\n\t      // int 32\n\t      if (value >= -0x80000000) {\n\t        bytes.push(0xd2, value >> 24, value >> 16, value >> 8, value);\n\t        return 5;\n\t      }\n\t      // int 64\n\t      hi = Math.floor(value / Math.pow(2, 32));\n\t      lo = value >>> 0;\n\t      bytes.push(0xd3, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n\t      return 9;\n\t    }\n\t  }\n\t  if (type === 'object') {\n\t    // nil\n\t    if (value === null) {\n\t      bytes.push(0xc0);\n\t      return 1;\n\t    }\n\t\n\t    if (Array.isArray(value)) {\n\t      length = value.length;\n\t\n\t      // fixarray\n\t      if (length < 0x10) {\n\t        bytes.push(length | 0x90);\n\t        size = 1;\n\t      }\n\t      // array 16\n\t      else if (length < 0x10000) {\n\t        bytes.push(0xdc, length >> 8, length);\n\t        size = 3;\n\t      }\n\t      // array 32\n\t      else if (length < 0x100000000) {\n\t        bytes.push(0xdd, length >> 24, length >> 16, length >> 8, length);\n\t        size = 5;\n\t      } else {\n\t        throw new Error('Array too large');\n\t      }\n\t      for (i = 0; i < length; i++) {\n\t        size += _encode(bytes, defers, value[i]);\n\t      }\n\t      return size;\n\t    }\n\t\n\t    // fixext 8 / Date\n\t    if (value instanceof Date) {\n\t      var time = value.getTime();\n\t      hi = Math.floor(time / Math.pow(2, 32));\n\t      lo = time >>> 0;\n\t      bytes.push(0xd7, 0, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n\t      return 10;\n\t    }\n\t\n\t    if (value instanceof ArrayBuffer) {\n\t      length = value.byteLength;\n\t\n\t      // bin 8\n\t      if (length < 0x100) {\n\t        bytes.push(0xc4, length);\n\t        size = 2;\n\t      } else\n\t      // bin 16\n\t      if (length < 0x10000) {\n\t        bytes.push(0xc5, length >> 8, length);\n\t        size = 3;\n\t      } else\n\t      // bin 32\n\t      if (length < 0x100000000) {\n\t        bytes.push(0xc6, length >> 24, length >> 16, length >> 8, length);\n\t        size = 5;\n\t      } else {\n\t        throw new Error('Buffer too large');\n\t      }\n\t      defers.push({ _bin: value, _length: length, _offset: bytes.length });\n\t      return size + length;\n\t    }\n\t\n\t    if (typeof value.toJSON === 'function') {\n\t      return _encode(bytes, defers, value.toJSON());\n\t    }\n\t\n\t    var keys = [], key = '';\n\t\n\t    var allKeys = Object.keys(value);\n\t    for (i = 0, l = allKeys.length; i < l; i++) {\n\t      key = allKeys[i];\n\t      if (typeof value[key] !== 'function') {\n\t        keys.push(key);\n\t      }\n\t    }\n\t    length = keys.length;\n\t\n\t    // fixmap\n\t    if (length < 0x10) {\n\t      bytes.push(length | 0x80);\n\t      size = 1;\n\t    }\n\t    // map 16\n\t    else if (length < 0x10000) {\n\t      bytes.push(0xde, length >> 8, length);\n\t      size = 3;\n\t    }\n\t    // map 32\n\t    else if (length < 0x100000000) {\n\t      bytes.push(0xdf, length >> 24, length >> 16, length >> 8, length);\n\t      size = 5;\n\t    } else {\n\t      throw new Error('Object too large');\n\t    }\n\t\n\t    for (i = 0; i < length; i++) {\n\t      key = keys[i];\n\t      size += _encode(bytes, defers, key);\n\t      size += _encode(bytes, defers, value[key]);\n\t    }\n\t    return size;\n\t  }\n\t  // false/true\n\t  if (type === 'boolean') {\n\t    bytes.push(value ? 0xc3 : 0xc2);\n\t    return 1;\n\t  }\n\t  // fixext 1 / undefined\n\t  if (type === 'undefined') {\n\t    bytes.push(0xd4, 0, 0);\n\t    return 3;\n\t  }\n\t  throw new Error('Could not encode');\n\t}\n\t\n\tfunction encode(value) {\n\t  var bytes = [];\n\t  var defers = [];\n\t  var size = _encode(bytes, defers, value);\n\t  var buf = new ArrayBuffer(size);\n\t  var view = new DataView(buf);\n\t\n\t  var deferIndex = 0;\n\t  var deferWritten = 0;\n\t  var nextOffset = -1;\n\t  if (defers.length > 0) {\n\t    nextOffset = defers[0]._offset;\n\t  }\n\t\n\t  var defer, deferLength = 0, offset = 0;\n\t  for (var i = 0, l = bytes.length; i < l; i++) {\n\t    view.setUint8(deferWritten + i, bytes[i]);\n\t    if (i + 1 !== nextOffset) { continue; }\n\t    defer = defers[deferIndex];\n\t    deferLength = defer._length;\n\t    offset = deferWritten + nextOffset;\n\t    if (defer._bin) {\n\t      var bin = new Uint8Array(defer._bin);\n\t      for (var j = 0; j < deferLength; j++) {\n\t        view.setUint8(offset + j, bin[j]);\n\t      }\n\t    } else if (defer._str) {\n\t      utf8Write(view, offset, defer._str);\n\t    } else if (defer._float !== undefined) {\n\t      view.setFloat64(offset, defer._float);\n\t    }\n\t    deferIndex++;\n\t    deferWritten += deferLength;\n\t    if (defers[deferIndex]) {\n\t      nextOffset = defers[deferIndex]._offset;\n\t    }\n\t  }\n\t  return buf;\n\t}\n\t\n\tmodule.exports = encode;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tfunction Decoder(buffer) {\n\t  this._offset = 0;\n\t  if (buffer instanceof ArrayBuffer) {\n\t    this._buffer = buffer;\n\t    this._view = new DataView(this._buffer);\n\t  } else if (ArrayBuffer.isView(buffer)) {\n\t    this._buffer = buffer.buffer;\n\t    this._view = new DataView(this._buffer, buffer.byteOffset, buffer.byteLength);\n\t  } else {\n\t    throw new Error('Invalid argument');\n\t  }\n\t}\n\t\n\tfunction utf8Read(view, offset, length) {\n\t  var string = '', chr = 0;\n\t  for (var i = offset, end = offset + length; i < end; i++) {\n\t    var byte = view.getUint8(i);\n\t    if ((byte & 0x80) === 0x00) {\n\t      string += String.fromCharCode(byte);\n\t      continue;\n\t    }\n\t    if ((byte & 0xe0) === 0xc0) {\n\t      string += String.fromCharCode(\n\t        ((byte & 0x1f) << 6) |\n\t        (view.getUint8(++i) & 0x3f)\n\t      );\n\t      continue;\n\t    }\n\t    if ((byte & 0xf0) === 0xe0) {\n\t      string += String.fromCharCode(\n\t        ((byte & 0x0f) << 12) |\n\t        ((view.getUint8(++i) & 0x3f) << 6) |\n\t        ((view.getUint8(++i) & 0x3f) << 0)\n\t      );\n\t      continue;\n\t    }\n\t    if ((byte & 0xf8) === 0xf0) {\n\t      chr = ((byte & 0x07) << 18) |\n\t        ((view.getUint8(++i) & 0x3f) << 12) |\n\t        ((view.getUint8(++i) & 0x3f) << 6) |\n\t        ((view.getUint8(++i) & 0x3f) << 0);\n\t      if (chr >= 0x010000) { // surrogate pair\n\t        chr -= 0x010000;\n\t        string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n\t      } else {\n\t        string += String.fromCharCode(chr);\n\t      }\n\t      continue;\n\t    }\n\t    throw new Error('Invalid byte ' + byte.toString(16));\n\t  }\n\t  return string;\n\t}\n\t\n\tDecoder.prototype._array = function (length) {\n\t  var value = new Array(length);\n\t  for (var i = 0; i < length; i++) {\n\t    value[i] = this._parse();\n\t  }\n\t  return value;\n\t};\n\t\n\tDecoder.prototype._map = function (length) {\n\t  var key = '', value = {};\n\t  for (var i = 0; i < length; i++) {\n\t    key = this._parse();\n\t    value[key] = this._parse();\n\t  }\n\t  return value;\n\t};\n\t\n\tDecoder.prototype._str = function (length) {\n\t  var value = utf8Read(this._view, this._offset, length);\n\t  this._offset += length;\n\t  return value;\n\t};\n\t\n\tDecoder.prototype._bin = function (length) {\n\t  var value = this._buffer.slice(this._offset, this._offset + length);\n\t  this._offset += length;\n\t  return value;\n\t};\n\t\n\tDecoder.prototype._parse = function () {\n\t  var prefix = this._view.getUint8(this._offset++);\n\t  var value, length = 0, type = 0, hi = 0, lo = 0;\n\t\n\t  if (prefix < 0xc0) {\n\t    // positive fixint\n\t    if (prefix < 0x80) {\n\t      return prefix;\n\t    }\n\t    // fixmap\n\t    if (prefix < 0x90) {\n\t      return this._map(prefix & 0x0f);\n\t    }\n\t    // fixarray\n\t    if (prefix < 0xa0) {\n\t      return this._array(prefix & 0x0f);\n\t    }\n\t    // fixstr\n\t    return this._str(prefix & 0x1f);\n\t  }\n\t\n\t  // negative fixint\n\t  if (prefix > 0xdf) {\n\t    return (0xff - prefix + 1) * -1;\n\t  }\n\t\n\t  switch (prefix) {\n\t    // nil\n\t    case 0xc0:\n\t      return null;\n\t    // false\n\t    case 0xc2:\n\t      return false;\n\t    // true\n\t    case 0xc3:\n\t      return true;\n\t\n\t    // bin\n\t    case 0xc4:\n\t      length = this._view.getUint8(this._offset);\n\t      this._offset += 1;\n\t      return this._bin(length);\n\t    case 0xc5:\n\t      length = this._view.getUint16(this._offset);\n\t      this._offset += 2;\n\t      return this._bin(length);\n\t    case 0xc6:\n\t      length = this._view.getUint32(this._offset);\n\t      this._offset += 4;\n\t      return this._bin(length);\n\t\n\t    // ext\n\t    case 0xc7:\n\t      length = this._view.getUint8(this._offset);\n\t      type = this._view.getInt8(this._offset + 1);\n\t      this._offset += 2;\n\t      return [type, this._bin(length)];\n\t    case 0xc8:\n\t      length = this._view.getUint16(this._offset);\n\t      type = this._view.getInt8(this._offset + 2);\n\t      this._offset += 3;\n\t      return [type, this._bin(length)];\n\t    case 0xc9:\n\t      length = this._view.getUint32(this._offset);\n\t      type = this._view.getInt8(this._offset + 4);\n\t      this._offset += 5;\n\t      return [type, this._bin(length)];\n\t\n\t    // float\n\t    case 0xca:\n\t      value = this._view.getFloat32(this._offset);\n\t      this._offset += 4;\n\t      return value;\n\t    case 0xcb:\n\t      value = this._view.getFloat64(this._offset);\n\t      this._offset += 8;\n\t      return value;\n\t\n\t    // uint\n\t    case 0xcc:\n\t      value = this._view.getUint8(this._offset);\n\t      this._offset += 1;\n\t      return value;\n\t    case 0xcd:\n\t      value = this._view.getUint16(this._offset);\n\t      this._offset += 2;\n\t      return value;\n\t    case 0xce:\n\t      value = this._view.getUint32(this._offset);\n\t      this._offset += 4;\n\t      return value;\n\t    case 0xcf:\n\t      hi = this._view.getUint32(this._offset) * Math.pow(2, 32);\n\t      lo = this._view.getUint32(this._offset + 4);\n\t      this._offset += 8;\n\t      return hi + lo;\n\t\n\t    // int\n\t    case 0xd0:\n\t      value = this._view.getInt8(this._offset);\n\t      this._offset += 1;\n\t      return value;\n\t    case 0xd1:\n\t      value = this._view.getInt16(this._offset);\n\t      this._offset += 2;\n\t      return value;\n\t    case 0xd2:\n\t      value = this._view.getInt32(this._offset);\n\t      this._offset += 4;\n\t      return value;\n\t    case 0xd3:\n\t      hi = this._view.getInt32(this._offset) * Math.pow(2, 32);\n\t      lo = this._view.getUint32(this._offset + 4);\n\t      this._offset += 8;\n\t      return hi + lo;\n\t\n\t    // fixext\n\t    case 0xd4:\n\t      type = this._view.getInt8(this._offset);\n\t      this._offset += 1;\n\t      if (type === 0x00) {\n\t        this._offset += 1;\n\t        return void 0;\n\t      }\n\t      return [type, this._bin(1)];\n\t    case 0xd5:\n\t      type = this._view.getInt8(this._offset);\n\t      this._offset += 1;\n\t      return [type, this._bin(2)];\n\t    case 0xd6:\n\t      type = this._view.getInt8(this._offset);\n\t      this._offset += 1;\n\t      return [type, this._bin(4)];\n\t    case 0xd7:\n\t      type = this._view.getInt8(this._offset);\n\t      this._offset += 1;\n\t      if (type === 0x00) {\n\t        hi = this._view.getInt32(this._offset) * Math.pow(2, 32);\n\t        lo = this._view.getUint32(this._offset + 4);\n\t        this._offset += 8;\n\t        return new Date(hi + lo);\n\t      }\n\t      return [type, this._bin(8)];\n\t    case 0xd8:\n\t      type = this._view.getInt8(this._offset);\n\t      this._offset += 1;\n\t      return [type, this._bin(16)];\n\t\n\t    // str\n\t    case 0xd9:\n\t      length = this._view.getUint8(this._offset);\n\t      this._offset += 1;\n\t      return this._str(length);\n\t    case 0xda:\n\t      length = this._view.getUint16(this._offset);\n\t      this._offset += 2;\n\t      return this._str(length);\n\t    case 0xdb:\n\t      length = this._view.getUint32(this._offset);\n\t      this._offset += 4;\n\t      return this._str(length);\n\t\n\t    // array\n\t    case 0xdc:\n\t      length = this._view.getUint16(this._offset);\n\t      this._offset += 2;\n\t      return this._array(length);\n\t    case 0xdd:\n\t      length = this._view.getUint32(this._offset);\n\t      this._offset += 4;\n\t      return this._array(length);\n\t\n\t    // map\n\t    case 0xde:\n\t      length = this._view.getUint16(this._offset);\n\t      this._offset += 2;\n\t      return this._map(length);\n\t    case 0xdf:\n\t      length = this._view.getUint32(this._offset);\n\t      this._offset += 4;\n\t      return this._map(length);\n\t  }\n\t\n\t  throw new Error('Could not parse');\n\t};\n\t\n\tfunction decode(buffer) {\n\t  var decoder = new Decoder(buffer);\n\t  var value = decoder._parse();\n\t  if (decoder._offset !== buffer.byteLength) {\n\t    throw new Error((buffer.byteLength - decoder._offset) + ' trailing bytes');\n\t  }\n\t  return value;\n\t}\n\t\n\tmodule.exports = decode;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\r\n\t/**\r\n\t * Expose `Emitter`.\r\n\t */\r\n\t\r\n\tif (true) {\r\n\t  module.exports = Emitter;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialize a new `Emitter`.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction Emitter(obj) {\r\n\t  if (obj) return mixin(obj);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Mixin the emitter properties.\r\n\t *\r\n\t * @param {Object} obj\r\n\t * @return {Object}\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction mixin(obj) {\r\n\t  for (var key in Emitter.prototype) {\r\n\t    obj[key] = Emitter.prototype[key];\r\n\t  }\r\n\t  return obj;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Listen on the given `event` with `fn`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.on =\r\n\tEmitter.prototype.addEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n\t    .push(fn);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds an `event` listener that will be invoked a single\r\n\t * time then automatically removed.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.once = function(event, fn){\r\n\t  function on() {\r\n\t    this.off(event, on);\r\n\t    fn.apply(this, arguments);\r\n\t  }\r\n\t\r\n\t  on.fn = fn;\r\n\t  this.on(event, on);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Remove the given callback for `event` or all\r\n\t * registered callbacks.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.off =\r\n\tEmitter.prototype.removeListener =\r\n\tEmitter.prototype.removeAllListeners =\r\n\tEmitter.prototype.removeEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t\r\n\t  // all\r\n\t  if (0 == arguments.length) {\r\n\t    this._callbacks = {};\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // specific event\r\n\t  var callbacks = this._callbacks['$' + event];\r\n\t  if (!callbacks) return this;\r\n\t\r\n\t  // remove all handlers\r\n\t  if (1 == arguments.length) {\r\n\t    delete this._callbacks['$' + event];\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // remove specific handler\r\n\t  var cb;\r\n\t  for (var i = 0; i < callbacks.length; i++) {\r\n\t    cb = callbacks[i];\r\n\t    if (cb === fn || cb.fn === fn) {\r\n\t      callbacks.splice(i, 1);\r\n\t      break;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  // Remove event specific arrays for event types that no\r\n\t  // one is subscribed for to avoid memory leak.\r\n\t  if (callbacks.length === 0) {\r\n\t    delete this._callbacks['$' + event];\r\n\t  }\r\n\t\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Emit `event` with the given args.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Mixed} ...\r\n\t * @return {Emitter}\r\n\t */\r\n\t\r\n\tEmitter.prototype.emit = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t\r\n\t  var args = new Array(arguments.length - 1)\r\n\t    , callbacks = this._callbacks['$' + event];\r\n\t\r\n\t  for (var i = 1; i < arguments.length; i++) {\r\n\t    args[i - 1] = arguments[i];\r\n\t  }\r\n\t\r\n\t  if (callbacks) {\r\n\t    callbacks = callbacks.slice(0);\r\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n\t      callbacks[i].apply(this, args);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Return array of callbacks for `event`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Array}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.listeners = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  return this._callbacks['$' + event] || [];\r\n\t};\r\n\t\r\n\t/**\r\n\t * Check if this emitter has `event` handlers.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Boolean}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.hasListeners = function(event){\r\n\t  return !! this.listeners(event).length;\r\n\t};\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar eio = __webpack_require__(10);\n\tvar Socket = __webpack_require__(39);\n\tvar Emitter = __webpack_require__(31);\n\tvar parser = __webpack_require__(4);\n\tvar on = __webpack_require__(41);\n\tvar bind = __webpack_require__(42);\n\tvar debug = __webpack_require__(3)('socket.io-client:manager');\n\tvar indexOf = __webpack_require__(38);\n\tvar Backoff = __webpack_require__(43);\n\t\n\t/**\n\t * IE6+ hasOwnProperty\n\t */\n\t\n\tvar has = Object.prototype.hasOwnProperty;\n\t\n\t/**\n\t * Module exports\n\t */\n\t\n\tmodule.exports = Manager;\n\t\n\t/**\n\t * `Manager` constructor.\n\t *\n\t * @param {String} engine instance or engine uri/opts\n\t * @param {Object} options\n\t * @api public\n\t */\n\t\n\tfunction Manager(uri, opts) {\n\t  if (!(this instanceof Manager)) return new Manager(uri, opts);\n\t  if (uri && 'object' === (typeof uri === 'undefined' ? 'undefined' : _typeof(uri))) {\n\t    opts = uri;\n\t    uri = undefined;\n\t  }\n\t  opts = opts || {};\n\t\n\t  opts.path = opts.path || '/socket.io';\n\t  this.nsps = {};\n\t  this.subs = [];\n\t  this.opts = opts;\n\t  this.reconnection(opts.reconnection !== false);\n\t  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n\t  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n\t  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n\t  this.randomizationFactor(opts.randomizationFactor || 0.5);\n\t  this.backoff = new Backoff({\n\t    min: this.reconnectionDelay(),\n\t    max: this.reconnectionDelayMax(),\n\t    jitter: this.randomizationFactor()\n\t  });\n\t  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n\t  this.readyState = 'closed';\n\t  this.uri = uri;\n\t  this.connecting = [];\n\t  this.lastPing = null;\n\t  this.encoding = false;\n\t  this.packetBuffer = [];\n\t  var _parser = opts.parser || parser;\n\t  this.encoder = new _parser.Encoder();\n\t  this.decoder = new _parser.Decoder();\n\t  this.autoConnect = opts.autoConnect !== false;\n\t  if (this.autoConnect) this.open();\n\t}\n\t\n\t/**\n\t * Propagate given event to sockets and emit on `this`\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.emitAll = function () {\n\t  this.emit.apply(this, arguments);\n\t  for (var nsp in this.nsps) {\n\t    if (has.call(this.nsps, nsp)) {\n\t      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Update `socket.id` of all sockets\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.updateSocketIds = function () {\n\t  for (var nsp in this.nsps) {\n\t    if (has.call(this.nsps, nsp)) {\n\t      this.nsps[nsp].id = this.generateId(nsp);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * generate `socket.id` for the given `nsp`\n\t *\n\t * @param {String} nsp\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tManager.prototype.generateId = function (nsp) {\n\t  return (nsp === '/' ? '' : nsp + '#') + this.engine.id;\n\t};\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Manager.prototype);\n\t\n\t/**\n\t * Sets the `reconnection` config.\n\t *\n\t * @param {Boolean} true/false if it should automatically reconnect\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnection = function (v) {\n\t  if (!arguments.length) return this._reconnection;\n\t  this._reconnection = !!v;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the reconnection attempts config.\n\t *\n\t * @param {Number} max reconnection attempts before giving up\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnectionAttempts = function (v) {\n\t  if (!arguments.length) return this._reconnectionAttempts;\n\t  this._reconnectionAttempts = v;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the delay between reconnections.\n\t *\n\t * @param {Number} delay\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnectionDelay = function (v) {\n\t  if (!arguments.length) return this._reconnectionDelay;\n\t  this._reconnectionDelay = v;\n\t  this.backoff && this.backoff.setMin(v);\n\t  return this;\n\t};\n\t\n\tManager.prototype.randomizationFactor = function (v) {\n\t  if (!arguments.length) return this._randomizationFactor;\n\t  this._randomizationFactor = v;\n\t  this.backoff && this.backoff.setJitter(v);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the maximum delay between reconnections.\n\t *\n\t * @param {Number} delay\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnectionDelayMax = function (v) {\n\t  if (!arguments.length) return this._reconnectionDelayMax;\n\t  this._reconnectionDelayMax = v;\n\t  this.backoff && this.backoff.setMax(v);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the connection timeout. `false` to disable\n\t *\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.timeout = function (v) {\n\t  if (!arguments.length) return this._timeout;\n\t  this._timeout = v;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Starts trying to reconnect if reconnection is enabled and we have not\n\t * started reconnecting yet\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.maybeReconnectOnOpen = function () {\n\t  // Only try to reconnect if it's the first time we're connecting\n\t  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n\t    // keeps reconnection from firing twice for the same reconnection loop\n\t    this.reconnect();\n\t  }\n\t};\n\t\n\t/**\n\t * Sets the current transport `socket`.\n\t *\n\t * @param {Function} optional, callback\n\t * @return {Manager} self\n\t * @api public\n\t */\n\t\n\tManager.prototype.open = Manager.prototype.connect = function (fn, opts) {\n\t\n\t  if (~this.readyState.indexOf('open')) return this;\n\t\n\t  this.engine = eio(this.uri, this.opts);\n\t  var socket = this.engine;\n\t  var self = this;\n\t  this.readyState = 'opening';\n\t  this.skipReconnect = false;\n\t\n\t  // emit `open`\n\t  var openSub = on(socket, 'open', function () {\n\t    self.onopen();\n\t    fn && fn();\n\t  });\n\t\n\t  // emit `connect_error`\n\t  var errorSub = on(socket, 'error', function (data) {\n\t\n\t    self.cleanup();\n\t    self.readyState = 'closed';\n\t    self.emitAll('connect_error', data);\n\t    if (fn) {\n\t      var err = new Error('Connection error');\n\t      err.data = data;\n\t      fn(err);\n\t    } else {\n\t      // Only do this if there is no fn to handle the error\n\t      self.maybeReconnectOnOpen();\n\t    }\n\t  });\n\t\n\t  // emit `connect_timeout`\n\t  if (false !== this._timeout) {\n\t    var timeout = this._timeout;\n\t\n\t    // set timer\n\t    var timer = setTimeout(function () {\n\t\n\t      openSub.destroy();\n\t      socket.close();\n\t      socket.emit('error', 'timeout');\n\t      self.emitAll('connect_timeout', timeout);\n\t    }, timeout);\n\t\n\t    this.subs.push({\n\t      destroy: function destroy() {\n\t        clearTimeout(timer);\n\t      }\n\t    });\n\t  }\n\t\n\t  this.subs.push(openSub);\n\t  this.subs.push(errorSub);\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Called upon transport open.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onopen = function () {\n\t\n\t  // clear old subs\n\t  this.cleanup();\n\t\n\t  // mark as open\n\t  this.readyState = 'open';\n\t  this.emit('open');\n\t\n\t  // add new subs\n\t  var socket = this.engine;\n\t  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n\t  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n\t  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n\t  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n\t  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n\t  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n\t};\n\t\n\t/**\n\t * Called upon a ping.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onping = function () {\n\t  this.lastPing = new Date();\n\t  this.emitAll('ping');\n\t};\n\t\n\t/**\n\t * Called upon a packet.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onpong = function () {\n\t  this.emitAll('pong', new Date() - this.lastPing);\n\t};\n\t\n\t/**\n\t * Called with data.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.ondata = function (data) {\n\t  this.decoder.add(data);\n\t};\n\t\n\t/**\n\t * Called when parser fully decodes a packet.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.ondecoded = function (packet) {\n\t  this.emit('packet', packet);\n\t};\n\t\n\t/**\n\t * Called upon socket error.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onerror = function (err) {\n\t\n\t  this.emitAll('error', err);\n\t};\n\t\n\t/**\n\t * Creates a new socket for the given `nsp`.\n\t *\n\t * @return {Socket}\n\t * @api public\n\t */\n\t\n\tManager.prototype.socket = function (nsp, opts) {\n\t  var socket = this.nsps[nsp];\n\t  if (!socket) {\n\t    socket = new Socket(this, nsp, opts);\n\t    this.nsps[nsp] = socket;\n\t    var self = this;\n\t    socket.on('connecting', onConnecting);\n\t    socket.on('connect', function () {\n\t      socket.id = self.generateId(nsp);\n\t    });\n\t\n\t    if (this.autoConnect) {\n\t      // manually call here since connecting event is fired before listening\n\t      onConnecting();\n\t    }\n\t  }\n\t\n\t  function onConnecting() {\n\t    if (!~indexOf(self.connecting, socket)) {\n\t      self.connecting.push(socket);\n\t    }\n\t  }\n\t\n\t  return socket;\n\t};\n\t\n\t/**\n\t * Called upon a socket close.\n\t *\n\t * @param {Socket} socket\n\t */\n\t\n\tManager.prototype.destroy = function (socket) {\n\t  var index = indexOf(this.connecting, socket);\n\t  if (~index) this.connecting.splice(index, 1);\n\t  if (this.connecting.length) return;\n\t\n\t  this.close();\n\t};\n\t\n\t/**\n\t * Writes a packet.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tManager.prototype.packet = function (packet) {\n\t\n\t  var self = this;\n\t  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\t\n\t  if (!self.encoding) {\n\t    // encode, then write to engine with result\n\t    self.encoding = true;\n\t    this.encoder.encode(packet, function (encodedPackets) {\n\t      for (var i = 0; i < encodedPackets.length; i++) {\n\t        self.engine.write(encodedPackets[i], packet.options);\n\t      }\n\t      self.encoding = false;\n\t      self.processPacketQueue();\n\t    });\n\t  } else {\n\t    // add packet to the queue\n\t    self.packetBuffer.push(packet);\n\t  }\n\t};\n\t\n\t/**\n\t * If packet buffer is non-empty, begins encoding the\n\t * next packet in line.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.processPacketQueue = function () {\n\t  if (this.packetBuffer.length > 0 && !this.encoding) {\n\t    var pack = this.packetBuffer.shift();\n\t    this.packet(pack);\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up transport subscriptions and packet buffer.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.cleanup = function () {\n\t\n\t  var subsLength = this.subs.length;\n\t  for (var i = 0; i < subsLength; i++) {\n\t    var sub = this.subs.shift();\n\t    sub.destroy();\n\t  }\n\t\n\t  this.packetBuffer = [];\n\t  this.encoding = false;\n\t  this.lastPing = null;\n\t\n\t  this.decoder.destroy();\n\t};\n\t\n\t/**\n\t * Close the current socket.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.close = Manager.prototype.disconnect = function () {\n\t\n\t  this.skipReconnect = true;\n\t  this.reconnecting = false;\n\t  if ('opening' === this.readyState) {\n\t    // `onclose` will not fire because\n\t    // an open event never happened\n\t    this.cleanup();\n\t  }\n\t  this.backoff.reset();\n\t  this.readyState = 'closed';\n\t  if (this.engine) this.engine.close();\n\t};\n\t\n\t/**\n\t * Called upon engine close.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onclose = function (reason) {\n\t\n\t  this.cleanup();\n\t  this.backoff.reset();\n\t  this.readyState = 'closed';\n\t  this.emit('close', reason);\n\t\n\t  if (this._reconnection && !this.skipReconnect) {\n\t    this.reconnect();\n\t  }\n\t};\n\t\n\t/**\n\t * Attempt a reconnection.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.reconnect = function () {\n\t  if (this.reconnecting || this.skipReconnect) return this;\n\t\n\t  var self = this;\n\t\n\t  if (this.backoff.attempts >= this._reconnectionAttempts) {\n\t\n\t    this.backoff.reset();\n\t    this.emitAll('reconnect_failed');\n\t    this.reconnecting = false;\n\t  } else {\n\t    var delay = this.backoff.duration();\n\t\n\t    this.reconnecting = true;\n\t    var timer = setTimeout(function () {\n\t      if (self.skipReconnect) return;\n\t\n\t      self.emitAll('reconnect_attempt', self.backoff.attempts);\n\t      self.emitAll('reconnecting', self.backoff.attempts);\n\t\n\t      // check again for the case socket closed in above events\n\t      if (self.skipReconnect) return;\n\t\n\t      self.open(function (err) {\n\t        if (err) {\n\t\n\t          self.reconnecting = false;\n\t          self.reconnect();\n\t          self.emitAll('reconnect_error', err.data);\n\t        } else {\n\t\n\t          self.onreconnect();\n\t        }\n\t      });\n\t    }, delay);\n\t\n\t    this.subs.push({\n\t      destroy: function destroy() {\n\t        clearTimeout(timer);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon successful reconnect.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onreconnect = function () {\n\t  var attempt = this.backoff.attempts;\n\t  this.reconnecting = false;\n\t  this.backoff.reset();\n\t  this.updateSocketIds();\n\t  this.emitAll('reconnect', attempt);\n\t};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\tmodule.exports = __webpack_require__(11);\n\t\n\t/**\n\t * Exports parser\n\t *\n\t * @api public\n\t *\n\t */\n\tmodule.exports.parser = __webpack_require__(18);\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies.\n\t */\n\t\n\tvar transports = __webpack_require__(12);\n\tvar Emitter = __webpack_require__(31);\n\tvar debug = __webpack_require__(3)('engine.io-client:socket');\n\tvar index = __webpack_require__(38);\n\tvar parser = __webpack_require__(18);\n\tvar parseuri = __webpack_require__(2);\n\tvar parseqs = __webpack_require__(32);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = Socket;\n\t\n\t/**\n\t * Socket constructor.\n\t *\n\t * @param {String|Object} uri or options\n\t * @param {Object} options\n\t * @api public\n\t */\n\t\n\tfunction Socket (uri, opts) {\n\t  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\t\n\t  opts = opts || {};\n\t\n\t  if (uri && 'object' === typeof uri) {\n\t    opts = uri;\n\t    uri = null;\n\t  }\n\t\n\t  if (uri) {\n\t    uri = parseuri(uri);\n\t    opts.hostname = uri.host;\n\t    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n\t    opts.port = uri.port;\n\t    if (uri.query) opts.query = uri.query;\n\t  } else if (opts.host) {\n\t    opts.hostname = parseuri(opts.host).host;\n\t  }\n\t\n\t  this.secure = null != opts.secure ? opts.secure\n\t    : (global.location && 'https:' === location.protocol);\n\t\n\t  if (opts.hostname && !opts.port) {\n\t    // if no port is specified manually, use the protocol default\n\t    opts.port = this.secure ? '443' : '80';\n\t  }\n\t\n\t  this.agent = opts.agent || false;\n\t  this.hostname = opts.hostname ||\n\t    (global.location ? location.hostname : 'localhost');\n\t  this.port = opts.port || (global.location && location.port\n\t      ? location.port\n\t      : (this.secure ? 443 : 80));\n\t  this.query = opts.query || {};\n\t  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n\t  this.upgrade = false !== opts.upgrade;\n\t  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n\t  this.forceJSONP = !!opts.forceJSONP;\n\t  this.jsonp = false !== opts.jsonp;\n\t  this.forceBase64 = !!opts.forceBase64;\n\t  this.enablesXDR = !!opts.enablesXDR;\n\t  this.timestampParam = opts.timestampParam || 't';\n\t  this.timestampRequests = opts.timestampRequests;\n\t  this.transports = opts.transports || ['polling', 'websocket'];\n\t  this.transportOptions = opts.transportOptions || {};\n\t  this.readyState = '';\n\t  this.writeBuffer = [];\n\t  this.prevBufferLen = 0;\n\t  this.policyPort = opts.policyPort || 843;\n\t  this.rememberUpgrade = opts.rememberUpgrade || false;\n\t  this.binaryType = null;\n\t  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n\t  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\t\n\t  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n\t  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n\t    this.perMessageDeflate.threshold = 1024;\n\t  }\n\t\n\t  // SSL options for Node.js client\n\t  this.pfx = opts.pfx || null;\n\t  this.key = opts.key || null;\n\t  this.passphrase = opts.passphrase || null;\n\t  this.cert = opts.cert || null;\n\t  this.ca = opts.ca || null;\n\t  this.ciphers = opts.ciphers || null;\n\t  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n\t  this.forceNode = !!opts.forceNode;\n\t\n\t  // other options for Node.js client\n\t  var freeGlobal = typeof global === 'object' && global;\n\t  if (freeGlobal.global === freeGlobal) {\n\t    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n\t      this.extraHeaders = opts.extraHeaders;\n\t    }\n\t\n\t    if (opts.localAddress) {\n\t      this.localAddress = opts.localAddress;\n\t    }\n\t  }\n\t\n\t  // set on handshake\n\t  this.id = null;\n\t  this.upgrades = null;\n\t  this.pingInterval = null;\n\t  this.pingTimeout = null;\n\t\n\t  // set on heartbeat\n\t  this.pingIntervalTimer = null;\n\t  this.pingTimeoutTimer = null;\n\t\n\t  this.open();\n\t}\n\t\n\tSocket.priorWebsocketSuccess = false;\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Socket.prototype);\n\t\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\tSocket.protocol = parser.protocol; // this is an int\n\t\n\t/**\n\t * Expose deps for legacy compatibility\n\t * and standalone browser access.\n\t */\n\t\n\tSocket.Socket = Socket;\n\tSocket.Transport = __webpack_require__(17);\n\tSocket.transports = __webpack_require__(12);\n\tSocket.parser = __webpack_require__(18);\n\t\n\t/**\n\t * Creates transport of the given type.\n\t *\n\t * @param {String} transport name\n\t * @return {Transport}\n\t * @api private\n\t */\n\t\n\tSocket.prototype.createTransport = function (name) {\n\t\n\t  var query = clone(this.query);\n\t\n\t  // append engine.io protocol identifier\n\t  query.EIO = parser.protocol;\n\t\n\t  // transport name\n\t  query.transport = name;\n\t\n\t  // per-transport options\n\t  var options = this.transportOptions[name] || {};\n\t\n\t  // session id if we already have one\n\t  if (this.id) query.sid = this.id;\n\t\n\t  var transport = new transports[name]({\n\t    query: query,\n\t    socket: this,\n\t    agent: options.agent || this.agent,\n\t    hostname: options.hostname || this.hostname,\n\t    port: options.port || this.port,\n\t    secure: options.secure || this.secure,\n\t    path: options.path || this.path,\n\t    forceJSONP: options.forceJSONP || this.forceJSONP,\n\t    jsonp: options.jsonp || this.jsonp,\n\t    forceBase64: options.forceBase64 || this.forceBase64,\n\t    enablesXDR: options.enablesXDR || this.enablesXDR,\n\t    timestampRequests: options.timestampRequests || this.timestampRequests,\n\t    timestampParam: options.timestampParam || this.timestampParam,\n\t    policyPort: options.policyPort || this.policyPort,\n\t    pfx: options.pfx || this.pfx,\n\t    key: options.key || this.key,\n\t    passphrase: options.passphrase || this.passphrase,\n\t    cert: options.cert || this.cert,\n\t    ca: options.ca || this.ca,\n\t    ciphers: options.ciphers || this.ciphers,\n\t    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n\t    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n\t    extraHeaders: options.extraHeaders || this.extraHeaders,\n\t    forceNode: options.forceNode || this.forceNode,\n\t    localAddress: options.localAddress || this.localAddress,\n\t    requestTimeout: options.requestTimeout || this.requestTimeout,\n\t    protocols: options.protocols || void (0)\n\t  });\n\t\n\t  return transport;\n\t};\n\t\n\tfunction clone (obj) {\n\t  var o = {};\n\t  for (var i in obj) {\n\t    if (obj.hasOwnProperty(i)) {\n\t      o[i] = obj[i];\n\t    }\n\t  }\n\t  return o;\n\t}\n\t\n\t/**\n\t * Initializes transport to use and starts probe.\n\t *\n\t * @api private\n\t */\n\tSocket.prototype.open = function () {\n\t  var transport;\n\t  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n\t    transport = 'websocket';\n\t  } else if (0 === this.transports.length) {\n\t    // Emit error on next tick so it can be listened to\n\t    var self = this;\n\t    setTimeout(function () {\n\t      self.emit('error', 'No transports available');\n\t    }, 0);\n\t    return;\n\t  } else {\n\t    transport = this.transports[0];\n\t  }\n\t  this.readyState = 'opening';\n\t\n\t  // Retry with the next transport if the transport is disabled (jsonp: false)\n\t  try {\n\t    transport = this.createTransport(transport);\n\t  } catch (e) {\n\t    this.transports.shift();\n\t    this.open();\n\t    return;\n\t  }\n\t\n\t  transport.open();\n\t  this.setTransport(transport);\n\t};\n\t\n\t/**\n\t * Sets the current transport. Disables the existing one (if any).\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.setTransport = function (transport) {\n\t\n\t  var self = this;\n\t\n\t  if (this.transport) {\n\t\n\t    this.transport.removeAllListeners();\n\t  }\n\t\n\t  // set up transport\n\t  this.transport = transport;\n\t\n\t  // set up transport listeners\n\t  transport\n\t  .on('drain', function () {\n\t    self.onDrain();\n\t  })\n\t  .on('packet', function (packet) {\n\t    self.onPacket(packet);\n\t  })\n\t  .on('error', function (e) {\n\t    self.onError(e);\n\t  })\n\t  .on('close', function () {\n\t    self.onClose('transport close');\n\t  });\n\t};\n\t\n\t/**\n\t * Probes a transport.\n\t *\n\t * @param {String} transport name\n\t * @api private\n\t */\n\t\n\tSocket.prototype.probe = function (name) {\n\t\n\t  var transport = this.createTransport(name, { probe: 1 });\n\t  var failed = false;\n\t  var self = this;\n\t\n\t  Socket.priorWebsocketSuccess = false;\n\t\n\t  function onTransportOpen () {\n\t    if (self.onlyBinaryUpgrades) {\n\t      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n\t      failed = failed || upgradeLosesBinary;\n\t    }\n\t    if (failed) return;\n\t\n\t\n\t    transport.send([{ type: 'ping', data: 'probe' }]);\n\t    transport.once('packet', function (msg) {\n\t      if (failed) return;\n\t      if ('pong' === msg.type && 'probe' === msg.data) {\n\t\n\t        self.upgrading = true;\n\t        self.emit('upgrading', transport);\n\t        if (!transport) return;\n\t        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\t\n\t\n\t        self.transport.pause(function () {\n\t          if (failed) return;\n\t          if ('closed' === self.readyState) return;\n\t\n\t\n\t          cleanup();\n\t\n\t          self.setTransport(transport);\n\t          transport.send([{ type: 'upgrade' }]);\n\t          self.emit('upgrade', transport);\n\t          transport = null;\n\t          self.upgrading = false;\n\t          self.flush();\n\t        });\n\t      } else {\n\t\n\t        var err = new Error('probe error');\n\t        err.transport = transport.name;\n\t        self.emit('upgradeError', err);\n\t      }\n\t    });\n\t  }\n\t\n\t  function freezeTransport () {\n\t    if (failed) return;\n\t\n\t    // Any callback called by transport should be ignored since now\n\t    failed = true;\n\t\n\t    cleanup();\n\t\n\t    transport.close();\n\t    transport = null;\n\t  }\n\t\n\t  // Handle any error that happens while probing\n\t  function onerror (err) {\n\t    var error = new Error('probe error: ' + err);\n\t    error.transport = transport.name;\n\t\n\t    freezeTransport();\n\t\n\t\n\t\n\t    self.emit('upgradeError', error);\n\t  }\n\t\n\t  function onTransportClose () {\n\t    onerror('transport closed');\n\t  }\n\t\n\t  // When the socket is closed while we're probing\n\t  function onclose () {\n\t    onerror('socket closed');\n\t  }\n\t\n\t  // When the socket is upgraded while we're probing\n\t  function onupgrade (to) {\n\t    if (transport && to.name !== transport.name) {\n\t\n\t      freezeTransport();\n\t    }\n\t  }\n\t\n\t  // Remove all listeners on the transport and on self\n\t  function cleanup () {\n\t    transport.removeListener('open', onTransportOpen);\n\t    transport.removeListener('error', onerror);\n\t    transport.removeListener('close', onTransportClose);\n\t    self.removeListener('close', onclose);\n\t    self.removeListener('upgrading', onupgrade);\n\t  }\n\t\n\t  transport.once('open', onTransportOpen);\n\t  transport.once('error', onerror);\n\t  transport.once('close', onTransportClose);\n\t\n\t  this.once('close', onclose);\n\t  this.once('upgrading', onupgrade);\n\t\n\t  transport.open();\n\t};\n\t\n\t/**\n\t * Called when connection is deemed open.\n\t *\n\t * @api public\n\t */\n\t\n\tSocket.prototype.onOpen = function () {\n\t\n\t  this.readyState = 'open';\n\t  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n\t  this.emit('open');\n\t  this.flush();\n\t\n\t  // we check for `readyState` in case an `open`\n\t  // listener already closed the socket\n\t  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n\t\n\t    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n\t      this.probe(this.upgrades[i]);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Handles a packet.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onPacket = function (packet) {\n\t  if ('opening' === this.readyState || 'open' === this.readyState ||\n\t      'closing' === this.readyState) {\n\t\n\t\n\t    this.emit('packet', packet);\n\t\n\t    // Socket is live - any packet counts\n\t    this.emit('heartbeat');\n\t\n\t    switch (packet.type) {\n\t      case 'open':\n\t        this.onHandshake(JSON.parse(packet.data));\n\t        break;\n\t\n\t      case 'pong':\n\t        this.setPing();\n\t        this.emit('pong');\n\t        break;\n\t\n\t      case 'error':\n\t        var err = new Error('server error');\n\t        err.code = packet.data;\n\t        this.onError(err);\n\t        break;\n\t\n\t      case 'message':\n\t        this.emit('data', packet.data);\n\t        this.emit('message', packet.data);\n\t        break;\n\t    }\n\t  } else {\n\t\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon handshake completion.\n\t *\n\t * @param {Object} handshake obj\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onHandshake = function (data) {\n\t  this.emit('handshake', data);\n\t  this.id = data.sid;\n\t  this.transport.query.sid = data.sid;\n\t  this.upgrades = this.filterUpgrades(data.upgrades);\n\t  this.pingInterval = data.pingInterval;\n\t  this.pingTimeout = data.pingTimeout;\n\t  this.onOpen();\n\t  // In case open handler closes socket\n\t  if ('closed' === this.readyState) return;\n\t  this.setPing();\n\t\n\t  // Prolong liveness of socket on heartbeat\n\t  this.removeListener('heartbeat', this.onHeartbeat);\n\t  this.on('heartbeat', this.onHeartbeat);\n\t};\n\t\n\t/**\n\t * Resets ping timeout.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onHeartbeat = function (timeout) {\n\t  clearTimeout(this.pingTimeoutTimer);\n\t  var self = this;\n\t  self.pingTimeoutTimer = setTimeout(function () {\n\t    if ('closed' === self.readyState) return;\n\t    self.onClose('ping timeout');\n\t  }, timeout || (self.pingInterval + self.pingTimeout));\n\t};\n\t\n\t/**\n\t * Pings server every `this.pingInterval` and expects response\n\t * within `this.pingTimeout` or closes connection.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.setPing = function () {\n\t  var self = this;\n\t  clearTimeout(self.pingIntervalTimer);\n\t  self.pingIntervalTimer = setTimeout(function () {\n\t\n\t    self.ping();\n\t    self.onHeartbeat(self.pingTimeout);\n\t  }, self.pingInterval);\n\t};\n\t\n\t/**\n\t* Sends a ping packet.\n\t*\n\t* @api private\n\t*/\n\t\n\tSocket.prototype.ping = function () {\n\t  var self = this;\n\t  this.sendPacket('ping', function () {\n\t    self.emit('ping');\n\t  });\n\t};\n\t\n\t/**\n\t * Called on `drain` event\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onDrain = function () {\n\t  this.writeBuffer.splice(0, this.prevBufferLen);\n\t\n\t  // setting prevBufferLen = 0 is very important\n\t  // for example, when upgrading, upgrade packet is sent over,\n\t  // and a nonzero prevBufferLen could cause problems on `drain`\n\t  this.prevBufferLen = 0;\n\t\n\t  if (0 === this.writeBuffer.length) {\n\t    this.emit('drain');\n\t  } else {\n\t    this.flush();\n\t  }\n\t};\n\t\n\t/**\n\t * Flush write buffers.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.flush = function () {\n\t  if ('closed' !== this.readyState && this.transport.writable &&\n\t    !this.upgrading && this.writeBuffer.length) {\n\t\n\t    this.transport.send(this.writeBuffer);\n\t    // keep track of current length of writeBuffer\n\t    // splice writeBuffer and callbackBuffer on `drain`\n\t    this.prevBufferLen = this.writeBuffer.length;\n\t    this.emit('flush');\n\t  }\n\t};\n\t\n\t/**\n\t * Sends a message.\n\t *\n\t * @param {String} message.\n\t * @param {Function} callback function.\n\t * @param {Object} options.\n\t * @return {Socket} for chaining.\n\t * @api public\n\t */\n\t\n\tSocket.prototype.write =\n\tSocket.prototype.send = function (msg, options, fn) {\n\t  this.sendPacket('message', msg, options, fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends a packet.\n\t *\n\t * @param {String} packet type.\n\t * @param {String} data.\n\t * @param {Object} options.\n\t * @param {Function} callback function.\n\t * @api private\n\t */\n\t\n\tSocket.prototype.sendPacket = function (type, data, options, fn) {\n\t  if ('function' === typeof data) {\n\t    fn = data;\n\t    data = undefined;\n\t  }\n\t\n\t  if ('function' === typeof options) {\n\t    fn = options;\n\t    options = null;\n\t  }\n\t\n\t  if ('closing' === this.readyState || 'closed' === this.readyState) {\n\t    return;\n\t  }\n\t\n\t  options = options || {};\n\t  options.compress = false !== options.compress;\n\t\n\t  var packet = {\n\t    type: type,\n\t    data: data,\n\t    options: options\n\t  };\n\t  this.emit('packetCreate', packet);\n\t  this.writeBuffer.push(packet);\n\t  if (fn) this.once('flush', fn);\n\t  this.flush();\n\t};\n\t\n\t/**\n\t * Closes the connection.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.close = function () {\n\t  if ('opening' === this.readyState || 'open' === this.readyState) {\n\t    this.readyState = 'closing';\n\t\n\t    var self = this;\n\t\n\t    if (this.writeBuffer.length) {\n\t      this.once('drain', function () {\n\t        if (this.upgrading) {\n\t          waitForUpgrade();\n\t        } else {\n\t          close();\n\t        }\n\t      });\n\t    } else if (this.upgrading) {\n\t      waitForUpgrade();\n\t    } else {\n\t      close();\n\t    }\n\t  }\n\t\n\t  function close () {\n\t    self.onClose('forced close');\n\t\n\t    self.transport.close();\n\t  }\n\t\n\t  function cleanupAndClose () {\n\t    self.removeListener('upgrade', cleanupAndClose);\n\t    self.removeListener('upgradeError', cleanupAndClose);\n\t    close();\n\t  }\n\t\n\t  function waitForUpgrade () {\n\t    // wait for upgrade to finish since we can't send packets while pausing a transport\n\t    self.once('upgrade', cleanupAndClose);\n\t    self.once('upgradeError', cleanupAndClose);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Called upon transport error\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onError = function (err) {\n\t\n\t  Socket.priorWebsocketSuccess = false;\n\t  this.emit('error', err);\n\t  this.onClose('transport error', err);\n\t};\n\t\n\t/**\n\t * Called upon transport close.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onClose = function (reason, desc) {\n\t  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n\t\n\t    var self = this;\n\t\n\t    // clear timers\n\t    clearTimeout(this.pingIntervalTimer);\n\t    clearTimeout(this.pingTimeoutTimer);\n\t\n\t    // stop event from firing again for transport\n\t    this.transport.removeAllListeners('close');\n\t\n\t    // ensure transport won't stay open\n\t    this.transport.close();\n\t\n\t    // ignore further transport communication\n\t    this.transport.removeAllListeners();\n\t\n\t    // set ready state\n\t    this.readyState = 'closed';\n\t\n\t    // clear session id\n\t    this.id = null;\n\t\n\t    // emit close event\n\t    this.emit('close', reason, desc);\n\t\n\t    // clean buffers after, so users can still\n\t    // grab the buffers on `close` event\n\t    self.writeBuffer = [];\n\t    self.prevBufferLen = 0;\n\t  }\n\t};\n\t\n\t/**\n\t * Filters upgrades, returning only those matching client transports.\n\t *\n\t * @param {Array} server upgrades\n\t * @api private\n\t *\n\t */\n\t\n\tSocket.prototype.filterUpgrades = function (upgrades) {\n\t  var filteredUpgrades = [];\n\t  for (var i = 0, j = upgrades.length; i < j; i++) {\n\t    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n\t  }\n\t  return filteredUpgrades;\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies\n\t */\n\t\n\tvar XMLHttpRequest = __webpack_require__(13);\n\tvar XHR = __webpack_require__(15);\n\tvar JSONP = __webpack_require__(35);\n\tvar websocket = __webpack_require__(36);\n\t\n\t/**\n\t * Export transports.\n\t */\n\t\n\texports.polling = polling;\n\texports.websocket = websocket;\n\t\n\t/**\n\t * Polling transport polymorphic constructor.\n\t * Decides on xhr vs jsonp based on feature detection.\n\t *\n\t * @api private\n\t */\n\t\n\tfunction polling (opts) {\n\t  var xhr;\n\t  var xd = false;\n\t  var xs = false;\n\t  var jsonp = false !== opts.jsonp;\n\t\n\t  if (global.location) {\n\t    var isSSL = 'https:' === location.protocol;\n\t    var port = location.port;\n\t\n\t    // some user agents have empty `location.port`\n\t    if (!port) {\n\t      port = isSSL ? 443 : 80;\n\t    }\n\t\n\t    xd = opts.hostname !== location.hostname || port !== opts.port;\n\t    xs = opts.secure !== isSSL;\n\t  }\n\t\n\t  opts.xdomain = xd;\n\t  opts.xscheme = xs;\n\t  xhr = new XMLHttpRequest(opts);\n\t\n\t  if ('open' in xhr && !opts.forceJSONP) {\n\t    return new XHR(opts);\n\t  } else {\n\t    if (!jsonp) throw new Error('JSONP disabled');\n\t    return new JSONP(opts);\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {// browser shim for xmlhttprequest module\n\t\n\tvar hasCORS = __webpack_require__(14);\n\t\n\tmodule.exports = function (opts) {\n\t  var xdomain = opts.xdomain;\n\t\n\t  // scheme must be same when usign XDomainRequest\n\t  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\t  var xscheme = opts.xscheme;\n\t\n\t  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n\t  // https://github.com/Automattic/engine.io-client/pull/217\n\t  var enablesXDR = opts.enablesXDR;\n\t\n\t  // XMLHttpRequest can be disabled on IE\n\t  try {\n\t    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n\t      return new XMLHttpRequest();\n\t    }\n\t  } catch (e) { }\n\t\n\t  // Use XDomainRequest for IE8 if enablesXDR is true\n\t  // because loading bar keeps flashing when using jsonp-polling\n\t  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n\t  try {\n\t    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n\t      return new XDomainRequest();\n\t    }\n\t  } catch (e) { }\n\t\n\t  if (!xdomain) {\n\t    try {\n\t      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n\t    } catch (e) { }\n\t  }\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * Module exports.\n\t *\n\t * Logic borrowed from Modernizr:\n\t *\n\t *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n\t */\n\t\n\ttry {\n\t  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n\t    'withCredentials' in new XMLHttpRequest();\n\t} catch (err) {\n\t  // if XMLHttp support is disabled in IE then it will throw\n\t  // when trying to create\n\t  module.exports = false;\n\t}\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module requirements.\n\t */\n\t\n\tvar XMLHttpRequest = __webpack_require__(13);\n\tvar Polling = __webpack_require__(16);\n\tvar Emitter = __webpack_require__(31);\n\tvar inherit = __webpack_require__(33);\n\tvar debug = __webpack_require__(3)('engine.io-client:polling-xhr');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = XHR;\n\tmodule.exports.Request = Request;\n\t\n\t/**\n\t * Empty function\n\t */\n\t\n\tfunction empty () {}\n\t\n\t/**\n\t * XHR Polling constructor.\n\t *\n\t * @param {Object} opts\n\t * @api public\n\t */\n\t\n\tfunction XHR (opts) {\n\t  Polling.call(this, opts);\n\t  this.requestTimeout = opts.requestTimeout;\n\t  this.extraHeaders = opts.extraHeaders;\n\t\n\t  if (global.location) {\n\t    var isSSL = 'https:' === location.protocol;\n\t    var port = location.port;\n\t\n\t    // some user agents have empty `location.port`\n\t    if (!port) {\n\t      port = isSSL ? 443 : 80;\n\t    }\n\t\n\t    this.xd = opts.hostname !== global.location.hostname ||\n\t      port !== opts.port;\n\t    this.xs = opts.secure !== isSSL;\n\t  }\n\t}\n\t\n\t/**\n\t * Inherits from Polling.\n\t */\n\t\n\tinherit(XHR, Polling);\n\t\n\t/**\n\t * XHR supports binary\n\t */\n\t\n\tXHR.prototype.supportsBinary = true;\n\t\n\t/**\n\t * Creates a request.\n\t *\n\t * @param {String} method\n\t * @api private\n\t */\n\t\n\tXHR.prototype.request = function (opts) {\n\t  opts = opts || {};\n\t  opts.uri = this.uri();\n\t  opts.xd = this.xd;\n\t  opts.xs = this.xs;\n\t  opts.agent = this.agent || false;\n\t  opts.supportsBinary = this.supportsBinary;\n\t  opts.enablesXDR = this.enablesXDR;\n\t\n\t  // SSL options for Node.js client\n\t  opts.pfx = this.pfx;\n\t  opts.key = this.key;\n\t  opts.passphrase = this.passphrase;\n\t  opts.cert = this.cert;\n\t  opts.ca = this.ca;\n\t  opts.ciphers = this.ciphers;\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\n\t  opts.requestTimeout = this.requestTimeout;\n\t\n\t  // other options for Node.js client\n\t  opts.extraHeaders = this.extraHeaders;\n\t\n\t  return new Request(opts);\n\t};\n\t\n\t/**\n\t * Sends data.\n\t *\n\t * @param {String} data to send.\n\t * @param {Function} called upon flush.\n\t * @api private\n\t */\n\t\n\tXHR.prototype.doWrite = function (data, fn) {\n\t  var isBinary = typeof data !== 'string' && data !== undefined;\n\t  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n\t  var self = this;\n\t  req.on('success', fn);\n\t  req.on('error', function (err) {\n\t    self.onError('xhr post error', err);\n\t  });\n\t  this.sendXhr = req;\n\t};\n\t\n\t/**\n\t * Starts a poll cycle.\n\t *\n\t * @api private\n\t */\n\t\n\tXHR.prototype.doPoll = function () {\n\t\n\t  var req = this.request();\n\t  var self = this;\n\t  req.on('data', function (data) {\n\t    self.onData(data);\n\t  });\n\t  req.on('error', function (err) {\n\t    self.onError('xhr poll error', err);\n\t  });\n\t  this.pollXhr = req;\n\t};\n\t\n\t/**\n\t * Request constructor\n\t *\n\t * @param {Object} options\n\t * @api public\n\t */\n\t\n\tfunction Request (opts) {\n\t  this.method = opts.method || 'GET';\n\t  this.uri = opts.uri;\n\t  this.xd = !!opts.xd;\n\t  this.xs = !!opts.xs;\n\t  this.async = false !== opts.async;\n\t  this.data = undefined !== opts.data ? opts.data : null;\n\t  this.agent = opts.agent;\n\t  this.isBinary = opts.isBinary;\n\t  this.supportsBinary = opts.supportsBinary;\n\t  this.enablesXDR = opts.enablesXDR;\n\t  this.requestTimeout = opts.requestTimeout;\n\t\n\t  // SSL options for Node.js client\n\t  this.pfx = opts.pfx;\n\t  this.key = opts.key;\n\t  this.passphrase = opts.passphrase;\n\t  this.cert = opts.cert;\n\t  this.ca = opts.ca;\n\t  this.ciphers = opts.ciphers;\n\t  this.rejectUnauthorized = opts.rejectUnauthorized;\n\t\n\t  // other options for Node.js client\n\t  this.extraHeaders = opts.extraHeaders;\n\t\n\t  this.create();\n\t}\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Request.prototype);\n\t\n\t/**\n\t * Creates the XHR object and sends the request.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.create = function () {\n\t  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\t\n\t  // SSL options for Node.js client\n\t  opts.pfx = this.pfx;\n\t  opts.key = this.key;\n\t  opts.passphrase = this.passphrase;\n\t  opts.cert = this.cert;\n\t  opts.ca = this.ca;\n\t  opts.ciphers = this.ciphers;\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\n\t\n\t  var xhr = this.xhr = new XMLHttpRequest(opts);\n\t  var self = this;\n\t\n\t  try {\n\t\n\t    xhr.open(this.method, this.uri, this.async);\n\t    try {\n\t      if (this.extraHeaders) {\n\t        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n\t        for (var i in this.extraHeaders) {\n\t          if (this.extraHeaders.hasOwnProperty(i)) {\n\t            xhr.setRequestHeader(i, this.extraHeaders[i]);\n\t          }\n\t        }\n\t      }\n\t    } catch (e) {}\n\t\n\t    if ('POST' === this.method) {\n\t      try {\n\t        if (this.isBinary) {\n\t          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n\t        } else {\n\t          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n\t        }\n\t      } catch (e) {}\n\t    }\n\t\n\t    try {\n\t      xhr.setRequestHeader('Accept', '*/*');\n\t    } catch (e) {}\n\t\n\t    // ie6 check\n\t    if ('withCredentials' in xhr) {\n\t      xhr.withCredentials = true;\n\t    }\n\t\n\t    if (this.requestTimeout) {\n\t      xhr.timeout = this.requestTimeout;\n\t    }\n\t\n\t    if (this.hasXDR()) {\n\t      xhr.onload = function () {\n\t        self.onLoad();\n\t      };\n\t      xhr.onerror = function () {\n\t        self.onError(xhr.responseText);\n\t      };\n\t    } else {\n\t      xhr.onreadystatechange = function () {\n\t        if (xhr.readyState === 2) {\n\t          try {\n\t            var contentType = xhr.getResponseHeader('Content-Type');\n\t            if (self.supportsBinary && contentType === 'application/octet-stream') {\n\t              xhr.responseType = 'arraybuffer';\n\t            }\n\t          } catch (e) {}\n\t        }\n\t        if (4 !== xhr.readyState) return;\n\t        if (200 === xhr.status || 1223 === xhr.status) {\n\t          self.onLoad();\n\t        } else {\n\t          // make sure the `error` event handler that's user-set\n\t          // does not throw in the same tick and gets caught here\n\t          setTimeout(function () {\n\t            self.onError(xhr.status);\n\t          }, 0);\n\t        }\n\t      };\n\t    }\n\t\n\t\n\t    xhr.send(this.data);\n\t  } catch (e) {\n\t    // Need to defer since .create() is called directly fhrom the constructor\n\t    // and thus the 'error' event can only be only bound *after* this exception\n\t    // occurs.  Therefore, also, we cannot throw here at all.\n\t    setTimeout(function () {\n\t      self.onError(e);\n\t    }, 0);\n\t    return;\n\t  }\n\t\n\t  if (global.document) {\n\t    this.index = Request.requestsCount++;\n\t    Request.requests[this.index] = this;\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon successful response.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onSuccess = function () {\n\t  this.emit('success');\n\t  this.cleanup();\n\t};\n\t\n\t/**\n\t * Called if we have data.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onData = function (data) {\n\t  this.emit('data', data);\n\t  this.onSuccess();\n\t};\n\t\n\t/**\n\t * Called upon error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onError = function (err) {\n\t  this.emit('error', err);\n\t  this.cleanup(true);\n\t};\n\t\n\t/**\n\t * Cleans up house.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.cleanup = function (fromError) {\n\t  if ('undefined' === typeof this.xhr || null === this.xhr) {\n\t    return;\n\t  }\n\t  // xmlhttprequest\n\t  if (this.hasXDR()) {\n\t    this.xhr.onload = this.xhr.onerror = empty;\n\t  } else {\n\t    this.xhr.onreadystatechange = empty;\n\t  }\n\t\n\t  if (fromError) {\n\t    try {\n\t      this.xhr.abort();\n\t    } catch (e) {}\n\t  }\n\t\n\t  if (global.document) {\n\t    delete Request.requests[this.index];\n\t  }\n\t\n\t  this.xhr = null;\n\t};\n\t\n\t/**\n\t * Called upon load.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.onLoad = function () {\n\t  var data;\n\t  try {\n\t    var contentType;\n\t    try {\n\t      contentType = this.xhr.getResponseHeader('Content-Type');\n\t    } catch (e) {}\n\t    if (contentType === 'application/octet-stream') {\n\t      data = this.xhr.response || this.xhr.responseText;\n\t    } else {\n\t      data = this.xhr.responseText;\n\t    }\n\t  } catch (e) {\n\t    this.onError(e);\n\t  }\n\t  if (null != data) {\n\t    this.onData(data);\n\t  }\n\t};\n\t\n\t/**\n\t * Check if it has XDomainRequest.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.hasXDR = function () {\n\t  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n\t};\n\t\n\t/**\n\t * Aborts the request.\n\t *\n\t * @api public\n\t */\n\t\n\tRequest.prototype.abort = function () {\n\t  this.cleanup();\n\t};\n\t\n\t/**\n\t * Aborts pending requests when unloading the window. This is needed to prevent\n\t * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n\t * emitted.\n\t */\n\t\n\tRequest.requestsCount = 0;\n\tRequest.requests = {};\n\t\n\tif (global.document) {\n\t  if (global.attachEvent) {\n\t    global.attachEvent('onunload', unloadHandler);\n\t  } else if (global.addEventListener) {\n\t    global.addEventListener('beforeunload', unloadHandler, false);\n\t  }\n\t}\n\t\n\tfunction unloadHandler () {\n\t  for (var i in Request.requests) {\n\t    if (Request.requests.hasOwnProperty(i)) {\n\t      Request.requests[i].abort();\n\t    }\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar Transport = __webpack_require__(17);\n\tvar parseqs = __webpack_require__(32);\n\tvar parser = __webpack_require__(18);\n\tvar inherit = __webpack_require__(33);\n\tvar yeast = __webpack_require__(34);\n\tvar debug = __webpack_require__(3)('engine.io-client:polling');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = Polling;\n\t\n\t/**\n\t * Is XHR2 supported?\n\t */\n\t\n\tvar hasXHR2 = (function () {\n\t  var XMLHttpRequest = __webpack_require__(13);\n\t  var xhr = new XMLHttpRequest({ xdomain: false });\n\t  return null != xhr.responseType;\n\t})();\n\t\n\t/**\n\t * Polling interface.\n\t *\n\t * @param {Object} opts\n\t * @api private\n\t */\n\t\n\tfunction Polling (opts) {\n\t  var forceBase64 = (opts && opts.forceBase64);\n\t  if (!hasXHR2 || forceBase64) {\n\t    this.supportsBinary = false;\n\t  }\n\t  Transport.call(this, opts);\n\t}\n\t\n\t/**\n\t * Inherits from Transport.\n\t */\n\t\n\tinherit(Polling, Transport);\n\t\n\t/**\n\t * Transport name.\n\t */\n\t\n\tPolling.prototype.name = 'polling';\n\t\n\t/**\n\t * Opens the socket (triggers polling). We write a PING message to determine\n\t * when the transport is open.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.doOpen = function () {\n\t  this.poll();\n\t};\n\t\n\t/**\n\t * Pauses polling.\n\t *\n\t * @param {Function} callback upon buffers are flushed and transport is paused\n\t * @api private\n\t */\n\t\n\tPolling.prototype.pause = function (onPause) {\n\t  var self = this;\n\t\n\t  this.readyState = 'pausing';\n\t\n\t  function pause () {\n\t\n\t    self.readyState = 'paused';\n\t    onPause();\n\t  }\n\t\n\t  if (this.polling || !this.writable) {\n\t    var total = 0;\n\t\n\t    if (this.polling) {\n\t\n\t      total++;\n\t      this.once('pollComplete', function () {\n\t\n\t        --total || pause();\n\t      });\n\t    }\n\t\n\t    if (!this.writable) {\n\t\n\t      total++;\n\t      this.once('drain', function () {\n\t\n\t        --total || pause();\n\t      });\n\t    }\n\t  } else {\n\t    pause();\n\t  }\n\t};\n\t\n\t/**\n\t * Starts polling cycle.\n\t *\n\t * @api public\n\t */\n\t\n\tPolling.prototype.poll = function () {\n\t\n\t  this.polling = true;\n\t  this.doPoll();\n\t  this.emit('poll');\n\t};\n\t\n\t/**\n\t * Overloads onData to detect payloads.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.onData = function (data) {\n\t  var self = this;\n\t\n\t  var callback = function (packet, index, total) {\n\t    // if its the first message we consider the transport open\n\t    if ('opening' === self.readyState) {\n\t      self.onOpen();\n\t    }\n\t\n\t    // if its a close packet, we close the ongoing requests\n\t    if ('close' === packet.type) {\n\t      self.onClose();\n\t      return false;\n\t    }\n\t\n\t    // otherwise bypass onData and handle the message\n\t    self.onPacket(packet);\n\t  };\n\t\n\t  // decode payload\n\t  parser.decodePayload(data, this.socket.binaryType, callback);\n\t\n\t  // if an event did not trigger closing\n\t  if ('closed' !== this.readyState) {\n\t    // if we got data we're not polling\n\t    this.polling = false;\n\t    this.emit('pollComplete');\n\t\n\t    if ('open' === this.readyState) {\n\t      this.poll();\n\t    } else {\n\t\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * For polling, send a close packet.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.doClose = function () {\n\t  var self = this;\n\t\n\t  function close () {\n\t\n\t    self.write([{ type: 'close' }]);\n\t  }\n\t\n\t  if ('open' === this.readyState) {\n\t\n\t    close();\n\t  } else {\n\t    // in case we're trying to close while\n\t    // handshaking is in progress (GH-164)\n\t\n\t    this.once('open', close);\n\t  }\n\t};\n\t\n\t/**\n\t * Writes a packets payload.\n\t *\n\t * @param {Array} data packets\n\t * @param {Function} drain callback\n\t * @api private\n\t */\n\t\n\tPolling.prototype.write = function (packets) {\n\t  var self = this;\n\t  this.writable = false;\n\t  var callbackfn = function () {\n\t    self.writable = true;\n\t    self.emit('drain');\n\t  };\n\t\n\t  parser.encodePayload(packets, this.supportsBinary, function (data) {\n\t    self.doWrite(data, callbackfn);\n\t  });\n\t};\n\t\n\t/**\n\t * Generates uri for connection.\n\t *\n\t * @api private\n\t */\n\t\n\tPolling.prototype.uri = function () {\n\t  var query = this.query || {};\n\t  var schema = this.secure ? 'https' : 'http';\n\t  var port = '';\n\t\n\t  // cache busting is forced\n\t  if (false !== this.timestampRequests) {\n\t    query[this.timestampParam] = yeast();\n\t  }\n\t\n\t  if (!this.supportsBinary && !query.sid) {\n\t    query.b64 = 1;\n\t  }\n\t\n\t  query = parseqs.encode(query);\n\t\n\t  // avoid port if default for schema\n\t  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n\t     ('http' === schema && Number(this.port) !== 80))) {\n\t    port = ':' + this.port;\n\t  }\n\t\n\t  // prepend ? to query\n\t  if (query.length) {\n\t    query = '?' + query;\n\t  }\n\t\n\t  var ipv6 = this.hostname.indexOf(':') !== -1;\n\t  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n\t};\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar parser = __webpack_require__(18);\n\tvar Emitter = __webpack_require__(31);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = Transport;\n\t\n\t/**\n\t * Transport abstract constructor.\n\t *\n\t * @param {Object} options.\n\t * @api private\n\t */\n\t\n\tfunction Transport (opts) {\n\t  this.path = opts.path;\n\t  this.hostname = opts.hostname;\n\t  this.port = opts.port;\n\t  this.secure = opts.secure;\n\t  this.query = opts.query;\n\t  this.timestampParam = opts.timestampParam;\n\t  this.timestampRequests = opts.timestampRequests;\n\t  this.readyState = '';\n\t  this.agent = opts.agent || false;\n\t  this.socket = opts.socket;\n\t  this.enablesXDR = opts.enablesXDR;\n\t\n\t  // SSL options for Node.js client\n\t  this.pfx = opts.pfx;\n\t  this.key = opts.key;\n\t  this.passphrase = opts.passphrase;\n\t  this.cert = opts.cert;\n\t  this.ca = opts.ca;\n\t  this.ciphers = opts.ciphers;\n\t  this.rejectUnauthorized = opts.rejectUnauthorized;\n\t  this.forceNode = opts.forceNode;\n\t\n\t  // other options for Node.js client\n\t  this.extraHeaders = opts.extraHeaders;\n\t  this.localAddress = opts.localAddress;\n\t}\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Transport.prototype);\n\t\n\t/**\n\t * Emits an error.\n\t *\n\t * @param {String} str\n\t * @return {Transport} for chaining\n\t * @api public\n\t */\n\t\n\tTransport.prototype.onError = function (msg, desc) {\n\t  var err = new Error(msg);\n\t  err.type = 'TransportError';\n\t  err.description = desc;\n\t  this.emit('error', err);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Opens the transport.\n\t *\n\t * @api public\n\t */\n\t\n\tTransport.prototype.open = function () {\n\t  if ('closed' === this.readyState || '' === this.readyState) {\n\t    this.readyState = 'opening';\n\t    this.doOpen();\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Closes the transport.\n\t *\n\t * @api private\n\t */\n\t\n\tTransport.prototype.close = function () {\n\t  if ('opening' === this.readyState || 'open' === this.readyState) {\n\t    this.doClose();\n\t    this.onClose();\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends multiple packets.\n\t *\n\t * @param {Array} packets\n\t * @api private\n\t */\n\t\n\tTransport.prototype.send = function (packets) {\n\t  if ('open' === this.readyState) {\n\t    this.write(packets);\n\t  } else {\n\t    throw new Error('Transport not open');\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon open\n\t *\n\t * @api private\n\t */\n\t\n\tTransport.prototype.onOpen = function () {\n\t  this.readyState = 'open';\n\t  this.writable = true;\n\t  this.emit('open');\n\t};\n\t\n\t/**\n\t * Called with data.\n\t *\n\t * @param {String} data\n\t * @api private\n\t */\n\t\n\tTransport.prototype.onData = function (data) {\n\t  var packet = parser.decodePacket(data, this.socket.binaryType);\n\t  this.onPacket(packet);\n\t};\n\t\n\t/**\n\t * Called with a decoded packet.\n\t */\n\t\n\tTransport.prototype.onPacket = function (packet) {\n\t  this.emit('packet', packet);\n\t};\n\t\n\t/**\n\t * Called upon close.\n\t *\n\t * @api private\n\t */\n\t\n\tTransport.prototype.onClose = function () {\n\t  this.readyState = 'closed';\n\t  this.emit('close');\n\t};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar keys = __webpack_require__(19);\n\tvar hasBinary = __webpack_require__(20);\n\tvar sliceBuffer = __webpack_require__(26);\n\tvar after = __webpack_require__(27);\n\tvar utf8 = __webpack_require__(28);\n\t\n\tvar base64encoder;\n\tif (typeof ArrayBuffer !== 'undefined') {\n\t  base64encoder = __webpack_require__(29);\n\t}\n\t\n\t/**\n\t * Check if we are running an android browser. That requires us to use\n\t * ArrayBuffer with polling transports...\n\t *\n\t * http://ghinda.net/jpeg-blob-ajax-android/\n\t */\n\t\n\tvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\t\n\t/**\n\t * Check if we are running in PhantomJS.\n\t * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n\t * https://github.com/ariya/phantomjs/issues/11395\n\t * @type boolean\n\t */\n\tvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\t\n\t/**\n\t * When true, avoids using Blobs to encode payloads.\n\t * @type boolean\n\t */\n\tvar dontSendBlobs = isAndroid || isPhantomJS;\n\t\n\t/**\n\t * Current protocol version.\n\t */\n\t\n\texports.protocol = 3;\n\t\n\t/**\n\t * Packet types.\n\t */\n\t\n\tvar packets = exports.packets = {\n\t    open:     0    // non-ws\n\t  , close:    1    // non-ws\n\t  , ping:     2\n\t  , pong:     3\n\t  , message:  4\n\t  , upgrade:  5\n\t  , noop:     6\n\t};\n\t\n\tvar packetslist = keys(packets);\n\t\n\t/**\n\t * Premade error packet.\n\t */\n\t\n\tvar err = { type: 'error', data: 'parser error' };\n\t\n\t/**\n\t * Create a blob api even for blob builder when vendor prefixes exist\n\t */\n\t\n\tvar Blob = __webpack_require__(30);\n\t\n\t/**\n\t * Encodes a packet.\n\t *\n\t *     <packet type id> [ <data> ]\n\t *\n\t * Example:\n\t *\n\t *     5hello world\n\t *     3\n\t *     4\n\t *\n\t * Binary is encoded in an identical principle\n\t *\n\t * @api private\n\t */\n\t\n\texports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n\t  if (typeof supportsBinary === 'function') {\n\t    callback = supportsBinary;\n\t    supportsBinary = false;\n\t  }\n\t\n\t  if (typeof utf8encode === 'function') {\n\t    callback = utf8encode;\n\t    utf8encode = null;\n\t  }\n\t\n\t  var data = (packet.data === undefined)\n\t    ? undefined\n\t    : packet.data.buffer || packet.data;\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n\t    return encodeArrayBuffer(packet, supportsBinary, callback);\n\t  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n\t    return encodeBlob(packet, supportsBinary, callback);\n\t  }\n\t\n\t  // might be an object with { base64: true, data: dataAsBase64String }\n\t  if (data && data.base64) {\n\t    return encodeBase64Object(packet, callback);\n\t  }\n\t\n\t  // Sending data as a utf-8 string\n\t  var encoded = packets[packet.type];\n\t\n\t  // data fragment is optional\n\t  if (undefined !== packet.data) {\n\t    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n\t  }\n\t\n\t  return callback('' + encoded);\n\t\n\t};\n\t\n\tfunction encodeBase64Object(packet, callback) {\n\t  // packet data is an object { base64: true, data: dataAsBase64String }\n\t  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n\t  return callback(message);\n\t}\n\t\n\t/**\n\t * Encode packet helpers for binary types\n\t */\n\t\n\tfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  var data = packet.data;\n\t  var contentArray = new Uint8Array(data);\n\t  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\t\n\t  resultBuffer[0] = packets[packet.type];\n\t  for (var i = 0; i < contentArray.length; i++) {\n\t    resultBuffer[i+1] = contentArray[i];\n\t  }\n\t\n\t  return callback(resultBuffer.buffer);\n\t}\n\t\n\tfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  var fr = new FileReader();\n\t  fr.onload = function() {\n\t    exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);\n\t  };\n\t  return fr.readAsArrayBuffer(packet.data);\n\t}\n\t\n\tfunction encodeBlob(packet, supportsBinary, callback) {\n\t  if (!supportsBinary) {\n\t    return exports.encodeBase64Packet(packet, callback);\n\t  }\n\t\n\t  if (dontSendBlobs) {\n\t    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n\t  }\n\t\n\t  var length = new Uint8Array(1);\n\t  length[0] = packets[packet.type];\n\t  var blob = new Blob([length.buffer, packet.data]);\n\t\n\t  return callback(blob);\n\t}\n\t\n\t/**\n\t * Encodes a packet with binary data in a base64 string\n\t *\n\t * @param {Object} packet, has `type` and `data`\n\t * @return {String} base64 encoded message\n\t */\n\t\n\texports.encodeBase64Packet = function(packet, callback) {\n\t  var message = 'b' + exports.packets[packet.type];\n\t  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\n\t    var fr = new FileReader();\n\t    fr.onload = function() {\n\t      var b64 = fr.result.split(',')[1];\n\t      callback(message + b64);\n\t    };\n\t    return fr.readAsDataURL(packet.data);\n\t  }\n\t\n\t  var b64data;\n\t  try {\n\t    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n\t  } catch (e) {\n\t    // iPhone Safari doesn't let you apply with typed arrays\n\t    var typed = new Uint8Array(packet.data);\n\t    var basic = new Array(typed.length);\n\t    for (var i = 0; i < typed.length; i++) {\n\t      basic[i] = typed[i];\n\t    }\n\t    b64data = String.fromCharCode.apply(null, basic);\n\t  }\n\t  message += btoa(b64data);\n\t  return callback(message);\n\t};\n\t\n\t/**\n\t * Decodes a packet. Changes format to Blob if requested.\n\t *\n\t * @return {Object} with `type` and `data` (if any)\n\t * @api private\n\t */\n\t\n\texports.decodePacket = function (data, binaryType, utf8decode) {\n\t  if (data === undefined) {\n\t    return err;\n\t  }\n\t  // String data\n\t  if (typeof data === 'string') {\n\t    if (data.charAt(0) === 'b') {\n\t      return exports.decodeBase64Packet(data.substr(1), binaryType);\n\t    }\n\t\n\t    if (utf8decode) {\n\t      data = tryDecode(data);\n\t      if (data === false) {\n\t        return err;\n\t      }\n\t    }\n\t    var type = data.charAt(0);\n\t\n\t    if (Number(type) != type || !packetslist[type]) {\n\t      return err;\n\t    }\n\t\n\t    if (data.length > 1) {\n\t      return { type: packetslist[type], data: data.substring(1) };\n\t    } else {\n\t      return { type: packetslist[type] };\n\t    }\n\t  }\n\t\n\t  var asArray = new Uint8Array(data);\n\t  var type = asArray[0];\n\t  var rest = sliceBuffer(data, 1);\n\t  if (Blob && binaryType === 'blob') {\n\t    rest = new Blob([rest]);\n\t  }\n\t  return { type: packetslist[type], data: rest };\n\t};\n\t\n\tfunction tryDecode(data) {\n\t  try {\n\t    data = utf8.decode(data, { strict: false });\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t  return data;\n\t}\n\t\n\t/**\n\t * Decodes a packet encoded in a base64 string\n\t *\n\t * @param {String} base64 encoded message\n\t * @return {Object} with `type` and `data` (if any)\n\t */\n\t\n\texports.decodeBase64Packet = function(msg, binaryType) {\n\t  var type = packetslist[msg.charAt(0)];\n\t  if (!base64encoder) {\n\t    return { type: type, data: { base64: true, data: msg.substr(1) } };\n\t  }\n\t\n\t  var data = base64encoder.decode(msg.substr(1));\n\t\n\t  if (binaryType === 'blob' && Blob) {\n\t    data = new Blob([data]);\n\t  }\n\t\n\t  return { type: type, data: data };\n\t};\n\t\n\t/**\n\t * Encodes multiple messages (payload).\n\t *\n\t *     <length>:data\n\t *\n\t * Example:\n\t *\n\t *     11:hello world2:hi\n\t *\n\t * If any contents are binary, they will be encoded as base64 strings. Base64\n\t * encoded strings are marked with a b before the length specifier\n\t *\n\t * @param {Array} packets\n\t * @api private\n\t */\n\t\n\texports.encodePayload = function (packets, supportsBinary, callback) {\n\t  if (typeof supportsBinary === 'function') {\n\t    callback = supportsBinary;\n\t    supportsBinary = null;\n\t  }\n\t\n\t  var isBinary = hasBinary(packets);\n\t\n\t  if (supportsBinary && isBinary) {\n\t    if (Blob && !dontSendBlobs) {\n\t      return exports.encodePayloadAsBlob(packets, callback);\n\t    }\n\t\n\t    return exports.encodePayloadAsArrayBuffer(packets, callback);\n\t  }\n\t\n\t  if (!packets.length) {\n\t    return callback('0:');\n\t  }\n\t\n\t  function setLengthHeader(message) {\n\t    return message.length + ':' + message;\n\t  }\n\t\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n\t      doneCallback(null, setLengthHeader(message));\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, results) {\n\t    return callback(results.join(''));\n\t  });\n\t};\n\t\n\t/**\n\t * Async array map using after\n\t */\n\t\n\tfunction map(ary, each, done) {\n\t  var result = new Array(ary.length);\n\t  var next = after(ary.length, done);\n\t\n\t  var eachWithIndex = function(i, el, cb) {\n\t    each(el, function(error, msg) {\n\t      result[i] = msg;\n\t      cb(error, result);\n\t    });\n\t  };\n\t\n\t  for (var i = 0; i < ary.length; i++) {\n\t    eachWithIndex(i, ary[i], next);\n\t  }\n\t}\n\t\n\t/*\n\t * Decodes data when a payload is maybe expected. Possible binary contents are\n\t * decoded from their base64 representation\n\t *\n\t * @param {String} data, callback method\n\t * @api public\n\t */\n\t\n\texports.decodePayload = function (data, binaryType, callback) {\n\t  if (typeof data !== 'string') {\n\t    return exports.decodePayloadAsBinary(data, binaryType, callback);\n\t  }\n\t\n\t  if (typeof binaryType === 'function') {\n\t    callback = binaryType;\n\t    binaryType = null;\n\t  }\n\t\n\t  var packet;\n\t  if (data === '') {\n\t    // parser error - ignoring payload\n\t    return callback(err, 0, 1);\n\t  }\n\t\n\t  var length = '', n, msg;\n\t\n\t  for (var i = 0, l = data.length; i < l; i++) {\n\t    var chr = data.charAt(i);\n\t\n\t    if (chr !== ':') {\n\t      length += chr;\n\t      continue;\n\t    }\n\t\n\t    if (length === '' || (length != (n = Number(length)))) {\n\t      // parser error - ignoring payload\n\t      return callback(err, 0, 1);\n\t    }\n\t\n\t    msg = data.substr(i + 1, n);\n\t\n\t    if (length != msg.length) {\n\t      // parser error - ignoring payload\n\t      return callback(err, 0, 1);\n\t    }\n\t\n\t    if (msg.length) {\n\t      packet = exports.decodePacket(msg, binaryType, false);\n\t\n\t      if (err.type === packet.type && err.data === packet.data) {\n\t        // parser error in individual packet - ignoring payload\n\t        return callback(err, 0, 1);\n\t      }\n\t\n\t      var ret = callback(packet, i + n, l);\n\t      if (false === ret) return;\n\t    }\n\t\n\t    // advance cursor\n\t    i += n;\n\t    length = '';\n\t  }\n\t\n\t  if (length !== '') {\n\t    // parser error - ignoring payload\n\t    return callback(err, 0, 1);\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Encodes multiple messages (payload) as binary.\n\t *\n\t * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n\t * 255><data>\n\t *\n\t * Example:\n\t * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n\t *\n\t * @param {Array} packets\n\t * @return {ArrayBuffer} encoded payload\n\t * @api private\n\t */\n\t\n\texports.encodePayloadAsArrayBuffer = function(packets, callback) {\n\t  if (!packets.length) {\n\t    return callback(new ArrayBuffer(0));\n\t  }\n\t\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, true, true, function(data) {\n\t      return doneCallback(null, data);\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, encodedPackets) {\n\t    var totalLength = encodedPackets.reduce(function(acc, p) {\n\t      var len;\n\t      if (typeof p === 'string'){\n\t        len = p.length;\n\t      } else {\n\t        len = p.byteLength;\n\t      }\n\t      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n\t    }, 0);\n\t\n\t    var resultArray = new Uint8Array(totalLength);\n\t\n\t    var bufferIndex = 0;\n\t    encodedPackets.forEach(function(p) {\n\t      var isString = typeof p === 'string';\n\t      var ab = p;\n\t      if (isString) {\n\t        var view = new Uint8Array(p.length);\n\t        for (var i = 0; i < p.length; i++) {\n\t          view[i] = p.charCodeAt(i);\n\t        }\n\t        ab = view.buffer;\n\t      }\n\t\n\t      if (isString) { // not true binary\n\t        resultArray[bufferIndex++] = 0;\n\t      } else { // true binary\n\t        resultArray[bufferIndex++] = 1;\n\t      }\n\t\n\t      var lenStr = ab.byteLength.toString();\n\t      for (var i = 0; i < lenStr.length; i++) {\n\t        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n\t      }\n\t      resultArray[bufferIndex++] = 255;\n\t\n\t      var view = new Uint8Array(ab);\n\t      for (var i = 0; i < view.length; i++) {\n\t        resultArray[bufferIndex++] = view[i];\n\t      }\n\t    });\n\t\n\t    return callback(resultArray.buffer);\n\t  });\n\t};\n\t\n\t/**\n\t * Encode as Blob\n\t */\n\t\n\texports.encodePayloadAsBlob = function(packets, callback) {\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(packet, true, true, function(encoded) {\n\t      var binaryIdentifier = new Uint8Array(1);\n\t      binaryIdentifier[0] = 1;\n\t      if (typeof encoded === 'string') {\n\t        var view = new Uint8Array(encoded.length);\n\t        for (var i = 0; i < encoded.length; i++) {\n\t          view[i] = encoded.charCodeAt(i);\n\t        }\n\t        encoded = view.buffer;\n\t        binaryIdentifier[0] = 0;\n\t      }\n\t\n\t      var len = (encoded instanceof ArrayBuffer)\n\t        ? encoded.byteLength\n\t        : encoded.size;\n\t\n\t      var lenStr = len.toString();\n\t      var lengthAry = new Uint8Array(lenStr.length + 1);\n\t      for (var i = 0; i < lenStr.length; i++) {\n\t        lengthAry[i] = parseInt(lenStr[i]);\n\t      }\n\t      lengthAry[lenStr.length] = 255;\n\t\n\t      if (Blob) {\n\t        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n\t        doneCallback(null, blob);\n\t      }\n\t    });\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, results) {\n\t    return callback(new Blob(results));\n\t  });\n\t};\n\t\n\t/*\n\t * Decodes data when a payload is maybe expected. Strings are decoded by\n\t * interpreting each byte as a key code for entries marked to start with 0. See\n\t * description of encodePayloadAsBinary\n\t *\n\t * @param {ArrayBuffer} data, callback method\n\t * @api public\n\t */\n\t\n\texports.decodePayloadAsBinary = function (data, binaryType, callback) {\n\t  if (typeof binaryType === 'function') {\n\t    callback = binaryType;\n\t    binaryType = null;\n\t  }\n\t\n\t  var bufferTail = data;\n\t  var buffers = [];\n\t\n\t  while (bufferTail.byteLength > 0) {\n\t    var tailArray = new Uint8Array(bufferTail);\n\t    var isString = tailArray[0] === 0;\n\t    var msgLength = '';\n\t\n\t    for (var i = 1; ; i++) {\n\t      if (tailArray[i] === 255) break;\n\t\n\t      // 310 = char length of Number.MAX_VALUE\n\t      if (msgLength.length > 310) {\n\t        return callback(err, 0, 1);\n\t      }\n\t\n\t      msgLength += tailArray[i];\n\t    }\n\t\n\t    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n\t    msgLength = parseInt(msgLength);\n\t\n\t    var msg = sliceBuffer(bufferTail, 0, msgLength);\n\t    if (isString) {\n\t      try {\n\t        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n\t      } catch (e) {\n\t        // iPhone Safari doesn't let you apply to typed arrays\n\t        var typed = new Uint8Array(msg);\n\t        msg = '';\n\t        for (var i = 0; i < typed.length; i++) {\n\t          msg += String.fromCharCode(typed[i]);\n\t        }\n\t      }\n\t    }\n\t\n\t    buffers.push(msg);\n\t    bufferTail = sliceBuffer(bufferTail, msgLength);\n\t  }\n\t\n\t  var total = buffers.length;\n\t  buffers.forEach(function(buffer, i) {\n\t    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n\t  });\n\t};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * Gets the keys for an object.\n\t *\n\t * @return {Array} keys\n\t * @api private\n\t */\n\t\n\tmodule.exports = Object.keys || function keys (obj){\n\t  var arr = [];\n\t  var has = Object.prototype.hasOwnProperty;\n\t\n\t  for (var i in obj) {\n\t    if (has.call(obj, i)) {\n\t      arr.push(i);\n\t    }\n\t  }\n\t  return arr;\n\t};\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {/* global Blob File */\n\t\n\t/*\n\t * Module requirements.\n\t */\n\t\n\tvar isArray = __webpack_require__(25);\n\t\n\tvar toString = Object.prototype.toString;\n\tvar withNativeBlob = typeof Blob === 'function' ||\n\t                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\n\tvar withNativeFile = typeof File === 'function' ||\n\t                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = hasBinary;\n\t\n\t/**\n\t * Checks for binary data.\n\t *\n\t * Supports Buffer, ArrayBuffer, Blob and File.\n\t *\n\t * @param {Object} anything\n\t * @api public\n\t */\n\t\n\tfunction hasBinary (obj) {\n\t  if (!obj || typeof obj !== 'object') {\n\t    return false;\n\t  }\n\t\n\t  if (isArray(obj)) {\n\t    for (var i = 0, l = obj.length; i < l; i++) {\n\t      if (hasBinary(obj[i])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n\t    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n\t    (withNativeBlob && obj instanceof Blob) ||\n\t    (withNativeFile && obj instanceof File)\n\t  ) {\n\t    return true;\n\t  }\n\t\n\t  // see: https://github.com/Automattic/has-binary/pull/4\n\t  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n\t    return hasBinary(obj.toJSON(), true);\n\t  }\n\t\n\t  for (var key in obj) {\n\t    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n\t      return true;\n\t    }\n\t  }\n\t\n\t  return false;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21).Buffer))\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <http://feross.org>\n\t * @license  MIT\n\t */\n\t/* eslint-disable no-proto */\n\t\n\t'use strict'\n\t\n\tvar base64 = __webpack_require__(22)\n\tvar ieee754 = __webpack_require__(23)\n\tvar isArray = __webpack_require__(24)\n\t\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\t\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\t\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n\t  ? global.TYPED_ARRAY_SUPPORT\n\t  : typedArraySupport()\n\t\n\t/*\n\t * Export kMaxLength after typed array support is determined.\n\t */\n\texports.kMaxLength = kMaxLength()\n\t\n\tfunction typedArraySupport () {\n\t  try {\n\t    var arr = new Uint8Array(1)\n\t    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t}\n\t\n\tfunction kMaxLength () {\n\t  return Buffer.TYPED_ARRAY_SUPPORT\n\t    ? 0x7fffffff\n\t    : 0x3fffffff\n\t}\n\t\n\tfunction createBuffer (that, length) {\n\t  if (kMaxLength() < length) {\n\t    throw new RangeError('Invalid typed array length')\n\t  }\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = new Uint8Array(length)\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    if (that === null) {\n\t      that = new Buffer(length)\n\t    }\n\t    that.length = length\n\t  }\n\t\n\t  return that\n\t}\n\t\n\t/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */\n\t\n\tfunction Buffer (arg, encodingOrOffset, length) {\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n\t    return new Buffer(arg, encodingOrOffset, length)\n\t  }\n\t\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    if (typeof encodingOrOffset === 'string') {\n\t      throw new Error(\n\t        'If encoding is specified then the first argument must be a string'\n\t      )\n\t    }\n\t    return allocUnsafe(this, arg)\n\t  }\n\t  return from(this, arg, encodingOrOffset, length)\n\t}\n\t\n\tBuffer.poolSize = 8192 // not used by this implementation\n\t\n\t// TODO: Legacy, not needed anymore. Remove in next major version.\n\tBuffer._augment = function (arr) {\n\t  arr.__proto__ = Buffer.prototype\n\t  return arr\n\t}\n\t\n\tfunction from (that, value, encodingOrOffset, length) {\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number')\n\t  }\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    return fromArrayBuffer(that, value, encodingOrOffset, length)\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    return fromString(that, value, encodingOrOffset)\n\t  }\n\t\n\t  return fromObject(that, value)\n\t}\n\t\n\t/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/\n\tBuffer.from = function (value, encodingOrOffset, length) {\n\t  return from(null, value, encodingOrOffset, length)\n\t}\n\t\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  Buffer.prototype.__proto__ = Uint8Array.prototype\n\t  Buffer.__proto__ = Uint8Array\n\t  if (typeof Symbol !== 'undefined' && Symbol.species &&\n\t      Buffer[Symbol.species] === Buffer) {\n\t    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\t    Object.defineProperty(Buffer, Symbol.species, {\n\t      value: null,\n\t      configurable: true\n\t    })\n\t  }\n\t}\n\t\n\tfunction assertSize (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('\"size\" argument must be a number')\n\t  } else if (size < 0) {\n\t    throw new RangeError('\"size\" argument must not be negative')\n\t  }\n\t}\n\t\n\tfunction alloc (that, size, fill, encoding) {\n\t  assertSize(size)\n\t  if (size <= 0) {\n\t    return createBuffer(that, size)\n\t  }\n\t  if (fill !== undefined) {\n\t    // Only pay attention to encoding if it's a string. This\n\t    // prevents accidentally sending in a number that would\n\t    // be interpretted as a start offset.\n\t    return typeof encoding === 'string'\n\t      ? createBuffer(that, size).fill(fill, encoding)\n\t      : createBuffer(that, size).fill(fill)\n\t  }\n\t  return createBuffer(that, size)\n\t}\n\t\n\t/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/\n\tBuffer.alloc = function (size, fill, encoding) {\n\t  return alloc(null, size, fill, encoding)\n\t}\n\t\n\tfunction allocUnsafe (that, size) {\n\t  assertSize(size)\n\t  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < size; ++i) {\n\t      that[i] = 0\n\t    }\n\t  }\n\t  return that\n\t}\n\t\n\t/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */\n\tBuffer.allocUnsafe = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */\n\tBuffer.allocUnsafeSlow = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t\n\tfunction fromString (that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') {\n\t    encoding = 'utf8'\n\t  }\n\t\n\t  if (!Buffer.isEncoding(encoding)) {\n\t    throw new TypeError('\"encoding\" must be a valid string encoding')\n\t  }\n\t\n\t  var length = byteLength(string, encoding) | 0\n\t  that = createBuffer(that, length)\n\t\n\t  var actual = that.write(string, encoding)\n\t\n\t  if (actual !== length) {\n\t    // Writing a hex string, for example, that contains invalid characters will\n\t    // cause everything after the first invalid character to be ignored. (e.g.\n\t    // 'abxxcd' will be treated as 'ab')\n\t    that = that.slice(0, actual)\n\t  }\n\t\n\t  return that\n\t}\n\t\n\tfunction fromArrayLike (that, array) {\n\t  var length = array.length < 0 ? 0 : checked(array.length) | 0\n\t  that = createBuffer(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromArrayBuffer (that, array, byteOffset, length) {\n\t  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\t\n\t  if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t    throw new RangeError('\\'offset\\' is out of bounds')\n\t  }\n\t\n\t  if (array.byteLength < byteOffset + (length || 0)) {\n\t    throw new RangeError('\\'length\\' is out of bounds')\n\t  }\n\t\n\t  if (byteOffset === undefined && length === undefined) {\n\t    array = new Uint8Array(array)\n\t  } else if (length === undefined) {\n\t    array = new Uint8Array(array, byteOffset)\n\t  } else {\n\t    array = new Uint8Array(array, byteOffset, length)\n\t  }\n\t\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = array\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromArrayLike(that, array)\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromObject (that, obj) {\n\t  if (Buffer.isBuffer(obj)) {\n\t    var len = checked(obj.length) | 0\n\t    that = createBuffer(that, len)\n\t\n\t    if (that.length === 0) {\n\t      return that\n\t    }\n\t\n\t    obj.copy(that, 0, 0, len)\n\t    return that\n\t  }\n\t\n\t  if (obj) {\n\t    if ((typeof ArrayBuffer !== 'undefined' &&\n\t        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n\t      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n\t        return createBuffer(that, 0)\n\t      }\n\t      return fromArrayLike(that, obj)\n\t    }\n\t\n\t    if (obj.type === 'Buffer' && isArray(obj.data)) {\n\t      return fromArrayLike(that, obj.data)\n\t    }\n\t  }\n\t\n\t  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n\t}\n\t\n\tfunction checked (length) {\n\t  // Note: cannot use `length < kMaxLength()` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\t\n\tfunction SlowBuffer (length) {\n\t  if (+length != length) { // eslint-disable-line eqeqeq\n\t    length = 0\n\t  }\n\t  return Buffer.alloc(+length)\n\t}\n\t\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\t\n\tBuffer.compare = function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers')\n\t  }\n\t\n\t  if (a === b) return 0\n\t\n\t  var x = a.length\n\t  var y = b.length\n\t\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i]\n\t      y = b[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'latin1':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\t\n\tBuffer.concat = function concat (list, length) {\n\t  if (!isArray(list)) {\n\t    throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t  }\n\t\n\t  if (list.length === 0) {\n\t    return Buffer.alloc(0)\n\t  }\n\t\n\t  var i\n\t  if (length === undefined) {\n\t    length = 0\n\t    for (i = 0; i < list.length; ++i) {\n\t      length += list[i].length\n\t    }\n\t  }\n\t\n\t  var buffer = Buffer.allocUnsafe(length)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; ++i) {\n\t    var buf = list[i]\n\t    if (!Buffer.isBuffer(buf)) {\n\t      throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t    }\n\t    buf.copy(buffer, pos)\n\t    pos += buf.length\n\t  }\n\t  return buffer\n\t}\n\t\n\tfunction byteLength (string, encoding) {\n\t  if (Buffer.isBuffer(string)) {\n\t    return string.length\n\t  }\n\t  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n\t      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t    return string.byteLength\n\t  }\n\t  if (typeof string !== 'string') {\n\t    string = '' + string\n\t  }\n\t\n\t  var len = string.length\n\t  if (len === 0) return 0\n\t\n\t  // Use a for loop to avoid recursion\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return len\n\t      case 'utf8':\n\t      case 'utf-8':\n\t      case undefined:\n\t        return utf8ToBytes(string).length\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2\n\t      case 'hex':\n\t        return len >>> 1\n\t      case 'base64':\n\t        return base64ToBytes(string).length\n\t      default:\n\t        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength = byteLength\n\t\n\tfunction slowToString (encoding, start, end) {\n\t  var loweredCase = false\n\t\n\t  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n\t  // property of a typed array.\n\t\n\t  // This behaves neither like String nor Uint8Array in that we set start/end\n\t  // to their upper/lower bounds if the value passed is out of range.\n\t  // undefined is handled specially as per ECMA-262 6th Edition,\n\t  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\t  if (start === undefined || start < 0) {\n\t    start = 0\n\t  }\n\t  // Return early if start > this.length. Done here to prevent potential uint32\n\t  // coercion fail below.\n\t  if (start > this.length) {\n\t    return ''\n\t  }\n\t\n\t  if (end === undefined || end > this.length) {\n\t    end = this.length\n\t  }\n\t\n\t  if (end <= 0) {\n\t    return ''\n\t  }\n\t\n\t  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\t  end >>>= 0\n\t  start >>>= 0\n\t\n\t  if (end <= start) {\n\t    return ''\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\t\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Slice(this, start, end)\n\t\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\t// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n\t// Buffer instances.\n\tBuffer.prototype._isBuffer = true\n\t\n\tfunction swap (b, n, m) {\n\t  var i = b[n]\n\t  b[n] = b[m]\n\t  b[m] = i\n\t}\n\t\n\tBuffer.prototype.swap16 = function swap16 () {\n\t  var len = this.length\n\t  if (len % 2 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 16-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 2) {\n\t    swap(this, i, i + 1)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap32 = function swap32 () {\n\t  var len = this.length\n\t  if (len % 4 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 32-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 4) {\n\t    swap(this, i, i + 3)\n\t    swap(this, i + 1, i + 2)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap64 = function swap64 () {\n\t  var len = this.length\n\t  if (len % 8 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 64-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 8) {\n\t    swap(this, i, i + 7)\n\t    swap(this, i + 1, i + 6)\n\t    swap(this, i + 2, i + 5)\n\t    swap(this, i + 3, i + 4)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.toString = function toString () {\n\t  var length = this.length | 0\n\t  if (length === 0) return ''\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length)\n\t  return slowToString.apply(this, arguments)\n\t}\n\t\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\t\n\tBuffer.prototype.inspect = function inspect () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max) str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\t\n\tBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n\t  if (!Buffer.isBuffer(target)) {\n\t    throw new TypeError('Argument must be a Buffer')\n\t  }\n\t\n\t  if (start === undefined) {\n\t    start = 0\n\t  }\n\t  if (end === undefined) {\n\t    end = target ? target.length : 0\n\t  }\n\t  if (thisStart === undefined) {\n\t    thisStart = 0\n\t  }\n\t  if (thisEnd === undefined) {\n\t    thisEnd = this.length\n\t  }\n\t\n\t  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t    throw new RangeError('out of range index')\n\t  }\n\t\n\t  if (thisStart >= thisEnd && start >= end) {\n\t    return 0\n\t  }\n\t  if (thisStart >= thisEnd) {\n\t    return -1\n\t  }\n\t  if (start >= end) {\n\t    return 1\n\t  }\n\t\n\t  start >>>= 0\n\t  end >>>= 0\n\t  thisStart >>>= 0\n\t  thisEnd >>>= 0\n\t\n\t  if (this === target) return 0\n\t\n\t  var x = thisEnd - thisStart\n\t  var y = end - start\n\t  var len = Math.min(x, y)\n\t\n\t  var thisCopy = this.slice(thisStart, thisEnd)\n\t  var targetCopy = target.slice(start, end)\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    if (thisCopy[i] !== targetCopy[i]) {\n\t      x = thisCopy[i]\n\t      y = targetCopy[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\t// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n\t// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n\t//\n\t// Arguments:\n\t// - buffer - a Buffer to search\n\t// - val - a string, Buffer, or number\n\t// - byteOffset - an index into `buffer`; will be clamped to an int32\n\t// - encoding - an optional encoding, relevant is val is a string\n\t// - dir - true for indexOf, false for lastIndexOf\n\tfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n\t  // Empty buffer means no match\n\t  if (buffer.length === 0) return -1\n\t\n\t  // Normalize byteOffset\n\t  if (typeof byteOffset === 'string') {\n\t    encoding = byteOffset\n\t    byteOffset = 0\n\t  } else if (byteOffset > 0x7fffffff) {\n\t    byteOffset = 0x7fffffff\n\t  } else if (byteOffset < -0x80000000) {\n\t    byteOffset = -0x80000000\n\t  }\n\t  byteOffset = +byteOffset  // Coerce to Number.\n\t  if (isNaN(byteOffset)) {\n\t    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n\t    byteOffset = dir ? 0 : (buffer.length - 1)\n\t  }\n\t\n\t  // Normalize byteOffset: negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n\t  if (byteOffset >= buffer.length) {\n\t    if (dir) return -1\n\t    else byteOffset = buffer.length - 1\n\t  } else if (byteOffset < 0) {\n\t    if (dir) byteOffset = 0\n\t    else return -1\n\t  }\n\t\n\t  // Normalize val\n\t  if (typeof val === 'string') {\n\t    val = Buffer.from(val, encoding)\n\t  }\n\t\n\t  // Finally, search either indexOf (if dir is true) or lastIndexOf\n\t  if (Buffer.isBuffer(val)) {\n\t    // Special case: looking for empty string/buffer always fails\n\t    if (val.length === 0) {\n\t      return -1\n\t    }\n\t    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n\t  } else if (typeof val === 'number') {\n\t    val = val & 0xFF // Search for a byte value [0-255]\n\t    if (Buffer.TYPED_ARRAY_SUPPORT &&\n\t        typeof Uint8Array.prototype.indexOf === 'function') {\n\t      if (dir) {\n\t        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n\t      } else {\n\t        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n\t      }\n\t    }\n\t    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n\t  }\n\t\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\t\n\tfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n\t  var indexSize = 1\n\t  var arrLength = arr.length\n\t  var valLength = val.length\n\t\n\t  if (encoding !== undefined) {\n\t    encoding = String(encoding).toLowerCase()\n\t    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n\t        encoding === 'utf16le' || encoding === 'utf-16le') {\n\t      if (arr.length < 2 || val.length < 2) {\n\t        return -1\n\t      }\n\t      indexSize = 2\n\t      arrLength /= 2\n\t      valLength /= 2\n\t      byteOffset /= 2\n\t    }\n\t  }\n\t\n\t  function read (buf, i) {\n\t    if (indexSize === 1) {\n\t      return buf[i]\n\t    } else {\n\t      return buf.readUInt16BE(i * indexSize)\n\t    }\n\t  }\n\t\n\t  var i\n\t  if (dir) {\n\t    var foundIndex = -1\n\t    for (i = byteOffset; i < arrLength; i++) {\n\t      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t        if (foundIndex === -1) foundIndex = i\n\t        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n\t      } else {\n\t        if (foundIndex !== -1) i -= i - foundIndex\n\t        foundIndex = -1\n\t      }\n\t    }\n\t  } else {\n\t    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n\t    for (i = byteOffset; i >= 0; i--) {\n\t      var found = true\n\t      for (var j = 0; j < valLength; j++) {\n\t        if (read(arr, i + j) !== read(val, j)) {\n\t          found = false\n\t          break\n\t        }\n\t      }\n\t      if (found) return i\n\t    }\n\t  }\n\t\n\t  return -1\n\t}\n\t\n\tBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n\t  return this.indexOf(val, byteOffset, encoding) !== -1\n\t}\n\t\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n\t}\n\t\n\tBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n\t}\n\t\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\t\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\t\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; ++i) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(parsed)) return i\n\t    buf[offset + i] = parsed\n\t  }\n\t  return i\n\t}\n\t\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction latin1Write (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\t\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8'\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0\n\t    if (isFinite(length)) {\n\t      length = length | 0\n\t      if (encoding === undefined) encoding = 'utf8'\n\t    } else {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    throw new Error(\n\t      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n\t    )\n\t  }\n\t\n\t  var remaining = this.length - offset\n\t  if (length === undefined || length > remaining) length = remaining\n\t\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('Attempt to write outside buffer bounds')\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\t\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Write(this, string, offset, length)\n\t\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\t\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\t\n\tfunction utf8Slice (buf, start, end) {\n\t  end = Math.min(buf.length, end)\n\t  var res = []\n\t\n\t  var i = start\n\t  while (i < end) {\n\t    var firstByte = buf[i]\n\t    var codePoint = null\n\t    var bytesPerSequence = (firstByte > 0xEF) ? 4\n\t      : (firstByte > 0xDF) ? 3\n\t      : (firstByte > 0xBF) ? 2\n\t      : 1\n\t\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint\n\t\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte\n\t          }\n\t          break\n\t        case 2:\n\t          secondByte = buf[i + 1]\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 3:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 4:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          fourthByte = buf[i + 3]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t      }\n\t    }\n\t\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD\n\t      bytesPerSequence = 1\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n\t      codePoint = 0xDC00 | codePoint & 0x3FF\n\t    }\n\t\n\t    res.push(codePoint)\n\t    i += bytesPerSequence\n\t  }\n\t\n\t  return decodeCodePointsArray(res)\n\t}\n\t\n\t// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\tvar MAX_ARGUMENTS_LENGTH = 0x1000\n\t\n\tfunction decodeCodePointsArray (codePoints) {\n\t  var len = codePoints.length\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n\t  }\n\t\n\t  // Decode in chunks to avoid \"call stack size exceeded\".\n\t  var res = ''\n\t  var i = 0\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(\n\t      String,\n\t      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n\t    )\n\t  }\n\t  return res\n\t}\n\t\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction latin1Slice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\t\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\t\n\t  var out = ''\n\t  for (var i = start; i < end; ++i) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\t\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\t\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\t\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0) start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\t\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0) end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\t\n\t  if (end < start) end = start\n\t\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = this.subarray(start, end)\n\t    newBuf.__proto__ = Buffer.prototype\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined)\n\t    for (var i = 0; i < sliceLen; ++i) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\t\n\t  return newBuf\n\t}\n\t\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\t\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length)\n\t  }\n\t\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\t\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\t\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\t\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\t\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\t\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t}\n\t\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\t\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\t\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t}\n\t\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t  if (offset < 0) throw new RangeError('Index out of range')\n\t}\n\t\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\t\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\t\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\t\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (targetStart >= target.length) targetStart = target.length\n\t  if (!targetStart) targetStart = 0\n\t  if (end > 0 && end < start) end = start\n\t\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\t\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\t\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start\n\t  }\n\t\n\t  var len = end - start\n\t  var i\n\t\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; --i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; ++i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else {\n\t    Uint8Array.prototype.set.call(\n\t      target,\n\t      this.subarray(start, start + len),\n\t      targetStart\n\t    )\n\t  }\n\t\n\t  return len\n\t}\n\t\n\t// Usage:\n\t//    buffer.fill(number[, offset[, end]])\n\t//    buffer.fill(buffer[, offset[, end]])\n\t//    buffer.fill(string[, offset[, end]][, encoding])\n\tBuffer.prototype.fill = function fill (val, start, end, encoding) {\n\t  // Handle string cases:\n\t  if (typeof val === 'string') {\n\t    if (typeof start === 'string') {\n\t      encoding = start\n\t      start = 0\n\t      end = this.length\n\t    } else if (typeof end === 'string') {\n\t      encoding = end\n\t      end = this.length\n\t    }\n\t    if (val.length === 1) {\n\t      var code = val.charCodeAt(0)\n\t      if (code < 256) {\n\t        val = code\n\t      }\n\t    }\n\t    if (encoding !== undefined && typeof encoding !== 'string') {\n\t      throw new TypeError('encoding must be a string')\n\t    }\n\t    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n\t      throw new TypeError('Unknown encoding: ' + encoding)\n\t    }\n\t  } else if (typeof val === 'number') {\n\t    val = val & 255\n\t  }\n\t\n\t  // Invalid ranges are not set to a default, so can range check early.\n\t  if (start < 0 || this.length < start || this.length < end) {\n\t    throw new RangeError('Out of range index')\n\t  }\n\t\n\t  if (end <= start) {\n\t    return this\n\t  }\n\t\n\t  start = start >>> 0\n\t  end = end === undefined ? this.length : end >>> 0\n\t\n\t  if (!val) val = 0\n\t\n\t  var i\n\t  if (typeof val === 'number') {\n\t    for (i = start; i < end; ++i) {\n\t      this[i] = val\n\t    }\n\t  } else {\n\t    var bytes = Buffer.isBuffer(val)\n\t      ? val\n\t      : utf8ToBytes(new Buffer(val, encoding).toString())\n\t    var len = bytes.length\n\t    for (i = 0; i < end - start; ++i) {\n\t      this[i + start] = bytes[i % len]\n\t    }\n\t  }\n\t\n\t  return this\n\t}\n\t\n\t// HELPER FUNCTIONS\n\t// ================\n\t\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\t\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\t\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\t\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\t\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\t\n\t  for (var i = 0; i < length; ++i) {\n\t    codePoint = string.charCodeAt(i)\n\t\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        }\n\t\n\t        // valid lead\n\t        leadSurrogate = codePoint\n\t\n\t        continue\n\t      }\n\t\n\t      // 2 leads in a row\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t        leadSurrogate = codePoint\n\t        continue\n\t      }\n\t\n\t      // valid surrogate pair\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t    }\n\t\n\t    leadSurrogate = null\n\t\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\t\n\t  return bytes\n\t}\n\t\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\t\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    if ((units -= 2) < 0) break\n\t\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\t\n\t  return byteArray\n\t}\n\t\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\t\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; ++i) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\t\n\tfunction isnan (val) {\n\t  return val !== val // eslint-disable-line no-self-compare\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n\t'use strict'\n\t\n\texports.byteLength = byteLength\n\texports.toByteArray = toByteArray\n\texports.fromByteArray = fromByteArray\n\t\n\tvar lookup = []\n\tvar revLookup = []\n\tvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\t\n\tvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\tfor (var i = 0, len = code.length; i < len; ++i) {\n\t  lookup[i] = code[i]\n\t  revLookup[code.charCodeAt(i)] = i\n\t}\n\t\n\t// Support decoding URL-safe base64 strings, as Node.js does.\n\t// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\trevLookup['-'.charCodeAt(0)] = 62\n\trevLookup['_'.charCodeAt(0)] = 63\n\t\n\tfunction getLens (b64) {\n\t  var len = b64.length\n\t\n\t  if (len % 4 > 0) {\n\t    throw new Error('Invalid string. Length must be a multiple of 4')\n\t  }\n\t\n\t  // Trim off extra bytes after placeholder bytes are found\n\t  // See: https://github.com/beatgammit/base64-js/issues/42\n\t  var validLen = b64.indexOf('=')\n\t  if (validLen === -1) validLen = len\n\t\n\t  var placeHoldersLen = validLen === len\n\t    ? 0\n\t    : 4 - (validLen % 4)\n\t\n\t  return [validLen, placeHoldersLen]\n\t}\n\t\n\t// base64 is 4/3 + up to two characters of the original data\n\tfunction byteLength (b64) {\n\t  var lens = getLens(b64)\n\t  var validLen = lens[0]\n\t  var placeHoldersLen = lens[1]\n\t  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n\t}\n\t\n\tfunction _byteLength (b64, validLen, placeHoldersLen) {\n\t  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n\t}\n\t\n\tfunction toByteArray (b64) {\n\t  var tmp\n\t  var lens = getLens(b64)\n\t  var validLen = lens[0]\n\t  var placeHoldersLen = lens[1]\n\t\n\t  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\t\n\t  var curByte = 0\n\t\n\t  // if there are placeholders, only get up to the last complete 4 chars\n\t  var len = placeHoldersLen > 0\n\t    ? validLen - 4\n\t    : validLen\n\t\n\t  var i\n\t  for (i = 0; i < len; i += 4) {\n\t    tmp =\n\t      (revLookup[b64.charCodeAt(i)] << 18) |\n\t      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n\t      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n\t      revLookup[b64.charCodeAt(i + 3)]\n\t    arr[curByte++] = (tmp >> 16) & 0xFF\n\t    arr[curByte++] = (tmp >> 8) & 0xFF\n\t    arr[curByte++] = tmp & 0xFF\n\t  }\n\t\n\t  if (placeHoldersLen === 2) {\n\t    tmp =\n\t      (revLookup[b64.charCodeAt(i)] << 2) |\n\t      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n\t    arr[curByte++] = tmp & 0xFF\n\t  }\n\t\n\t  if (placeHoldersLen === 1) {\n\t    tmp =\n\t      (revLookup[b64.charCodeAt(i)] << 10) |\n\t      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n\t      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n\t    arr[curByte++] = (tmp >> 8) & 0xFF\n\t    arr[curByte++] = tmp & 0xFF\n\t  }\n\t\n\t  return arr\n\t}\n\t\n\tfunction tripletToBase64 (num) {\n\t  return lookup[num >> 18 & 0x3F] +\n\t    lookup[num >> 12 & 0x3F] +\n\t    lookup[num >> 6 & 0x3F] +\n\t    lookup[num & 0x3F]\n\t}\n\t\n\tfunction encodeChunk (uint8, start, end) {\n\t  var tmp\n\t  var output = []\n\t  for (var i = start; i < end; i += 3) {\n\t    tmp =\n\t      ((uint8[i] << 16) & 0xFF0000) +\n\t      ((uint8[i + 1] << 8) & 0xFF00) +\n\t      (uint8[i + 2] & 0xFF)\n\t    output.push(tripletToBase64(tmp))\n\t  }\n\t  return output.join('')\n\t}\n\t\n\tfunction fromByteArray (uint8) {\n\t  var tmp\n\t  var len = uint8.length\n\t  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n\t  var parts = []\n\t  var maxChunkLength = 16383 // must be multiple of 3\n\t\n\t  // go through the array every three bytes, we'll deal with trailing stuff later\n\t  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n\t  }\n\t\n\t  // pad the end with zeros, but make sure to not forget the extra bytes\n\t  if (extraBytes === 1) {\n\t    tmp = uint8[len - 1]\n\t    parts.push(\n\t      lookup[tmp >> 2] +\n\t      lookup[(tmp << 4) & 0x3F] +\n\t      '=='\n\t    )\n\t  } else if (extraBytes === 2) {\n\t    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n\t    parts.push(\n\t      lookup[tmp >> 10] +\n\t      lookup[(tmp >> 4) & 0x3F] +\n\t      lookup[(tmp << 2) & 0x3F] +\n\t      '='\n\t    )\n\t  }\n\t\n\t  return parts.join('')\n\t}\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\n\t/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\n\texports.read = function (buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m\n\t  var eLen = (nBytes * 8) - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var nBits = -7\n\t  var i = isLE ? (nBytes - 1) : 0\n\t  var d = isLE ? -1 : 1\n\t  var s = buffer[offset + i]\n\t\n\t  i += d\n\t\n\t  e = s & ((1 << (-nBits)) - 1)\n\t  s >>= (-nBits)\n\t  nBits += eLen\n\t  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  m = e & ((1 << (-nBits)) - 1)\n\t  e >>= (-nBits)\n\t  nBits += mLen\n\t  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  if (e === 0) {\n\t    e = 1 - eBias\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity)\n\t  } else {\n\t    m = m + Math.pow(2, mLen)\n\t    e = e - eBias\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n\t}\n\t\n\texports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c\n\t  var eLen = (nBytes * 8) - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n\t  var i = isLE ? 0 : (nBytes - 1)\n\t  var d = isLE ? 1 : -1\n\t  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\t\n\t  value = Math.abs(value)\n\t\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0\n\t    e = eMax\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2)\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--\n\t      c *= 2\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias)\n\t    }\n\t    if (value * c >= 2) {\n\t      e++\n\t      c /= 2\n\t    }\n\t\n\t    if (e + eBias >= eMax) {\n\t      m = 0\n\t      e = eMax\n\t    } else if (e + eBias >= 1) {\n\t      m = ((value * c) - 1) * Math.pow(2, mLen)\n\t      e = e + eBias\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n\t      e = 0\n\t    }\n\t  }\n\t\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\t\n\t  e = (e << mLen) | m\n\t  eLen += mLen\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\t\n\t  buffer[offset + i - d] |= s * 128\n\t}\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * An abstraction for slicing an arraybuffer even when\n\t * ArrayBuffer.prototype.slice is not supported\n\t *\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(arraybuffer, start, end) {\n\t  var bytes = arraybuffer.byteLength;\n\t  start = start || 0;\n\t  end = end || bytes;\n\t\n\t  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\t\n\t  if (start < 0) { start += bytes; }\n\t  if (end < 0) { end += bytes; }\n\t  if (end > bytes) { end = bytes; }\n\t\n\t  if (start >= bytes || start >= end || bytes === 0) {\n\t    return new ArrayBuffer(0);\n\t  }\n\t\n\t  var abv = new Uint8Array(arraybuffer);\n\t  var result = new Uint8Array(end - start);\n\t  for (var i = start, ii = 0; i < end; i++, ii++) {\n\t    result[ii] = abv[i];\n\t  }\n\t  return result.buffer;\n\t};\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = after\n\t\n\tfunction after(count, callback, err_cb) {\n\t    var bail = false\n\t    err_cb = err_cb || noop\n\t    proxy.count = count\n\t\n\t    return (count === 0) ? callback() : proxy\n\t\n\t    function proxy(err, result) {\n\t        if (proxy.count <= 0) {\n\t            throw new Error('after called too many times')\n\t        }\n\t        --proxy.count\n\t\n\t        // after first error, rest are passed to err_cb\n\t        if (err) {\n\t            bail = true\n\t            callback(err)\n\t            // future error callbacks will go to error handler\n\t            callback = err_cb\n\t        } else if (proxy.count === 0 && !bail) {\n\t            callback(null, result)\n\t        }\n\t    }\n\t}\n\t\n\tfunction noop() {}\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\n\t/*! https://mths.be/utf8js v2.1.2 by @mathias */\n\t\n\tvar stringFromCharCode = String.fromCharCode;\n\t\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\t\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\t\n\tfunction checkScalarValue(codePoint, strict) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tif (strict) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t/*--------------------------------------------------------------------------*/\n\t\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\t\n\tfunction encodeCodePoint(codePoint, strict) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\t\tcodePoint = 0xFFFD;\n\t\t\t}\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\t\n\tfunction utf8encode(string, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\t\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t\t}\n\t\treturn byteString;\n\t}\n\t\n\t/*--------------------------------------------------------------------------*/\n\t\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\t\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\t\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\t\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\t\n\tfunction decodeSymbol(strict) {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\t\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\t\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\t\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\t\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\t\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\t\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\t\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\t\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\t\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\t\n\tmodule.exports = {\n\t\tversion: '2.1.2',\n\t\tencode: utf8encode,\n\t\tdecode: utf8decode\n\t};\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\n\t/*\n\t * base64-arraybuffer\n\t * https://github.com/niklasvh/base64-arraybuffer\n\t *\n\t * Copyright (c) 2012 Niklas von Hertzen\n\t * Licensed under the MIT license.\n\t */\n\t(function(){\n\t  \"use strict\";\n\t\n\t  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\t\n\t  // Use a lookup table to find the index.\n\t  var lookup = new Uint8Array(256);\n\t  for (var i = 0; i < chars.length; i++) {\n\t    lookup[chars.charCodeAt(i)] = i;\n\t  }\n\t\n\t  exports.encode = function(arraybuffer) {\n\t    var bytes = new Uint8Array(arraybuffer),\n\t    i, len = bytes.length, base64 = \"\";\n\t\n\t    for (i = 0; i < len; i+=3) {\n\t      base64 += chars[bytes[i] >> 2];\n\t      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n\t      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n\t      base64 += chars[bytes[i + 2] & 63];\n\t    }\n\t\n\t    if ((len % 3) === 2) {\n\t      base64 = base64.substring(0, base64.length - 1) + \"=\";\n\t    } else if (len % 3 === 1) {\n\t      base64 = base64.substring(0, base64.length - 2) + \"==\";\n\t    }\n\t\n\t    return base64;\n\t  };\n\t\n\t  exports.decode =  function(base64) {\n\t    var bufferLength = base64.length * 0.75,\n\t    len = base64.length, i, p = 0,\n\t    encoded1, encoded2, encoded3, encoded4;\n\t\n\t    if (base64[base64.length - 1] === \"=\") {\n\t      bufferLength--;\n\t      if (base64[base64.length - 2] === \"=\") {\n\t        bufferLength--;\n\t      }\n\t    }\n\t\n\t    var arraybuffer = new ArrayBuffer(bufferLength),\n\t    bytes = new Uint8Array(arraybuffer);\n\t\n\t    for (i = 0; i < len; i+=4) {\n\t      encoded1 = lookup[base64.charCodeAt(i)];\n\t      encoded2 = lookup[base64.charCodeAt(i+1)];\n\t      encoded3 = lookup[base64.charCodeAt(i+2)];\n\t      encoded4 = lookup[base64.charCodeAt(i+3)];\n\t\n\t      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n\t      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n\t      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n\t    }\n\t\n\t    return arraybuffer;\n\t  };\n\t})();\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * Create a blob builder even when vendor prefixes exist\r\n\t */\r\n\t\r\n\tvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\r\n\t  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :\r\n\t  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\r\n\t  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : \r\n\t  false;\r\n\t\r\n\t/**\r\n\t * Check if Blob constructor is supported\r\n\t */\r\n\t\r\n\tvar blobSupported = (function() {\r\n\t  try {\r\n\t    var a = new Blob(['hi']);\r\n\t    return a.size === 2;\r\n\t  } catch(e) {\r\n\t    return false;\r\n\t  }\r\n\t})();\r\n\t\r\n\t/**\r\n\t * Check if Blob constructor supports ArrayBufferViews\r\n\t * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n\t */\r\n\t\r\n\tvar blobSupportsArrayBufferView = blobSupported && (function() {\r\n\t  try {\r\n\t    var b = new Blob([new Uint8Array([1,2])]);\r\n\t    return b.size === 2;\r\n\t  } catch(e) {\r\n\t    return false;\r\n\t  }\r\n\t})();\r\n\t\r\n\t/**\r\n\t * Check if BlobBuilder is supported\r\n\t */\r\n\t\r\n\tvar blobBuilderSupported = BlobBuilder\r\n\t  && BlobBuilder.prototype.append\r\n\t  && BlobBuilder.prototype.getBlob;\r\n\t\r\n\t/**\r\n\t * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n\t * Used by BlobBuilder constructor and old browsers that didn't\r\n\t * support it in the Blob constructor.\r\n\t */\r\n\t\r\n\tfunction mapArrayBufferViews(ary) {\r\n\t  return ary.map(function(chunk) {\r\n\t    if (chunk.buffer instanceof ArrayBuffer) {\r\n\t      var buf = chunk.buffer;\r\n\t\r\n\t      // if this is a subarray, make a copy so we only\r\n\t      // include the subarray region from the underlying buffer\r\n\t      if (chunk.byteLength !== buf.byteLength) {\r\n\t        var copy = new Uint8Array(chunk.byteLength);\r\n\t        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\r\n\t        buf = copy.buffer;\r\n\t      }\r\n\t\r\n\t      return buf;\r\n\t    }\r\n\t\r\n\t    return chunk;\r\n\t  });\r\n\t}\r\n\t\r\n\tfunction BlobBuilderConstructor(ary, options) {\r\n\t  options = options || {};\r\n\t\r\n\t  var bb = new BlobBuilder();\r\n\t  mapArrayBufferViews(ary).forEach(function(part) {\r\n\t    bb.append(part);\r\n\t  });\r\n\t\r\n\t  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\r\n\t};\r\n\t\r\n\tfunction BlobConstructor(ary, options) {\r\n\t  return new Blob(mapArrayBufferViews(ary), options || {});\r\n\t};\r\n\t\r\n\tif (typeof Blob !== 'undefined') {\r\n\t  BlobBuilderConstructor.prototype = Blob.prototype;\r\n\t  BlobConstructor.prototype = Blob.prototype;\r\n\t}\r\n\t\r\n\tmodule.exports = (function() {\r\n\t  if (blobSupported) {\r\n\t    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\r\n\t  } else if (blobBuilderSupported) {\r\n\t    return BlobBuilderConstructor;\r\n\t  } else {\r\n\t    return undefined;\r\n\t  }\r\n\t})();\r\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\r\n\t/**\r\n\t * Expose `Emitter`.\r\n\t */\r\n\t\r\n\tif (true) {\r\n\t  module.exports = Emitter;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialize a new `Emitter`.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction Emitter(obj) {\r\n\t  if (obj) return mixin(obj);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Mixin the emitter properties.\r\n\t *\r\n\t * @param {Object} obj\r\n\t * @return {Object}\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction mixin(obj) {\r\n\t  for (var key in Emitter.prototype) {\r\n\t    obj[key] = Emitter.prototype[key];\r\n\t  }\r\n\t  return obj;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Listen on the given `event` with `fn`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.on =\r\n\tEmitter.prototype.addEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n\t    .push(fn);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds an `event` listener that will be invoked a single\r\n\t * time then automatically removed.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.once = function(event, fn){\r\n\t  function on() {\r\n\t    this.off(event, on);\r\n\t    fn.apply(this, arguments);\r\n\t  }\r\n\t\r\n\t  on.fn = fn;\r\n\t  this.on(event, on);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Remove the given callback for `event` or all\r\n\t * registered callbacks.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.off =\r\n\tEmitter.prototype.removeListener =\r\n\tEmitter.prototype.removeAllListeners =\r\n\tEmitter.prototype.removeEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t\r\n\t  // all\r\n\t  if (0 == arguments.length) {\r\n\t    this._callbacks = {};\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // specific event\r\n\t  var callbacks = this._callbacks['$' + event];\r\n\t  if (!callbacks) return this;\r\n\t\r\n\t  // remove all handlers\r\n\t  if (1 == arguments.length) {\r\n\t    delete this._callbacks['$' + event];\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // remove specific handler\r\n\t  var cb;\r\n\t  for (var i = 0; i < callbacks.length; i++) {\r\n\t    cb = callbacks[i];\r\n\t    if (cb === fn || cb.fn === fn) {\r\n\t      callbacks.splice(i, 1);\r\n\t      break;\r\n\t    }\r\n\t  }\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Emit `event` with the given args.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Mixed} ...\r\n\t * @return {Emitter}\r\n\t */\r\n\t\r\n\tEmitter.prototype.emit = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  var args = [].slice.call(arguments, 1)\r\n\t    , callbacks = this._callbacks['$' + event];\r\n\t\r\n\t  if (callbacks) {\r\n\t    callbacks = callbacks.slice(0);\r\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n\t      callbacks[i].apply(this, args);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Return array of callbacks for `event`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Array}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.listeners = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  return this._callbacks['$' + event] || [];\r\n\t};\r\n\t\r\n\t/**\r\n\t * Check if this emitter has `event` handlers.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Boolean}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.hasListeners = function(event){\r\n\t  return !! this.listeners(event).length;\r\n\t};\r\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * Compiles a querystring\r\n\t * Returns string representation of the object\r\n\t *\r\n\t * @param {Object}\r\n\t * @api private\r\n\t */\r\n\t\r\n\texports.encode = function (obj) {\r\n\t  var str = '';\r\n\t\r\n\t  for (var i in obj) {\r\n\t    if (obj.hasOwnProperty(i)) {\r\n\t      if (str.length) str += '&';\r\n\t      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return str;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Parses a simple querystring into an object\r\n\t *\r\n\t * @param {String} qs\r\n\t * @api private\r\n\t */\r\n\t\r\n\texports.decode = function(qs){\r\n\t  var qry = {};\r\n\t  var pairs = qs.split('&');\r\n\t  for (var i = 0, l = pairs.length; i < l; i++) {\r\n\t    var pair = pairs[i].split('=');\r\n\t    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n\t  }\r\n\t  return qry;\r\n\t};\r\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\n\t\n\tmodule.exports = function(a, b){\n\t  var fn = function(){};\n\t  fn.prototype = b.prototype;\n\t  a.prototype = new fn;\n\t  a.prototype.constructor = a;\n\t};\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n\t  , length = 64\n\t  , map = {}\n\t  , seed = 0\n\t  , i = 0\n\t  , prev;\n\t\n\t/**\n\t * Return a string representing the specified number.\n\t *\n\t * @param {Number} num The number to convert.\n\t * @returns {String} The string representation of the number.\n\t * @api public\n\t */\n\tfunction encode(num) {\n\t  var encoded = '';\n\t\n\t  do {\n\t    encoded = alphabet[num % length] + encoded;\n\t    num = Math.floor(num / length);\n\t  } while (num > 0);\n\t\n\t  return encoded;\n\t}\n\t\n\t/**\n\t * Return the integer value specified by the given string.\n\t *\n\t * @param {String} str The string to convert.\n\t * @returns {Number} The integer value represented by the string.\n\t * @api public\n\t */\n\tfunction decode(str) {\n\t  var decoded = 0;\n\t\n\t  for (i = 0; i < str.length; i++) {\n\t    decoded = decoded * length + map[str.charAt(i)];\n\t  }\n\t\n\t  return decoded;\n\t}\n\t\n\t/**\n\t * Yeast: A tiny growing id generator.\n\t *\n\t * @returns {String} A unique id.\n\t * @api public\n\t */\n\tfunction yeast() {\n\t  var now = encode(+new Date());\n\t\n\t  if (now !== prev) return seed = 0, prev = now;\n\t  return now +'.'+ encode(seed++);\n\t}\n\t\n\t//\n\t// Map each character to its index.\n\t//\n\tfor (; i < length; i++) map[alphabet[i]] = i;\n\t\n\t//\n\t// Expose the `yeast`, `encode` and `decode` functions.\n\t//\n\tyeast.encode = encode;\n\tyeast.decode = decode;\n\tmodule.exports = yeast;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\t/**\n\t * Module requirements.\n\t */\n\t\n\tvar Polling = __webpack_require__(16);\n\tvar inherit = __webpack_require__(33);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = JSONPPolling;\n\t\n\t/**\n\t * Cached regular expressions.\n\t */\n\t\n\tvar rNewline = /\\n/g;\n\tvar rEscapedNewline = /\\\\n/g;\n\t\n\t/**\n\t * Global JSONP callbacks.\n\t */\n\t\n\tvar callbacks;\n\t\n\t/**\n\t * Noop.\n\t */\n\t\n\tfunction empty () { }\n\t\n\t/**\n\t * JSONP Polling constructor.\n\t *\n\t * @param {Object} opts.\n\t * @api public\n\t */\n\t\n\tfunction JSONPPolling (opts) {\n\t  Polling.call(this, opts);\n\t\n\t  this.query = this.query || {};\n\t\n\t  // define global callbacks array if not present\n\t  // we do this here (lazily) to avoid unneeded global pollution\n\t  if (!callbacks) {\n\t    // we need to consider multiple engines in the same page\n\t    if (!global.___eio) global.___eio = [];\n\t    callbacks = global.___eio;\n\t  }\n\t\n\t  // callback identifier\n\t  this.index = callbacks.length;\n\t\n\t  // add callback to jsonp global\n\t  var self = this;\n\t  callbacks.push(function (msg) {\n\t    self.onData(msg);\n\t  });\n\t\n\t  // append to query string\n\t  this.query.j = this.index;\n\t\n\t  // prevent spurious errors from being emitted when the window is unloaded\n\t  if (global.document && global.addEventListener) {\n\t    global.addEventListener('beforeunload', function () {\n\t      if (self.script) self.script.onerror = empty;\n\t    }, false);\n\t  }\n\t}\n\t\n\t/**\n\t * Inherits from Polling.\n\t */\n\t\n\tinherit(JSONPPolling, Polling);\n\t\n\t/*\n\t * JSONP only supports binary as base64 encoded strings\n\t */\n\t\n\tJSONPPolling.prototype.supportsBinary = false;\n\t\n\t/**\n\t * Closes the socket.\n\t *\n\t * @api private\n\t */\n\t\n\tJSONPPolling.prototype.doClose = function () {\n\t  if (this.script) {\n\t    this.script.parentNode.removeChild(this.script);\n\t    this.script = null;\n\t  }\n\t\n\t  if (this.form) {\n\t    this.form.parentNode.removeChild(this.form);\n\t    this.form = null;\n\t    this.iframe = null;\n\t  }\n\t\n\t  Polling.prototype.doClose.call(this);\n\t};\n\t\n\t/**\n\t * Starts a poll cycle.\n\t *\n\t * @api private\n\t */\n\t\n\tJSONPPolling.prototype.doPoll = function () {\n\t  var self = this;\n\t  var script = document.createElement('script');\n\t\n\t  if (this.script) {\n\t    this.script.parentNode.removeChild(this.script);\n\t    this.script = null;\n\t  }\n\t\n\t  script.async = true;\n\t  script.src = this.uri();\n\t  script.onerror = function (e) {\n\t    self.onError('jsonp poll error', e);\n\t  };\n\t\n\t  var insertAt = document.getElementsByTagName('script')[0];\n\t  if (insertAt) {\n\t    insertAt.parentNode.insertBefore(script, insertAt);\n\t  } else {\n\t    (document.head || document.body).appendChild(script);\n\t  }\n\t  this.script = script;\n\t\n\t  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\t\n\t  if (isUAgecko) {\n\t    setTimeout(function () {\n\t      var iframe = document.createElement('iframe');\n\t      document.body.appendChild(iframe);\n\t      document.body.removeChild(iframe);\n\t    }, 100);\n\t  }\n\t};\n\t\n\t/**\n\t * Writes with a hidden iframe.\n\t *\n\t * @param {String} data to send\n\t * @param {Function} called upon flush.\n\t * @api private\n\t */\n\t\n\tJSONPPolling.prototype.doWrite = function (data, fn) {\n\t  var self = this;\n\t\n\t  if (!this.form) {\n\t    var form = document.createElement('form');\n\t    var area = document.createElement('textarea');\n\t    var id = this.iframeId = 'eio_iframe_' + this.index;\n\t    var iframe;\n\t\n\t    form.className = 'socketio';\n\t    form.style.position = 'absolute';\n\t    form.style.top = '-1000px';\n\t    form.style.left = '-1000px';\n\t    form.target = id;\n\t    form.method = 'POST';\n\t    form.setAttribute('accept-charset', 'utf-8');\n\t    area.name = 'd';\n\t    form.appendChild(area);\n\t    document.body.appendChild(form);\n\t\n\t    this.form = form;\n\t    this.area = area;\n\t  }\n\t\n\t  this.form.action = this.uri();\n\t\n\t  function complete () {\n\t    initIframe();\n\t    fn();\n\t  }\n\t\n\t  function initIframe () {\n\t    if (self.iframe) {\n\t      try {\n\t        self.form.removeChild(self.iframe);\n\t      } catch (e) {\n\t        self.onError('jsonp polling iframe removal error', e);\n\t      }\n\t    }\n\t\n\t    try {\n\t      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n\t      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n\t      iframe = document.createElement(html);\n\t    } catch (e) {\n\t      iframe = document.createElement('iframe');\n\t      iframe.name = self.iframeId;\n\t      iframe.src = 'javascript:0';\n\t    }\n\t\n\t    iframe.id = self.iframeId;\n\t\n\t    self.form.appendChild(iframe);\n\t    self.iframe = iframe;\n\t  }\n\t\n\t  initIframe();\n\t\n\t  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n\t  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n\t  data = data.replace(rEscapedNewline, '\\\\\\n');\n\t  this.area.value = data.replace(rNewline, '\\\\n');\n\t\n\t  try {\n\t    this.form.submit();\n\t  } catch (e) {}\n\t\n\t  if (this.iframe.attachEvent) {\n\t    this.iframe.onreadystatechange = function () {\n\t      if (self.iframe.readyState === 'complete') {\n\t        complete();\n\t      }\n\t    };\n\t  } else {\n\t    this.iframe.onload = complete;\n\t  }\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * Module dependencies.\n\t */\n\t\n\tvar Transport = __webpack_require__(17);\n\tvar parser = __webpack_require__(18);\n\tvar parseqs = __webpack_require__(32);\n\tvar inherit = __webpack_require__(33);\n\tvar yeast = __webpack_require__(34);\n\tvar debug = __webpack_require__(3)('engine.io-client:websocket');\n\tvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\n\tvar NodeWebSocket;\n\tif (typeof window === 'undefined') {\n\t  try {\n\t    NodeWebSocket = __webpack_require__(37);\n\t  } catch (e) { }\n\t}\n\t\n\t/**\n\t * Get either the `WebSocket` or `MozWebSocket` globals\n\t * in the browser or try to resolve WebSocket-compatible\n\t * interface exposed by `ws` for Node-like environment.\n\t */\n\t\n\tvar WebSocket = BrowserWebSocket;\n\tif (!WebSocket && typeof window === 'undefined') {\n\t  WebSocket = NodeWebSocket;\n\t}\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = WS;\n\t\n\t/**\n\t * WebSocket transport constructor.\n\t *\n\t * @api {Object} connection options\n\t * @api public\n\t */\n\t\n\tfunction WS (opts) {\n\t  var forceBase64 = (opts && opts.forceBase64);\n\t  if (forceBase64) {\n\t    this.supportsBinary = false;\n\t  }\n\t  this.perMessageDeflate = opts.perMessageDeflate;\n\t  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n\t  this.protocols = opts.protocols;\n\t  if (!this.usingBrowserWebSocket) {\n\t    WebSocket = NodeWebSocket;\n\t  }\n\t  Transport.call(this, opts);\n\t}\n\t\n\t/**\n\t * Inherits from Transport.\n\t */\n\t\n\tinherit(WS, Transport);\n\t\n\t/**\n\t * Transport name.\n\t *\n\t * @api public\n\t */\n\t\n\tWS.prototype.name = 'websocket';\n\t\n\t/*\n\t * WebSockets support binary\n\t */\n\t\n\tWS.prototype.supportsBinary = true;\n\t\n\t/**\n\t * Opens socket.\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.doOpen = function () {\n\t  if (!this.check()) {\n\t    // let probe timeout\n\t    return;\n\t  }\n\t\n\t  var uri = this.uri();\n\t  var protocols = this.protocols;\n\t  var opts = {\n\t    agent: this.agent,\n\t    perMessageDeflate: this.perMessageDeflate\n\t  };\n\t\n\t  // SSL options for Node.js client\n\t  opts.pfx = this.pfx;\n\t  opts.key = this.key;\n\t  opts.passphrase = this.passphrase;\n\t  opts.cert = this.cert;\n\t  opts.ca = this.ca;\n\t  opts.ciphers = this.ciphers;\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\n\t  if (this.extraHeaders) {\n\t    opts.headers = this.extraHeaders;\n\t  }\n\t  if (this.localAddress) {\n\t    opts.localAddress = this.localAddress;\n\t  }\n\t\n\t  try {\n\t    this.ws = this.usingBrowserWebSocket ? (protocols ? new WebSocket(uri, protocols) : new WebSocket(uri)) : new WebSocket(uri, protocols, opts);\n\t  } catch (err) {\n\t    return this.emit('error', err);\n\t  }\n\t\n\t  if (this.ws.binaryType === undefined) {\n\t    this.supportsBinary = false;\n\t  }\n\t\n\t  if (this.ws.supports && this.ws.supports.binary) {\n\t    this.supportsBinary = true;\n\t    this.ws.binaryType = 'nodebuffer';\n\t  } else {\n\t    this.ws.binaryType = 'arraybuffer';\n\t  }\n\t\n\t  this.addEventListeners();\n\t};\n\t\n\t/**\n\t * Adds event listeners to the socket\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.addEventListeners = function () {\n\t  var self = this;\n\t\n\t  this.ws.onopen = function () {\n\t    self.onOpen();\n\t  };\n\t  this.ws.onclose = function () {\n\t    self.onClose();\n\t  };\n\t  this.ws.onmessage = function (ev) {\n\t    self.onData(ev.data);\n\t  };\n\t  this.ws.onerror = function (e) {\n\t    self.onError('websocket error', e);\n\t  };\n\t};\n\t\n\t/**\n\t * Writes data to socket.\n\t *\n\t * @param {Array} array of packets.\n\t * @api private\n\t */\n\t\n\tWS.prototype.write = function (packets) {\n\t  var self = this;\n\t  this.writable = false;\n\t\n\t  // encodePacket efficient as it uses WS framing\n\t  // no need for encodePayload\n\t  var total = packets.length;\n\t  for (var i = 0, l = total; i < l; i++) {\n\t    (function (packet) {\n\t      parser.encodePacket(packet, self.supportsBinary, function (data) {\n\t        if (!self.usingBrowserWebSocket) {\n\t          // always create a new object (GH-437)\n\t          var opts = {};\n\t          if (packet.options) {\n\t            opts.compress = packet.options.compress;\n\t          }\n\t\n\t          if (self.perMessageDeflate) {\n\t            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n\t            if (len < self.perMessageDeflate.threshold) {\n\t              opts.compress = false;\n\t            }\n\t          }\n\t        }\n\t\n\t        // Sometimes the websocket has already been closed but the browser didn't\n\t        // have a chance of informing us about it yet, in that case send will\n\t        // throw an error\n\t        try {\n\t          if (self.usingBrowserWebSocket) {\n\t            // TypeError is thrown when passing the second argument on Safari\n\t            self.ws.send(data);\n\t          } else {\n\t            self.ws.send(data, opts);\n\t          }\n\t        } catch (e) {\n\t\n\t        }\n\t\n\t        --total || done();\n\t      });\n\t    })(packets[i]);\n\t  }\n\t\n\t  function done () {\n\t    self.emit('flush');\n\t\n\t    // fake drain\n\t    // defer to next tick to allow Socket to clear writeBuffer\n\t    setTimeout(function () {\n\t      self.writable = true;\n\t      self.emit('drain');\n\t    }, 0);\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon close\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.onClose = function () {\n\t  Transport.prototype.onClose.call(this);\n\t};\n\t\n\t/**\n\t * Closes socket.\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.doClose = function () {\n\t  if (typeof this.ws !== 'undefined') {\n\t    this.ws.close();\n\t  }\n\t};\n\t\n\t/**\n\t * Generates uri for connection.\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.uri = function () {\n\t  var query = this.query || {};\n\t  var schema = this.secure ? 'wss' : 'ws';\n\t  var port = '';\n\t\n\t  // avoid port if default for schema\n\t  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n\t    ('ws' === schema && Number(this.port) !== 80))) {\n\t    port = ':' + this.port;\n\t  }\n\t\n\t  // append timestamp to URI\n\t  if (this.timestampRequests) {\n\t    query[this.timestampParam] = yeast();\n\t  }\n\t\n\t  // communicate binary support capabilities\n\t  if (!this.supportsBinary) {\n\t    query.b64 = 1;\n\t  }\n\t\n\t  query = parseqs.encode(query);\n\t\n\t  // prepend ? to query\n\t  if (query.length) {\n\t    query = '?' + query;\n\t  }\n\t\n\t  var ipv6 = this.hostname.indexOf(':') !== -1;\n\t  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n\t};\n\t\n\t/**\n\t * Feature detection for WebSocket.\n\t *\n\t * @return {Boolean} whether this transport is available.\n\t * @api public\n\t */\n\t\n\tWS.prototype.check = function () {\n\t  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports) {\n\n\t\n\tvar indexOf = [].indexOf;\n\t\n\tmodule.exports = function(arr, obj){\n\t  if (indexOf) return arr.indexOf(obj);\n\t  for (var i = 0; i < arr.length; ++i) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t};\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar parser = __webpack_require__(4);\n\tvar Emitter = __webpack_require__(31);\n\tvar toArray = __webpack_require__(40);\n\tvar on = __webpack_require__(41);\n\tvar bind = __webpack_require__(42);\n\tvar debug = __webpack_require__(3)('socket.io-client:socket');\n\tvar parseqs = __webpack_require__(32);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = exports = Socket;\n\t\n\t/**\n\t * Internal events (blacklisted).\n\t * These events can't be emitted by the user.\n\t *\n\t * @api private\n\t */\n\t\n\tvar events = {\n\t  connect: 1,\n\t  connect_error: 1,\n\t  connect_timeout: 1,\n\t  connecting: 1,\n\t  disconnect: 1,\n\t  error: 1,\n\t  reconnect: 1,\n\t  reconnect_attempt: 1,\n\t  reconnect_failed: 1,\n\t  reconnect_error: 1,\n\t  reconnecting: 1,\n\t  ping: 1,\n\t  pong: 1\n\t};\n\t\n\t/**\n\t * Shortcut to `Emitter#emit`.\n\t */\n\t\n\tvar emit = Emitter.prototype.emit;\n\t\n\t/**\n\t * `Socket` constructor.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Socket(io, nsp, opts) {\n\t  this.io = io;\n\t  this.nsp = nsp;\n\t  this.json = this; // compat\n\t  this.ids = 0;\n\t  this.acks = {};\n\t  this.receiveBuffer = [];\n\t  this.sendBuffer = [];\n\t  this.connected = false;\n\t  this.disconnected = true;\n\t  if (opts && opts.query) {\n\t    this.query = opts.query;\n\t  }\n\t  if (this.io.autoConnect) this.open();\n\t}\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Socket.prototype);\n\t\n\t/**\n\t * Subscribe to open, close and packet events\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.subEvents = function () {\n\t  if (this.subs) return;\n\t\n\t  var io = this.io;\n\t  this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];\n\t};\n\t\n\t/**\n\t * \"Opens\" the socket.\n\t *\n\t * @api public\n\t */\n\t\n\tSocket.prototype.open = Socket.prototype.connect = function () {\n\t  if (this.connected) return this;\n\t\n\t  this.subEvents();\n\t  this.io.open(); // ensure open\n\t  if ('open' === this.io.readyState) this.onopen();\n\t  this.emit('connecting');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends a `message` event.\n\t *\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.send = function () {\n\t  var args = toArray(arguments);\n\t  args.unshift('message');\n\t  this.emit.apply(this, args);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Override `emit`.\n\t * If the event is in `events`, it's emitted normally.\n\t *\n\t * @param {String} event name\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.emit = function (ev) {\n\t  if (events.hasOwnProperty(ev)) {\n\t    emit.apply(this, arguments);\n\t    return this;\n\t  }\n\t\n\t  var args = toArray(arguments);\n\t  var packet = { type: parser.EVENT, data: args };\n\t\n\t  packet.options = {};\n\t  packet.options.compress = !this.flags || false !== this.flags.compress;\n\t\n\t  // event ack callback\n\t  if ('function' === typeof args[args.length - 1]) {\n\t\n\t    this.acks[this.ids] = args.pop();\n\t    packet.id = this.ids++;\n\t  }\n\t\n\t  if (this.connected) {\n\t    this.packet(packet);\n\t  } else {\n\t    this.sendBuffer.push(packet);\n\t  }\n\t\n\t  delete this.flags;\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends a packet.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.packet = function (packet) {\n\t  packet.nsp = this.nsp;\n\t  this.io.packet(packet);\n\t};\n\t\n\t/**\n\t * Called upon engine `open`.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onopen = function () {\n\t\n\t  // write connect packet if necessary\n\t  if ('/' !== this.nsp) {\n\t    if (this.query) {\n\t      var query = _typeof(this.query) === 'object' ? parseqs.encode(this.query) : this.query;\n\t\n\t      this.packet({ type: parser.CONNECT, query: query });\n\t    } else {\n\t      this.packet({ type: parser.CONNECT });\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon engine `close`.\n\t *\n\t * @param {String} reason\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onclose = function (reason) {\n\t\n\t  this.connected = false;\n\t  this.disconnected = true;\n\t  delete this.id;\n\t  this.emit('disconnect', reason);\n\t};\n\t\n\t/**\n\t * Called with socket packet.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onpacket = function (packet) {\n\t  if (packet.nsp !== this.nsp) return;\n\t\n\t  switch (packet.type) {\n\t    case parser.CONNECT:\n\t      this.onconnect();\n\t      break;\n\t\n\t    case parser.EVENT:\n\t      this.onevent(packet);\n\t      break;\n\t\n\t    case parser.BINARY_EVENT:\n\t      this.onevent(packet);\n\t      break;\n\t\n\t    case parser.ACK:\n\t      this.onack(packet);\n\t      break;\n\t\n\t    case parser.BINARY_ACK:\n\t      this.onack(packet);\n\t      break;\n\t\n\t    case parser.DISCONNECT:\n\t      this.ondisconnect();\n\t      break;\n\t\n\t    case parser.ERROR:\n\t      this.emit('error', packet.data);\n\t      break;\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon a server event.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onevent = function (packet) {\n\t  var args = packet.data || [];\n\t\n\t  if (null != packet.id) {\n\t\n\t    args.push(this.ack(packet.id));\n\t  }\n\t\n\t  if (this.connected) {\n\t    emit.apply(this, args);\n\t  } else {\n\t    this.receiveBuffer.push(args);\n\t  }\n\t};\n\t\n\t/**\n\t * Produces an ack callback to emit with an event.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.ack = function (id) {\n\t  var self = this;\n\t  var sent = false;\n\t  return function () {\n\t    // prevent double callbacks\n\t    if (sent) return;\n\t    sent = true;\n\t    var args = toArray(arguments);\n\t\n\t    self.packet({\n\t      type: parser.ACK,\n\t      id: id,\n\t      data: args\n\t    });\n\t  };\n\t};\n\t\n\t/**\n\t * Called upon a server acknowlegement.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onack = function (packet) {\n\t  var ack = this.acks[packet.id];\n\t  if ('function' === typeof ack) {\n\t\n\t    ack.apply(this, packet.data);\n\t    delete this.acks[packet.id];\n\t  } else {}\n\t};\n\t\n\t/**\n\t * Called upon server connect.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onconnect = function () {\n\t  this.connected = true;\n\t  this.disconnected = false;\n\t  this.emit('connect');\n\t  this.emitBuffered();\n\t};\n\t\n\t/**\n\t * Emit buffered events (received and emitted).\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.emitBuffered = function () {\n\t  var i;\n\t  for (i = 0; i < this.receiveBuffer.length; i++) {\n\t    emit.apply(this, this.receiveBuffer[i]);\n\t  }\n\t  this.receiveBuffer = [];\n\t\n\t  for (i = 0; i < this.sendBuffer.length; i++) {\n\t    this.packet(this.sendBuffer[i]);\n\t  }\n\t  this.sendBuffer = [];\n\t};\n\t\n\t/**\n\t * Called upon server disconnect.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.ondisconnect = function () {\n\t\n\t  this.destroy();\n\t  this.onclose('io server disconnect');\n\t};\n\t\n\t/**\n\t * Called upon forced client/server side disconnections,\n\t * this method ensures the manager stops tracking us and\n\t * that reconnections don't get triggered for this.\n\t *\n\t * @api private.\n\t */\n\t\n\tSocket.prototype.destroy = function () {\n\t  if (this.subs) {\n\t    // clean subscriptions to avoid reconnections\n\t    for (var i = 0; i < this.subs.length; i++) {\n\t      this.subs[i].destroy();\n\t    }\n\t    this.subs = null;\n\t  }\n\t\n\t  this.io.destroy(this);\n\t};\n\t\n\t/**\n\t * Disconnects the socket manually.\n\t *\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.close = Socket.prototype.disconnect = function () {\n\t  if (this.connected) {\n\t\n\t    this.packet({ type: parser.DISCONNECT });\n\t  }\n\t\n\t  // remove socket from pool\n\t  this.destroy();\n\t\n\t  if (this.connected) {\n\t    // fire events\n\t    this.onclose('io client disconnect');\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the compress flag.\n\t *\n\t * @param {Boolean} if `true`, compresses the sending data\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.compress = function (compress) {\n\t  this.flags = this.flags || {};\n\t  this.flags.compress = compress;\n\t  return this;\n\t};\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = toArray\n\t\n\tfunction toArray(list, index) {\n\t    var array = []\n\t\n\t    index = index || 0\n\t\n\t    for (var i = index || 0; i < list.length; i++) {\n\t        array[i - index] = list[i]\n\t    }\n\t\n\t    return array\n\t}\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = on;\n\t\n\t/**\n\t * Helper for subscriptions.\n\t *\n\t * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n\t * @param {String} event name\n\t * @param {Function} callback\n\t * @api public\n\t */\n\t\n\tfunction on(obj, ev, fn) {\n\t  obj.on(ev, fn);\n\t  return {\n\t    destroy: function destroy() {\n\t      obj.removeListener(ev, fn);\n\t    }\n\t  };\n\t}\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Slice reference.\n\t */\n\t\n\tvar slice = [].slice;\n\t\n\t/**\n\t * Bind `obj` to `fn`.\n\t *\n\t * @param {Object} obj\n\t * @param {Function|String} fn or string\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(obj, fn){\n\t  if ('string' == typeof fn) fn = obj[fn];\n\t  if ('function' != typeof fn) throw new Error('bind() requires a function');\n\t  var args = slice.call(arguments, 2);\n\t  return function(){\n\t    return fn.apply(obj, args.concat(slice.call(arguments)));\n\t  }\n\t};\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Backoff`.\n\t */\n\t\n\tmodule.exports = Backoff;\n\t\n\t/**\n\t * Initialize backoff timer with `opts`.\n\t *\n\t * - `min` initial timeout in milliseconds [100]\n\t * - `max` max timeout [10000]\n\t * - `jitter` [0]\n\t * - `factor` [2]\n\t *\n\t * @param {Object} opts\n\t * @api public\n\t */\n\t\n\tfunction Backoff(opts) {\n\t  opts = opts || {};\n\t  this.ms = opts.min || 100;\n\t  this.max = opts.max || 10000;\n\t  this.factor = opts.factor || 2;\n\t  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n\t  this.attempts = 0;\n\t}\n\t\n\t/**\n\t * Return the backoff duration.\n\t *\n\t * @return {Number}\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.duration = function(){\n\t  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n\t  if (this.jitter) {\n\t    var rand =  Math.random();\n\t    var deviation = Math.floor(rand * this.jitter * ms);\n\t    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n\t  }\n\t  return Math.min(ms, this.max) | 0;\n\t};\n\t\n\t/**\n\t * Reset the number of attempts.\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.reset = function(){\n\t  this.attempts = 0;\n\t};\n\t\n\t/**\n\t * Set the minimum duration\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setMin = function(min){\n\t  this.ms = min;\n\t};\n\t\n\t/**\n\t * Set the maximum duration\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setMax = function(max){\n\t  this.max = max;\n\t};\n\t\n\t/**\n\t * Set the jitter\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setJitter = function(jitter){\n\t  this.jitter = jitter;\n\t};\n\t\n\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// socket.io.slim.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 88d7fe5ffbf976b6bdd8","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-msgpack-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/index.js","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/url.js","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/parseuri/index.js\n// module id = 2\n// module chunks = 0","\nmodule.exports = function () { return function () {}; };\n\n\n\n// WEBPACK FOOTER //\n// ./support/noop.js","\nvar msgpack = require('notepack.io');\nvar Emitter = require('component-emitter');\n\n/**\n * Packet types (see https://github.com/socketio/socket.io-protocol)\n */\n\nexports.CONNECT = 0;\nexports.DISCONNECT = 1;\nexports.EVENT = 2;\nexports.ACK = 3;\nexports.ERROR = 4;\nexports.BINARY_EVENT = 5;\nexports.BINARY_ACK = 6;\n\nvar isInteger = Number.isInteger || function (value) {\n  return typeof value === 'number' &&\n    isFinite(value) &&\n    Math.floor(value) === value;\n};\n\nvar isString = function (value) { return typeof value === 'string'; };\n\nfunction Encoder () {}\n\nEncoder.prototype.encode = function (packet, callback) {\n  switch (packet.type) {\n    case exports.CONNECT:\n    case exports.DISCONNECT:\n    case exports.ERROR:\n      return callback([ JSON.stringify(packet) ]);\n    default:\n      return callback([ msgpack.encode(packet) ]);\n  }\n};\n\nfunction Decoder () {}\n\nEmitter(Decoder.prototype);\n\nDecoder.prototype.add = function (obj) {\n  if (typeof obj === 'string') {\n    this.parseJSON(obj);\n  } else {\n    this.parseBinary(obj);\n  }\n};\n\nDecoder.prototype.parseJSON = function (obj) {\n  var decoded = JSON.parse(obj);\n  this.checkPacket(decoded);\n  this.emit('decoded', decoded);\n};\n\nDecoder.prototype.parseBinary = function (obj) {\n  var decoded = msgpack.decode(obj);\n  this.checkPacket(decoded);\n  this.emit('decoded', decoded);\n};\n\nfunction isDataValid (decoded) {\n  switch (decoded.type) {\n    case exports.CONNECT:\n    case exports.DISCONNECT:\n      return decoded.data === undefined;\n    case exports.ERROR:\n      return isString(decoded.data);\n    default:\n      return Array.isArray(decoded.data);\n  }\n}\n\nDecoder.prototype.checkPacket = function (decoded) {\n  var isTypeValid = isInteger(decoded.type) && decoded.type >= exports.CONNECT && decoded.type <= exports.BINARY_ACK;\n  if (!isTypeValid) {\n    throw new Error('invalid packet type');\n  }\n\n  if (!isString(decoded.nsp)) {\n    throw new Error('invalid namespace');\n  }\n\n  if (!isDataValid(decoded)) {\n    throw new Error('invalid payload');\n  }\n\n  var isAckValid = decoded.id === undefined || isInteger(decoded.id);\n  if (!isAckValid) {\n    throw new Error('invalid packet id');\n  }\n};\n\nDecoder.prototype.destroy = function () {};\n\nexports.Encoder = Encoder;\nexports.Decoder = Decoder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-msgpack-parser/index.js\n// module id = 4\n// module chunks = 0","exports.encode = require('./encode');\nexports.decode = require('./decode');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/notepack.io/lib/index.js\n// module id = 5\n// module chunks = 0","'use strict';\n\nfunction utf8Write(view, offset, str) {\n  var c = 0;\n  for (var i = 0, l = str.length; i < l; i++) {\n    c = str.charCodeAt(i);\n    if (c < 0x80) {\n      view.setUint8(offset++, c);\n    }\n    else if (c < 0x800) {\n      view.setUint8(offset++, 0xc0 | (c >> 6));\n      view.setUint8(offset++, 0x80 | (c & 0x3f));\n    }\n    else if (c < 0xd800 || c >= 0xe000) {\n      view.setUint8(offset++, 0xe0 | (c >> 12));\n      view.setUint8(offset++, 0x80 | (c >> 6) & 0x3f);\n      view.setUint8(offset++, 0x80 | (c & 0x3f));\n    }\n    else {\n      i++;\n      c = 0x10000 + (((c & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\n      view.setUint8(offset++, 0xf0 | (c >> 18));\n      view.setUint8(offset++, 0x80 | (c >> 12) & 0x3f);\n      view.setUint8(offset++, 0x80 | (c >> 6) & 0x3f);\n      view.setUint8(offset++, 0x80 | (c & 0x3f));\n    }\n  }\n}\n\nfunction utf8Length(str) {\n  var c = 0, length = 0;\n  for (var i = 0, l = str.length; i < l; i++) {\n    c = str.charCodeAt(i);\n    if (c < 0x80) {\n      length += 1;\n    }\n    else if (c < 0x800) {\n      length += 2;\n    }\n    else if (c < 0xd800 || c >= 0xe000) {\n      length += 3;\n    }\n    else {\n      i++;\n      length += 4;\n    }\n  }\n  return length;\n}\n\nfunction _encode(bytes, defers, value) {\n  var type = typeof value, i = 0, l = 0, hi = 0, lo = 0, length = 0, size = 0;\n\n  if (type === 'string') {\n    length = utf8Length(value);\n\n    // fixstr\n    if (length < 0x20) {\n      bytes.push(length | 0xa0);\n      size = 1;\n    }\n    // str 8\n    else if (length < 0x100) {\n      bytes.push(0xd9, length);\n      size = 2;\n    }\n    // str 16\n    else if (length < 0x10000) {\n      bytes.push(0xda, length >> 8, length);\n      size = 3;\n    }\n    // str 32\n    else if (length < 0x100000000) {\n      bytes.push(0xdb, length >> 24, length >> 16, length >> 8, length);\n      size = 5;\n    } else {\n      throw new Error('String too long');\n    }\n    defers.push({ _str: value, _length: length, _offset: bytes.length });\n    return size + length;\n  }\n  if (type === 'number') {\n    // TODO: encode to float 32?\n\n    // float 64\n    if (Math.floor(value) !== value || !isFinite(value)) {\n      bytes.push(0xcb);\n      defers.push({ _float: value, _length: 8, _offset: bytes.length });\n      return 9;\n    }\n\n    if (value >= 0) {\n      // positive fixnum\n      if (value < 0x80) {\n        bytes.push(value);\n        return 1;\n      }\n      // uint 8\n      if (value < 0x100) {\n        bytes.push(0xcc, value);\n        return 2;\n      }\n      // uint 16\n      if (value < 0x10000) {\n        bytes.push(0xcd, value >> 8, value);\n        return 3;\n      }\n      // uint 32\n      if (value < 0x100000000) {\n        bytes.push(0xce, value >> 24, value >> 16, value >> 8, value);\n        return 5;\n      }\n      // uint 64\n      hi = (value / Math.pow(2, 32)) >> 0;\n      lo = value >>> 0;\n      bytes.push(0xcf, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 9;\n    } else {\n      // negative fixnum\n      if (value >= -0x20) {\n        bytes.push(value);\n        return 1;\n      }\n      // int 8\n      if (value >= -0x80) {\n        bytes.push(0xd0, value);\n        return 2;\n      }\n      // int 16\n      if (value >= -0x8000) {\n        bytes.push(0xd1, value >> 8, value);\n        return 3;\n      }\n      // int 32\n      if (value >= -0x80000000) {\n        bytes.push(0xd2, value >> 24, value >> 16, value >> 8, value);\n        return 5;\n      }\n      // int 64\n      hi = Math.floor(value / Math.pow(2, 32));\n      lo = value >>> 0;\n      bytes.push(0xd3, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 9;\n    }\n  }\n  if (type === 'object') {\n    // nil\n    if (value === null) {\n      bytes.push(0xc0);\n      return 1;\n    }\n\n    if (Array.isArray(value)) {\n      length = value.length;\n\n      // fixarray\n      if (length < 0x10) {\n        bytes.push(length | 0x90);\n        size = 1;\n      }\n      // array 16\n      else if (length < 0x10000) {\n        bytes.push(0xdc, length >> 8, length);\n        size = 3;\n      }\n      // array 32\n      else if (length < 0x100000000) {\n        bytes.push(0xdd, length >> 24, length >> 16, length >> 8, length);\n        size = 5;\n      } else {\n        throw new Error('Array too large');\n      }\n      for (i = 0; i < length; i++) {\n        size += _encode(bytes, defers, value[i]);\n      }\n      return size;\n    }\n\n    // fixext 8 / Date\n    if (value instanceof Date) {\n      var time = value.getTime();\n      hi = Math.floor(time / Math.pow(2, 32));\n      lo = time >>> 0;\n      bytes.push(0xd7, 0, hi >> 24, hi >> 16, hi >> 8, hi, lo >> 24, lo >> 16, lo >> 8, lo);\n      return 10;\n    }\n\n    if (value instanceof ArrayBuffer) {\n      length = value.byteLength;\n\n      // bin 8\n      if (length < 0x100) {\n        bytes.push(0xc4, length);\n        size = 2;\n      } else\n      // bin 16\n      if (length < 0x10000) {\n        bytes.push(0xc5, length >> 8, length);\n        size = 3;\n      } else\n      // bin 32\n      if (length < 0x100000000) {\n        bytes.push(0xc6, length >> 24, length >> 16, length >> 8, length);\n        size = 5;\n      } else {\n        throw new Error('Buffer too large');\n      }\n      defers.push({ _bin: value, _length: length, _offset: bytes.length });\n      return size + length;\n    }\n\n    if (typeof value.toJSON === 'function') {\n      return _encode(bytes, defers, value.toJSON());\n    }\n\n    var keys = [], key = '';\n\n    var allKeys = Object.keys(value);\n    for (i = 0, l = allKeys.length; i < l; i++) {\n      key = allKeys[i];\n      if (typeof value[key] !== 'function') {\n        keys.push(key);\n      }\n    }\n    length = keys.length;\n\n    // fixmap\n    if (length < 0x10) {\n      bytes.push(length | 0x80);\n      size = 1;\n    }\n    // map 16\n    else if (length < 0x10000) {\n      bytes.push(0xde, length >> 8, length);\n      size = 3;\n    }\n    // map 32\n    else if (length < 0x100000000) {\n      bytes.push(0xdf, length >> 24, length >> 16, length >> 8, length);\n      size = 5;\n    } else {\n      throw new Error('Object too large');\n    }\n\n    for (i = 0; i < length; i++) {\n      key = keys[i];\n      size += _encode(bytes, defers, key);\n      size += _encode(bytes, defers, value[key]);\n    }\n    return size;\n  }\n  // false/true\n  if (type === 'boolean') {\n    bytes.push(value ? 0xc3 : 0xc2);\n    return 1;\n  }\n  // fixext 1 / undefined\n  if (type === 'undefined') {\n    bytes.push(0xd4, 0, 0);\n    return 3;\n  }\n  throw new Error('Could not encode');\n}\n\nfunction encode(value) {\n  var bytes = [];\n  var defers = [];\n  var size = _encode(bytes, defers, value);\n  var buf = new ArrayBuffer(size);\n  var view = new DataView(buf);\n\n  var deferIndex = 0;\n  var deferWritten = 0;\n  var nextOffset = -1;\n  if (defers.length > 0) {\n    nextOffset = defers[0]._offset;\n  }\n\n  var defer, deferLength = 0, offset = 0;\n  for (var i = 0, l = bytes.length; i < l; i++) {\n    view.setUint8(deferWritten + i, bytes[i]);\n    if (i + 1 !== nextOffset) { continue; }\n    defer = defers[deferIndex];\n    deferLength = defer._length;\n    offset = deferWritten + nextOffset;\n    if (defer._bin) {\n      var bin = new Uint8Array(defer._bin);\n      for (var j = 0; j < deferLength; j++) {\n        view.setUint8(offset + j, bin[j]);\n      }\n    } else if (defer._str) {\n      utf8Write(view, offset, defer._str);\n    } else if (defer._float !== undefined) {\n      view.setFloat64(offset, defer._float);\n    }\n    deferIndex++;\n    deferWritten += deferLength;\n    if (defers[deferIndex]) {\n      nextOffset = defers[deferIndex]._offset;\n    }\n  }\n  return buf;\n}\n\nmodule.exports = encode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/notepack.io/browser/encode.js\n// module id = 6\n// module chunks = 0","'use strict';\n\nfunction Decoder(buffer) {\n  this._offset = 0;\n  if (buffer instanceof ArrayBuffer) {\n    this._buffer = buffer;\n    this._view = new DataView(this._buffer);\n  } else if (ArrayBuffer.isView(buffer)) {\n    this._buffer = buffer.buffer;\n    this._view = new DataView(this._buffer, buffer.byteOffset, buffer.byteLength);\n  } else {\n    throw new Error('Invalid argument');\n  }\n}\n\nfunction utf8Read(view, offset, length) {\n  var string = '', chr = 0;\n  for (var i = offset, end = offset + length; i < end; i++) {\n    var byte = view.getUint8(i);\n    if ((byte & 0x80) === 0x00) {\n      string += String.fromCharCode(byte);\n      continue;\n    }\n    if ((byte & 0xe0) === 0xc0) {\n      string += String.fromCharCode(\n        ((byte & 0x1f) << 6) |\n        (view.getUint8(++i) & 0x3f)\n      );\n      continue;\n    }\n    if ((byte & 0xf0) === 0xe0) {\n      string += String.fromCharCode(\n        ((byte & 0x0f) << 12) |\n        ((view.getUint8(++i) & 0x3f) << 6) |\n        ((view.getUint8(++i) & 0x3f) << 0)\n      );\n      continue;\n    }\n    if ((byte & 0xf8) === 0xf0) {\n      chr = ((byte & 0x07) << 18) |\n        ((view.getUint8(++i) & 0x3f) << 12) |\n        ((view.getUint8(++i) & 0x3f) << 6) |\n        ((view.getUint8(++i) & 0x3f) << 0);\n      if (chr >= 0x010000) { // surrogate pair\n        chr -= 0x010000;\n        string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n      } else {\n        string += String.fromCharCode(chr);\n      }\n      continue;\n    }\n    throw new Error('Invalid byte ' + byte.toString(16));\n  }\n  return string;\n}\n\nDecoder.prototype._array = function (length) {\n  var value = new Array(length);\n  for (var i = 0; i < length; i++) {\n    value[i] = this._parse();\n  }\n  return value;\n};\n\nDecoder.prototype._map = function (length) {\n  var key = '', value = {};\n  for (var i = 0; i < length; i++) {\n    key = this._parse();\n    value[key] = this._parse();\n  }\n  return value;\n};\n\nDecoder.prototype._str = function (length) {\n  var value = utf8Read(this._view, this._offset, length);\n  this._offset += length;\n  return value;\n};\n\nDecoder.prototype._bin = function (length) {\n  var value = this._buffer.slice(this._offset, this._offset + length);\n  this._offset += length;\n  return value;\n};\n\nDecoder.prototype._parse = function () {\n  var prefix = this._view.getUint8(this._offset++);\n  var value, length = 0, type = 0, hi = 0, lo = 0;\n\n  if (prefix < 0xc0) {\n    // positive fixint\n    if (prefix < 0x80) {\n      return prefix;\n    }\n    // fixmap\n    if (prefix < 0x90) {\n      return this._map(prefix & 0x0f);\n    }\n    // fixarray\n    if (prefix < 0xa0) {\n      return this._array(prefix & 0x0f);\n    }\n    // fixstr\n    return this._str(prefix & 0x1f);\n  }\n\n  // negative fixint\n  if (prefix > 0xdf) {\n    return (0xff - prefix + 1) * -1;\n  }\n\n  switch (prefix) {\n    // nil\n    case 0xc0:\n      return null;\n    // false\n    case 0xc2:\n      return false;\n    // true\n    case 0xc3:\n      return true;\n\n    // bin\n    case 0xc4:\n      length = this._view.getUint8(this._offset);\n      this._offset += 1;\n      return this._bin(length);\n    case 0xc5:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._bin(length);\n    case 0xc6:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._bin(length);\n\n    // ext\n    case 0xc7:\n      length = this._view.getUint8(this._offset);\n      type = this._view.getInt8(this._offset + 1);\n      this._offset += 2;\n      return [type, this._bin(length)];\n    case 0xc8:\n      length = this._view.getUint16(this._offset);\n      type = this._view.getInt8(this._offset + 2);\n      this._offset += 3;\n      return [type, this._bin(length)];\n    case 0xc9:\n      length = this._view.getUint32(this._offset);\n      type = this._view.getInt8(this._offset + 4);\n      this._offset += 5;\n      return [type, this._bin(length)];\n\n    // float\n    case 0xca:\n      value = this._view.getFloat32(this._offset);\n      this._offset += 4;\n      return value;\n    case 0xcb:\n      value = this._view.getFloat64(this._offset);\n      this._offset += 8;\n      return value;\n\n    // uint\n    case 0xcc:\n      value = this._view.getUint8(this._offset);\n      this._offset += 1;\n      return value;\n    case 0xcd:\n      value = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return value;\n    case 0xce:\n      value = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return value;\n    case 0xcf:\n      hi = this._view.getUint32(this._offset) * Math.pow(2, 32);\n      lo = this._view.getUint32(this._offset + 4);\n      this._offset += 8;\n      return hi + lo;\n\n    // int\n    case 0xd0:\n      value = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return value;\n    case 0xd1:\n      value = this._view.getInt16(this._offset);\n      this._offset += 2;\n      return value;\n    case 0xd2:\n      value = this._view.getInt32(this._offset);\n      this._offset += 4;\n      return value;\n    case 0xd3:\n      hi = this._view.getInt32(this._offset) * Math.pow(2, 32);\n      lo = this._view.getUint32(this._offset + 4);\n      this._offset += 8;\n      return hi + lo;\n\n    // fixext\n    case 0xd4:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      if (type === 0x00) {\n        this._offset += 1;\n        return void 0;\n      }\n      return [type, this._bin(1)];\n    case 0xd5:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return [type, this._bin(2)];\n    case 0xd6:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return [type, this._bin(4)];\n    case 0xd7:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      if (type === 0x00) {\n        hi = this._view.getInt32(this._offset) * Math.pow(2, 32);\n        lo = this._view.getUint32(this._offset + 4);\n        this._offset += 8;\n        return new Date(hi + lo);\n      }\n      return [type, this._bin(8)];\n    case 0xd8:\n      type = this._view.getInt8(this._offset);\n      this._offset += 1;\n      return [type, this._bin(16)];\n\n    // str\n    case 0xd9:\n      length = this._view.getUint8(this._offset);\n      this._offset += 1;\n      return this._str(length);\n    case 0xda:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._str(length);\n    case 0xdb:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._str(length);\n\n    // array\n    case 0xdc:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._array(length);\n    case 0xdd:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._array(length);\n\n    // map\n    case 0xde:\n      length = this._view.getUint16(this._offset);\n      this._offset += 2;\n      return this._map(length);\n    case 0xdf:\n      length = this._view.getUint32(this._offset);\n      this._offset += 4;\n      return this._map(length);\n  }\n\n  throw new Error('Could not parse');\n};\n\nfunction decode(buffer) {\n  var decoder = new Decoder(buffer);\n  var value = decoder._parse();\n  if (decoder._offset !== buffer.byteLength) {\n    throw new Error((buffer.byteLength - decoder._offset) + ' trailing bytes');\n  }\n  return value;\n}\n\nmodule.exports = decode;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/notepack.io/browser/decode.js\n// module id = 7\n// module chunks = 0","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-msgpack-parser/~/component-emitter/index.js\n// module id = 8\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-msgpack-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n\n  if (~this.readyState.indexOf('open')) return this;\n\n\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n\n\n    // set timer\n    var timer = setTimeout(function () {\n\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/manager.js","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/index.js\n// module id = 10\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (global.location && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global === 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0)\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n\n  var self = this;\n\n  if (this.transport) {\n\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/socket.js\n// module id = 11\n// module chunks = 0","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/index.js\n// module id = 12\n// module chunks = 0","// browser shim for xmlhttprequest module\n\nvar hasCORS = require('has-cors');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/xmlhttprequest.js\n// module id = 13\n// module chunks = 0","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/has-cors/index.js\n// module id = 14\n// module chunks = 0","/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname !== global.location.hostname ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n            if (self.supportsBinary && contentType === 'application/octet-stream') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (global.document) {\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/polling-xhr.js\n// module id = 15\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n\n      total++;\n      this.once('pollComplete', function () {\n\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n\n      total++;\n      this.once('drain', function () {\n\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/polling.js\n// module id = 16\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transport.js\n// module id = 17\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary2');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('./utf8');\n\nvar base64encoder;\nif (typeof ArrayBuffer !== 'undefined') {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/~/engine.io-parser/lib/browser.js\n// module id = 18\n// module chunks = 0","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/~/engine.io-parser/lib/keys.js\n// module id = 19\n// module chunks = 0","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' ||\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' ||\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n    (withNativeBlob && obj instanceof Blob) ||\n    (withNativeFile && obj instanceof File)\n  ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/has-binary2/index.js\n// module id = 20\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/index.js\n// module id = 21\n// module chunks = 0","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-js/index.js\n// module id = 22\n// module chunks = 0","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ieee754/index.js\n// module id = 23\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/buffer/~/isarray/index.js\n// module id = 24\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/has-binary2/~/isarray/index.js\n// module id = 25\n// module chunks = 0","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/arraybuffer.slice/index.js\n// module id = 26\n// module chunks = 0","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/after/index.js\n// module id = 27\n// module chunks = 0","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n\nvar stringFromCharCode = String.fromCharCode;\n\n// Taken from https://mths.be/punycode\nfunction ucs2decode(string) {\n\tvar output = [];\n\tvar counter = 0;\n\tvar length = string.length;\n\tvar value;\n\tvar extra;\n\twhile (counter < length) {\n\t\tvalue = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// high surrogate, and there is a next character\n\t\t\textra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n// Taken from https://mths.be/punycode\nfunction ucs2encode(array) {\n\tvar length = array.length;\n\tvar index = -1;\n\tvar value;\n\tvar output = '';\n\twhile (++index < length) {\n\t\tvalue = array[index];\n\t\tif (value > 0xFFFF) {\n\t\t\tvalue -= 0x10000;\n\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(value);\n\t}\n\treturn output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\tif (strict) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}\n/*--------------------------------------------------------------------------*/\n\nfunction createByte(codePoint, shift) {\n\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\treturn stringFromCharCode(codePoint);\n\t}\n\tvar symbol = '';\n\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t}\n\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\tcodePoint = 0xFFFD;\n\t\t}\n\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\tsymbol += createByte(codePoint, 12);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\treturn symbol;\n}\n\nfunction utf8encode(string, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tvar codePoints = ucs2decode(string);\n\tvar length = codePoints.length;\n\tvar index = -1;\n\tvar codePoint;\n\tvar byteString = '';\n\twhile (++index < length) {\n\t\tcodePoint = codePoints[index];\n\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t}\n\treturn byteString;\n}\n\n/*--------------------------------------------------------------------------*/\n\nfunction readContinuationByte() {\n\tif (byteIndex >= byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\tif ((continuationByte & 0xC0) == 0x80) {\n\t\treturn continuationByte & 0x3F;\n\t}\n\n\t// If we end up here, it’s not a continuation byte\n\tthrow Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n\tvar byte1;\n\tvar byte2;\n\tvar byte3;\n\tvar byte4;\n\tvar codePoint;\n\n\tif (byteIndex > byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tif (byteIndex == byteCount) {\n\t\treturn false;\n\t}\n\n\t// Read first byte\n\tbyte1 = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\t// 1-byte sequence (no continuation bytes)\n\tif ((byte1 & 0x80) == 0) {\n\t\treturn byte1;\n\t}\n\n\t// 2-byte sequence\n\tif ((byte1 & 0xE0) == 0xC0) {\n\t\tbyte2 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\tif (codePoint >= 0x80) {\n\t\t\treturn codePoint;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 3-byte sequence (may include unpaired surrogates)\n\tif ((byte1 & 0xF0) == 0xE0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\tif (codePoint >= 0x0800) {\n\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 4-byte sequence\n\tif ((byte1 & 0xF8) == 0xF0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tbyte4 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t(byte3 << 0x06) | byte4;\n\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\treturn codePoint;\n\t\t}\n\t}\n\n\tthrow Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\nfunction utf8decode(byteString, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tbyteArray = ucs2decode(byteString);\n\tbyteCount = byteArray.length;\n\tbyteIndex = 0;\n\tvar codePoints = [];\n\tvar tmp;\n\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\tcodePoints.push(tmp);\n\t}\n\treturn ucs2encode(codePoints);\n}\n\nmodule.exports = {\n\tversion: '2.1.2',\n\tencode: utf8encode,\n\tdecode: utf8decode\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/~/engine.io-parser/lib/utf8.js\n// module id = 28\n// module chunks = 0","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/base64-arraybuffer/lib/base64-arraybuffer.js\n// module id = 29\n// module chunks = 0","/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\r\n\r\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\r\n  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :\r\n  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\r\n  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : \r\n  false;\r\n\r\n/**\r\n * Check if Blob constructor is supported\r\n */\r\n\r\nvar blobSupported = (function() {\r\n  try {\r\n    var a = new Blob(['hi']);\r\n    return a.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\r\n\r\nvar blobSupportsArrayBufferView = blobSupported && (function() {\r\n  try {\r\n    var b = new Blob([new Uint8Array([1,2])]);\r\n    return b.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if BlobBuilder is supported\r\n */\r\n\r\nvar blobBuilderSupported = BlobBuilder\r\n  && BlobBuilder.prototype.append\r\n  && BlobBuilder.prototype.getBlob;\r\n\r\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\r\n\r\nfunction mapArrayBufferViews(ary) {\r\n  return ary.map(function(chunk) {\r\n    if (chunk.buffer instanceof ArrayBuffer) {\r\n      var buf = chunk.buffer;\r\n\r\n      // if this is a subarray, make a copy so we only\r\n      // include the subarray region from the underlying buffer\r\n      if (chunk.byteLength !== buf.byteLength) {\r\n        var copy = new Uint8Array(chunk.byteLength);\r\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\r\n        buf = copy.buffer;\r\n      }\r\n\r\n      return buf;\r\n    }\r\n\r\n    return chunk;\r\n  });\r\n}\r\n\r\nfunction BlobBuilderConstructor(ary, options) {\r\n  options = options || {};\r\n\r\n  var bb = new BlobBuilder();\r\n  mapArrayBufferViews(ary).forEach(function(part) {\r\n    bb.append(part);\r\n  });\r\n\r\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\r\n};\r\n\r\nfunction BlobConstructor(ary, options) {\r\n  return new Blob(mapArrayBufferViews(ary), options || {});\r\n};\r\n\r\nif (typeof Blob !== 'undefined') {\r\n  BlobBuilderConstructor.prototype = Blob.prototype;\r\n  BlobConstructor.prototype = Blob.prototype;\r\n}\r\n\r\nmodule.exports = (function() {\r\n  if (blobSupported) {\r\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\r\n  } else if (blobBuilderSupported) {\r\n    return BlobBuilderConstructor;\r\n  } else {\r\n    return undefined;\r\n  }\r\n})();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/blob/index.js\n// module id = 30\n// module chunks = 0","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-emitter/index.js\n// module id = 31\n// module chunks = 0","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/parseqs/index.js\n// module id = 32\n// module chunks = 0","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-inherit/index.js\n// module id = 33\n// module chunks = 0","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/yeast/index.js\n// module id = 34\n// module chunks = 0","\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/polling-jsonp.js\n// module id = 35\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\nvar NodeWebSocket;\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket;\nif (!WebSocket && typeof window === 'undefined') {\n  WebSocket = NodeWebSocket;\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocket = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket ? (protocols ? new WebSocket(uri, protocols) : new WebSocket(uri)) : new WebSocket(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/engine.io-client/lib/transports/websocket.js\n// module id = 36\n// module chunks = 0","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/indexof/index.js\n// module id = 38\n// module chunks = 0","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-msgpack-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = { type: parser.EVENT, data: args };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  delete this.flags;\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  if (packet.nsp !== this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n\n\n  if (null != packet.id) {\n\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n\n\n    self.packet({\n      type: parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags = this.flags || {};\n  this.flags.compress = compress;\n  return this;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/socket.js","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/to-array/index.js\n// module id = 40\n// module chunks = 0","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/on.js","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-bind/index.js\n// module id = 42\n// module chunks = 0","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/backo2/index.js\n// module id = 43\n// module chunks = 0"],"sourceRoot":""}